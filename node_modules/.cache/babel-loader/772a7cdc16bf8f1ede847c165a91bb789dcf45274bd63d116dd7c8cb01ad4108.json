{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skank\\\\Videos\\\\Cards\\\\Milchcards\\\\src\\\\components\\\\Dice3D.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * Dice3D – simple WebGL dice rendered with three.js\r\n * Usage:\r\n *   const diceRef = useRef<Dice3DHandle>(null);\r\n *   <Dice3D ref={diceRef} onRoll={(f)=>console.log(f)}/>\r\n *   diceRef.current?.roll();\r\n */\nconst Dice3D = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  size = 180,\n  duration = 1200,\n  onRoll,\n  className\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const sceneRef = useRef();\n  const cubeRef = useRef();\n  const rendererRef = useRef();\n  const cameraRef = useRef();\n  const animIdRef = useRef(0);\n\n  /** helper to create a texture with pips */\n  const createFaceTexture = face => {\n    const size = 128;\n    const cvs = document.createElement('canvas');\n    cvs.width = cvs.height = size;\n    const ctx = cvs.getContext('2d');\n    ctx.fillStyle = '#fff';\n    ctx.fillRect(0, 0, size, size);\n    ctx.fillStyle = '#111';\n    const dot = (x, y) => {\n      ctx.beginPath();\n      ctx.arc(x, y, size * 0.1, 0, Math.PI * 2);\n      ctx.fill();\n    };\n    const g = size * 0.25;\n    const centers = {\n      1: [[size / 2, size / 2]],\n      2: [[g, g], [size - g, size - g]],\n      3: [[g, g], [size / 2, size / 2], [size - g, size - g]],\n      4: [[g, g], [size - g, g], [g, size - g], [size - g, size - g]],\n      5: [[g, g], [size - g, g], [size / 2, size / 2], [g, size - g], [size - g, size - g]],\n      6: [[g, g], [size - g, g], [g, size / 2], [size - g, size / 2], [g, size - g], [size - g, size - g]]\n    };\n    centers[face].forEach(([x, y]) => dot(x, y));\n    const tex = new THREE.CanvasTexture(cvs);\n    tex.needsUpdate = true;\n    return tex;\n  };\n\n  // initialize three scene\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\n    camera.position.z = 4;\n    const renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(size, size);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n    // lights\n    const ambient = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambient);\n    const dir = new THREE.DirectionalLight(0xffffff, 1.0);\n    dir.position.set(5, 10, 7);\n    dir.castShadow = true;\n    dir.shadow.mapSize.width = 1024;\n    dir.shadow.mapSize.height = 1024;\n    dir.shadow.camera.left = -5;\n    dir.shadow.camera.right = 5;\n    dir.shadow.camera.top = 5;\n    dir.shadow.camera.bottom = -5;\n    scene.add(dir);\n\n    // ground plane to receive shadow\n    const planeGeo = new THREE.PlaneGeometry(10, 10);\n    const planeMat = new THREE.ShadowMaterial({\n      opacity: 0.35\n    });\n    const plane = new THREE.Mesh(planeGeo, planeMat);\n    plane.rotation.x = -Math.PI / 2;\n    plane.position.y = -1.1;\n    plane.receiveShadow = true;\n    scene.add(plane);\n\n    // cube\n    const materials = [1, 2, 3, 4, 5, 6].map(f => new THREE.MeshStandardMaterial({\n      map: createFaceTexture(f),\n      metalness: 0.1,\n      roughness: 0.6\n    }));\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\n    const cube = new THREE.Mesh(geometry, materials);\n    cube.castShadow = true;\n    cube.receiveShadow = false;\n    scene.add(cube);\n    sceneRef.current = scene;\n    cubeRef.current = cube;\n    rendererRef.current = renderer;\n    cameraRef.current = camera;\n\n    // animation loop\n    const animate = () => {\n      animIdRef.current = requestAnimationFrame(animate);\n      // subtle idle rotate\n      if (cube) {\n        cube.rotation.x *= 0.995;\n        cube.rotation.y *= 0.995;\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(animIdRef.current);\n      renderer.dispose();\n    };\n  }, [size]);\n\n  // roll logic (includes DOM motion)\n  const rollInternal = targetFace => {\n    if (!cubeRef.current) return;\n    const cube = cubeRef.current;\n    // pick target if not provided\n    const face = targetFace !== null && targetFace !== void 0 ? targetFace : 1 + Math.floor(Math.random() * 6);\n\n    // orientation map: face -> Euler rotation (approx)\n    const orientations = {\n      1: [0, 0, 0],\n      2: [0, Math.PI / 2, 0],\n      3: [-Math.PI / 2, 0, 0],\n      4: [Math.PI / 2, 0, 0],\n      5: [0, -Math.PI / 2, 0],\n      6: [Math.PI, 0, 0]\n    };\n    const [tx, ty, tz] = orientations[face];\n    const start = {\n      x: cube.rotation.x,\n      y: cube.rotation.y,\n      z: cube.rotation.z\n    };\n    const end = {\n      x: tx + 2 * Math.PI,\n      y: ty + 2 * Math.PI,\n      z: tz + 2 * Math.PI\n    };\n    const startTime = performance.now();\n\n    // DOM motion: move canvas across the viewport during roll\n    const canvasEl = canvasRef.current;\n    let originalTransform = '';\n    if (canvasEl && canvasEl.style) {\n      originalTransform = canvasEl.style.transform || '';\n      const fromX = Math.random() * (window.innerWidth - size);\n      const fromY = Math.random() * (window.innerHeight - size);\n      const toX = Math.random() * (window.innerWidth - size);\n      const toY = Math.random() * (window.innerHeight - size);\n      canvasEl.style.position = 'fixed';\n      canvasEl.style.left = '0px';\n      canvasEl.style.top = '0px';\n      canvasEl.style.willChange = 'transform';\n      canvasEl.style.transition = `transform ${duration}ms cubic-bezier(.17,.67,.34,1)`;\n      canvasEl.style.transform = `translate(${fromX}px, ${fromY}px)`;\n      // force layout\n      void canvasEl.offsetWidth;\n      canvasEl.style.transform = `translate(${toX}px, ${toY}px)`;\n    }\n    const animate = () => {\n      const t = (performance.now() - startTime) / duration;\n      if (t >= 1) {\n        cube.rotation.set(tx, ty, tz);\n        // restore DOM\n        if (canvasEl && canvasEl.style) {\n          canvasEl.style.transform = originalTransform;\n          canvasEl.style.transition = '';\n        }\n        if (onRoll) onRoll(face);\n        return;\n      }\n      // easeOutCubic\n      const k = 1 - Math.pow(1 - t, 3);\n      cube.rotation.set(start.x + (end.x - start.x) * k, start.y + (end.y - start.y) * k, start.z + (end.z - start.z) * k);\n      requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n  };\n  useImperativeHandle(ref, () => ({\n    roll: () => rollInternal(),\n    rollTo: face => rollInternal(Math.max(1, Math.min(6, face)))\n  }), [duration, onRoll]);\n\n  // click to roll\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const handler = () => rollInternal();\n    canvas.addEventListener('click', handler);\n    return () => canvas.removeEventListener('click', handler);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: size,\n    height: size,\n    className: className,\n    style: {\n      cursor: 'pointer'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 12\n  }, this);\n}, \"ly5rQgKhkC6yoCpgKv0PQVA/swM=\")), \"ly5rQgKhkC6yoCpgKv0PQVA/swM=\");\n_c2 = Dice3D;\nexport default Dice3D;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dice3D$forwardRef\");\n$RefreshReg$(_c2, \"Dice3D\");","map":{"version":3,"names":["React","useEffect","useRef","useImperativeHandle","forwardRef","THREE","jsxDEV","_jsxDEV","Dice3D","_s","_c","size","duration","onRoll","className","ref","canvasRef","sceneRef","cubeRef","rendererRef","cameraRef","animIdRef","createFaceTexture","face","cvs","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","dot","x","y","beginPath","arc","Math","PI","fill","g","centers","forEach","tex","CanvasTexture","needsUpdate","canvas","current","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","shadowMap","enabled","type","PCFSoftShadowMap","ambient","AmbientLight","add","dir","DirectionalLight","set","castShadow","shadow","mapSize","left","right","top","bottom","planeGeo","PlaneGeometry","planeMat","ShadowMaterial","opacity","plane","Mesh","rotation","receiveShadow","materials","map","f","MeshStandardMaterial","metalness","roughness","geometry","BoxGeometry","cube","animate","requestAnimationFrame","render","cancelAnimationFrame","dispose","rollInternal","targetFace","floor","random","orientations","tx","ty","tz","start","end","startTime","performance","now","canvasEl","originalTransform","style","transform","fromX","window","innerWidth","fromY","innerHeight","toX","toY","willChange","transition","offsetWidth","t","k","pow","roll","rollTo","max","min","handler","addEventListener","removeEventListener","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/Dice3D.tsx"],"sourcesContent":["import React, { useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nexport interface Dice3DProps {\r\n  /** pixel size of canvas */\r\n  size?: number;\r\n  /** roll animation duration in ms */\r\n  duration?: number;\r\n  /** callback when roll ends */\r\n  onRoll?: (face: number) => void;\r\n  className?: string;\r\n}\r\n\r\nexport interface Dice3DHandle {\r\n  roll: () => void;\r\n  rollTo: (face: number) => void;\r\n}\r\n\r\n/**\r\n * Dice3D – simple WebGL dice rendered with three.js\r\n * Usage:\r\n *   const diceRef = useRef<Dice3DHandle>(null);\r\n *   <Dice3D ref={diceRef} onRoll={(f)=>console.log(f)}/>\r\n *   diceRef.current?.roll();\r\n */\r\nconst Dice3D = forwardRef<Dice3DHandle, Dice3DProps>(\r\n  ({ size = 180, duration = 1200, onRoll, className }: Dice3DProps, ref) => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const sceneRef = useRef<THREE.Scene>();\r\n    const cubeRef = useRef<THREE.Mesh>();\r\n    const rendererRef = useRef<THREE.WebGLRenderer>();\r\n    const cameraRef = useRef<THREE.PerspectiveCamera>();\r\n    const animIdRef = useRef(0);\r\n\r\n    /** helper to create a texture with pips */\r\n    const createFaceTexture = (face: number): THREE.Texture => {\r\n      const size = 128;\r\n      const cvs = document.createElement('canvas');\r\n      cvs.width = cvs.height = size;\r\n      const ctx = cvs.getContext('2d')!;\r\n      ctx.fillStyle = '#fff';\r\n      ctx.fillRect(0, 0, size, size);\r\n      ctx.fillStyle = '#111';\r\n\r\n      const dot = (x: number, y: number) => {\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, size * 0.1, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      };\r\n      const g = size * 0.25;\r\n      const centers: Record<number, Array<[number, number]>> = {\r\n        1: [[size / 2, size / 2]],\r\n        2: [[g, g], [size - g, size - g]],\r\n        3: [[g, g], [size / 2, size / 2], [size - g, size - g]],\r\n        4: [[g, g], [size - g, g], [g, size - g], [size - g, size - g]],\r\n        5: [[g, g], [size - g, g], [size / 2, size / 2], [g, size - g], [size - g, size - g]],\r\n        6: [[g, g], [size - g, g], [g, size / 2], [size - g, size / 2], [g, size - g], [size - g, size - g]],\r\n      };\r\n      centers[face].forEach(([x, y]) => dot(x, y));\r\n      const tex = new THREE.CanvasTexture(cvs);\r\n      tex.needsUpdate = true;\r\n      return tex;\r\n    };\r\n\r\n    // initialize three scene\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0x000000);\r\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\r\n      camera.position.z = 4;\r\n      const renderer = new THREE.WebGLRenderer({ canvas, antialias: true, alpha: true });\r\n      renderer.setSize(size, size);\r\n      renderer.shadowMap.enabled = true;\r\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n      // lights\r\n      const ambient = new THREE.AmbientLight(0xffffff, 0.6);\r\n      scene.add(ambient);\r\n      const dir = new THREE.DirectionalLight(0xffffff, 1.0);\r\n      dir.position.set(5, 10, 7);\r\n      dir.castShadow = true;\r\n      dir.shadow.mapSize.width = 1024;\r\n      dir.shadow.mapSize.height = 1024;\r\n      dir.shadow.camera.left = -5;\r\n      dir.shadow.camera.right = 5;\r\n      dir.shadow.camera.top = 5;\r\n      dir.shadow.camera.bottom = -5;\r\n      scene.add(dir);\r\n\r\n      // ground plane to receive shadow\r\n      const planeGeo = new THREE.PlaneGeometry(10, 10);\r\n      const planeMat = new THREE.ShadowMaterial({ opacity: 0.35 });\r\n      const plane = new THREE.Mesh(planeGeo, planeMat);\r\n      plane.rotation.x = -Math.PI / 2;\r\n      plane.position.y = -1.1;\r\n      plane.receiveShadow = true;\r\n      scene.add(plane);\r\n\r\n      // cube\r\n      const materials = [1, 2, 3, 4, 5, 6].map(f => new THREE.MeshStandardMaterial({ map: createFaceTexture(f), metalness: 0.1, roughness: 0.6 }));\r\n      const geometry = new THREE.BoxGeometry(2, 2, 2);\r\n      const cube = new THREE.Mesh(geometry, materials);\r\n      cube.castShadow = true;\r\n      cube.receiveShadow = false;\r\n      scene.add(cube);\r\n\r\n      sceneRef.current = scene;\r\n      cubeRef.current = cube;\r\n      rendererRef.current = renderer;\r\n      cameraRef.current = camera;\r\n\r\n      // animation loop\r\n      const animate = () => {\r\n        animIdRef.current = requestAnimationFrame(animate);\r\n        // subtle idle rotate\r\n        if (cube) {\r\n          cube.rotation.x *= 0.995;\r\n          cube.rotation.y *= 0.995;\r\n        }\r\n        renderer.render(scene, camera);\r\n      };\r\n      animate();\r\n\r\n      return () => {\r\n        cancelAnimationFrame(animIdRef.current);\r\n        renderer.dispose();\r\n      };\r\n    }, [size]);\r\n\r\n    // roll logic (includes DOM motion)\r\n    const rollInternal = (targetFace?: number) => {\r\n      if (!cubeRef.current) return;\r\n      const cube = cubeRef.current;\r\n      // pick target if not provided\r\n      const face = targetFace ?? (1 + Math.floor(Math.random() * 6));\r\n\r\n      // orientation map: face -> Euler rotation (approx)\r\n      const orientations: Record<number, [number, number, number]> = {\r\n        1: [0, 0, 0],\r\n        2: [0, Math.PI / 2, 0],\r\n        3: [-Math.PI / 2, 0, 0],\r\n        4: [Math.PI / 2, 0, 0],\r\n        5: [0, -Math.PI / 2, 0],\r\n        6: [Math.PI, 0, 0],\r\n      };\r\n      const [tx, ty, tz] = orientations[face];\r\n\r\n      const start = { x: cube.rotation.x, y: cube.rotation.y, z: cube.rotation.z };\r\n      const end = { x: tx + 2 * Math.PI, y: ty + 2 * Math.PI, z: tz + 2 * Math.PI };\r\n\r\n      const startTime = performance.now();\r\n\r\n      // DOM motion: move canvas across the viewport during roll\r\n      const canvasEl = canvasRef.current as HTMLCanvasElement | null;\r\n      let originalTransform = '';\r\n      if (canvasEl && canvasEl.style) {\r\n        originalTransform = canvasEl.style.transform || '';\r\n        const fromX = Math.random() * (window.innerWidth - size);\r\n        const fromY = Math.random() * (window.innerHeight - size);\r\n        const toX = Math.random() * (window.innerWidth - size);\r\n        const toY = Math.random() * (window.innerHeight - size);\r\n        canvasEl.style.position = 'fixed';\r\n        canvasEl.style.left = '0px';\r\n        canvasEl.style.top = '0px';\r\n        canvasEl.style.willChange = 'transform';\r\n        canvasEl.style.transition = `transform ${duration}ms cubic-bezier(.17,.67,.34,1)`;\r\n        canvasEl.style.transform = `translate(${fromX}px, ${fromY}px)`;\r\n        // force layout\r\n        void canvasEl.offsetWidth;\r\n        canvasEl.style.transform = `translate(${toX}px, ${toY}px)`;\r\n      }\r\n\r\n      const animate = () => {\r\n        const t = (performance.now() - startTime) / duration;\r\n        if (t >= 1) {\r\n          cube.rotation.set(tx, ty, tz);\r\n          // restore DOM\r\n          if (canvasEl && canvasEl.style) {\r\n            canvasEl.style.transform = originalTransform;\r\n            canvasEl.style.transition = '';\r\n          }\r\n          if (onRoll) onRoll(face);\r\n          return;\r\n        }\r\n        // easeOutCubic\r\n        const k = 1 - Math.pow(1 - t, 3);\r\n        cube.rotation.set(\r\n          start.x + (end.x - start.x) * k,\r\n          start.y + (end.y - start.y) * k,\r\n          start.z + (end.z - start.z) * k,\r\n        );\r\n        requestAnimationFrame(animate);\r\n      };\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      roll: () => rollInternal(),\r\n      rollTo: (face: number) => rollInternal(Math.max(1, Math.min(6, face))),\r\n    }), [duration, onRoll]);\r\n\r\n    // click to roll\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const handler = () => rollInternal();\r\n      canvas.addEventListener('click', handler);\r\n      return () => canvas.removeEventListener('click', handler);\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} width={size} height={size} className={className} style={{ cursor: 'pointer' }} />;\r\n  });\r\n\r\nexport default Dice3D;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}