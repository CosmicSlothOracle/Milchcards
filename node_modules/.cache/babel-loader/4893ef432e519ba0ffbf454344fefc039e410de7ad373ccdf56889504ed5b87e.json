{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skank\\\\Videos\\\\Cards\\\\Milchcards\\\\src\\\\components\\\\CardHoverInfoPanel.tsx\";\nimport React from 'react';\nimport { Specials, Pols } from '../data/gameData';\nimport { getCardDetails } from '../data/cardDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Bigger hover info panel replacing old tooltip.\nexport const CardHoverInfoPanel = ({\n  hovered\n}) => {\n  if (!hovered || !hovered.card) return null;\n  const {\n    card,\n    x,\n    y\n  } = hovered;\n\n  // Decide content based on card kind\n  if (card.kind === 'pol') {\n    const polCard = card;\n    const base = Pols.find(p => p.name === polCard.name || p.key === polCard.key);\n    const baseInf = base ? base.influence : polCard.influence;\n    const delta = polCard.influence - baseInf;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: panelStyle(x, y),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 700,\n          fontSize: 16,\n          marginBottom: 6\n        },\n        children: polCard.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Einfluss: \", polCard.influence, delta !== 0 ? ` (${baseInf} ${delta > 0 ? '+' : ''}${delta})` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Tier: \", polCard.T]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"BP: \", polCard.BP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    const base = Specials.find(s => s.id === card.baseId);\n    const details = getCardDetails((base === null || base === void 0 ? void 0 : base.name) || card.name);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: panelStyle(x, y),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 700,\n          fontSize: 16,\n          marginBottom: 6\n        },\n        children: (base === null || base === void 0 ? void 0 : base.name) || card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#9ca3af',\n          fontSize: 13,\n          maxWidth: 300\n        },\n        children: (details === null || details === void 0 ? void 0 : details.gameEffect) || 'Kein Effekttext vorhanden'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n// Helper style builder\n_c = CardHoverInfoPanel;\nconst panelStyle = (x, y) => ({\n  position: 'fixed',\n  left: x + 16,\n  top: y + 16,\n  pointerEvents: 'none',\n  background: '#0b1220',\n  border: '1px solid #2a3a4e',\n  color: '#dce8f5',\n  padding: '12px 14px',\n  borderRadius: '10px',\n  maxWidth: '460px',\n  fontSize: '14px',\n  zIndex: 50,\n  boxShadow: '0 10px 25px rgba(0,0,0,.45)'\n});\nvar _c;\n$RefreshReg$(_c, \"CardHoverInfoPanel\");","map":{"version":3,"names":["React","Specials","Pols","getCardDetails","jsxDEV","_jsxDEV","CardHoverInfoPanel","hovered","card","x","y","kind","polCard","base","find","p","name","key","baseInf","influence","delta","style","panelStyle","children","fontWeight","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","T","BP","s","id","baseId","details","color","maxWidth","gameEffect","_c","position","left","top","pointerEvents","background","border","padding","borderRadius","zIndex","boxShadow","$RefreshReg$"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/CardHoverInfoPanel.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, PoliticianCard } from '../types/game';\r\nimport { Specials, Pols } from '../data/gameData';\r\nimport { getCardImagePath } from '../data/gameData';\r\nimport { getCardDetails } from '../data/cardDetails';\r\n\r\ninterface HoverData {\r\n  card?: Card;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface CardHoverInfoPanelProps {\r\n  hovered: HoverData | null;\r\n}\r\n\r\n// Bigger hover info panel replacing old tooltip.\r\nexport const CardHoverInfoPanel: React.FC<CardHoverInfoPanelProps> = ({ hovered }) => {\r\n  if (!hovered || !hovered.card) return null;\r\n\r\n  const { card, x, y } = hovered;\r\n\r\n  // Decide content based on card kind\r\n  if (card.kind === 'pol') {\r\n    const polCard = card as PoliticianCard;\r\n    const base = Pols.find(p => p.name === polCard.name || p.key === polCard.key);\r\n    const baseInf = base ? base.influence : polCard.influence;\r\n    const delta = polCard.influence - baseInf;\r\n    return (\r\n      <div style={panelStyle(x, y)}>\r\n        <div style={{ fontWeight: 700, fontSize: 16, marginBottom: 6 }}>{polCard.name}</div>\r\n        <div>Einfluss: {polCard.influence}{delta !== 0 ? ` (${baseInf} ${delta > 0 ? '+' : ''}${delta})` : ''}</div>\r\n        <div>Tier: {polCard.T}</div>\r\n        <div>BP: {polCard.BP}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const base = Specials.find((s: any) => s.id === (card as any).baseId);\r\n    const details = getCardDetails(base?.name || card.name);\r\n    return (\r\n      <div style={panelStyle(x, y)}>\r\n        <div style={{ fontWeight: 700, fontSize: 16, marginBottom: 6 }}>{base?.name || card.name}</div>\r\n        <div style={{ color: '#9ca3af', fontSize: 13, maxWidth: 300 }}>{details?.gameEffect || 'Kein Effekttext vorhanden'}</div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n// Helper style builder\r\nconst panelStyle = (x: number, y: number): React.CSSProperties => ({\r\n  position: 'fixed',\r\n  left: x + 16,\r\n  top: y + 16,\r\n  pointerEvents: 'none',\r\n  background: '#0b1220',\r\n  border: '1px solid #2a3a4e',\r\n  color: '#dce8f5',\r\n  padding: '12px 14px',\r\n  borderRadius: '10px',\r\n  maxWidth: '460px',\r\n  fontSize: '14px',\r\n  zIndex: 50,\r\n  boxShadow: '0 10px 25px rgba(0,0,0,.45)',\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}