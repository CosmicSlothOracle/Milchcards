{"ast":null,"code":"import{SpriteAnimator}from\"./spriteAnimator\";import{P1_PROJECTILE_SRC,P2_PROJECTILE_SRC}from\"./assetRegistry\";export class Projectile{constructor(x,y,vx,vy,owner,imgSrc,framesHint){let atlasImage=arguments.length>7&&arguments[7]!==undefined?arguments[7]:null;let atlasRects=arguments.length>8&&arguments[8]!==undefined?arguments[8]:null;this.x=void 0;this.y=void 0;this.vx=void 0;this.vy=void 0;this.alive=true;this.age=0;this.lifespan=1.0;this.owner=void 0;this.anim=void 0;this.displayW=256;this.displayH=256;this.x=x;this.y=y;this.vx=vx;this.vy=vy;this.owner=owner;const animationDef={src:imgSrc,frames:framesHint,fps:12,loop:true,frameW:256,frameH:256};if(atlasImage&&atlasRects){animationDef.image=atlasImage;animationDef.rects=atlasRects;animationDef.frames=atlasRects.length;animationDef.imageLoaded=true;animationDef.imageBroken=false;}this.anim=new SpriteAnimator(atlasImage,256,256,{fly:animationDef});this.anim.setState(\"fly\");}update(dt){this.age+=dt;this.x+=this.vx*dt;this.y+=this.vy*dt;this.anim.update(dt);if(this.age>=this.lifespan)this.alive=false;}draw(ctx){ctx.save();const alpha=Math.max(0,1-this.age/this.lifespan);ctx.globalAlpha=alpha;// Debug image load state if available\nconst a=this.anim.animations[\"fly\"];// eslint-disable-next-line no-console\nif(a&&a.image&&!a.image.complete)console.debug(\"[qte] projectile image not complete\",{src:a.src,complete:a.image.complete,broken:a.imageBroken});this.anim.draw(ctx,this.x,this.y,this.displayW,this.displayH,this.vx<0);ctx.restore();ctx.globalAlpha=1;}rect(){return{x:this.x,y:this.y,w:this.displayW,h:this.displayH};}}export class Blast{constructor(x,y,imgSrc,framesHint){let atlasImage=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;let atlasRects=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;this.x=void 0;this.y=void 0;this.alive=true;this.timer=void 0;this.anim=void 0;this.w=256;this.h=256;this.x=x;this.y=y;this.timer=framesHint/12;const animationDef={src:imgSrc,frames:framesHint,fps:12,loop:false,frameW:256,frameH:256};if(atlasImage&&atlasRects){animationDef.image=atlasImage;animationDef.rects=atlasRects;animationDef.frames=atlasRects.length;animationDef.imageLoaded=true;animationDef.imageBroken=false;}this.anim=new SpriteAnimator(atlasImage,256,256,{boom:animationDef});this.anim.setState(\"boom\");}update(dt){this.timer-=dt;this.anim.update(dt);if(this.timer<=0)this.alive=false;}draw(ctx){this.anim.draw(ctx,this.x-this.w*0.5,this.y-this.h*0.5,this.w,this.h);}}export class Fighter{constructor(opts){var _opts$muzzleOffset;this.ctx=void 0;this.canvasW=void 0;this.canvasH=void 0;this.x=void 0;this.y=void 0;this.w=256;this.h=256;this.vx=0;this.vy=0;this.facing=1;this.hp=100;this.onGround=false;this.state=\"idle\";this.name=void 0;this.color=void 0;this.keys=void 0;this.anim=void 0;// action flags\nthis.attacking=false;this.parrying=false;this.ranging=false;this.attackLaunched=false;this.rangedLaunched=false;this.muzzleOffset=void 0;// timers\nthis.attackTimer=0;this.rangedTimer=0;this.parryTimer=0;this.parryFreezeTimer=0;this.stunTimer=0;this.parryConsumed=false;this.parryDurationDefault=0.4;this.parryWindowLength=this.parryDurationDefault*0.25;this.stunned=false;this.x=opts.x;this.y=opts.y;this.color=opts.color;this.keys=opts.keys;this.name=opts.name;this.ctx=opts.ctx;this.canvasW=opts.canvasWidth;this.canvasH=opts.canvasHeight;this.muzzleOffset=(_opts$muzzleOffset=opts.muzzleOffset)!==null&&_opts$muzzleOffset!==void 0?_opts$muzzleOffset:{x:36,y:-48};const img=new Image();img.src=opts.spriteConfig.animations.idle.src;this.anim=new SpriteAnimator(img,opts.spriteConfig.frameW,opts.spriteConfig.frameH,opts.spriteConfig.animations);this.anim.setState(\"idle\");}rect(){return{x:this.x,y:this.y,w:this.w,h:this.h};}hitbox(){if(this.state===\"attack\"){const aw=60,ah=40;const ax=this.facing>0?this.x+this.w-10:this.x-(aw-10);const ay=this.y+this.h*0.55-ah*0.5;return{x:ax,y:ay,w:aw,h:ah};}return null;}update(dt,input,projectiles){// Movement & gravity\nif(input[this.keys.left]){this.vx=-150;this.facing=-1;}else if(input[this.keys.right]){this.vx=150;this.facing=1;}else this.vx=0;if(this.onGround&&input[this.keys.up]){this.vy=-350;this.onGround=false;}this.vy+=900*dt;this.x+=this.vx*dt;this.y+=this.vy*dt;// ground collision\nif(this.y+this.h>=this.canvasH-40){this.y=this.canvasH-40-this.h;this.vy=0;this.onGround=true;}// Attack input\nif(input[this.keys.attack]&&!this.attacking){this.attacking=true;this.state=\"attack\";this.anim.setState(\"attack\");this.attackTimer=0.35;}if(this.attacking){this.attackTimer-=dt;if(this.attackTimer<=0)this.attacking=false;}// Ranged input\nif(input[this.keys.ranged]&&!this.ranging){this.ranging=true;this.state=\"ranged\";this.anim.setState(\"ranged\");this.rangedTimer=0.4;this.rangedLaunched=false;}if(this.ranging){this.rangedTimer-=dt;if(!this.rangedLaunched&&this.anim.state===\"ranged\"&&this.anim.frame===this.anim.animations[\"ranged\"].frames-1){this.rangedLaunched=true;// spawn point (muzzle) â€“ use configured muzzleOffset (mirrored by facing)\nconst projW=256,projH=256;const muzzle=this.muzzleOffset||{x:36,y:-48};const centerX=this.x+this.w*0.5+muzzle.x*this.facing;const centerY=this.y+this.h*0.5+muzzle.y;const startX=Math.round(centerX-projW*0.5);const startY=Math.round(centerY-projH*0.5);const speed=600;const vx=this.facing>0?speed:-speed;const imgSrc=this.name===\"P1\"?P1_PROJECTILE_SRC:P2_PROJECTILE_SRC;// Use atlas for projectile if available\nlet projectileImage=null;let projectileRects=null;let projectileFrames=6;// Try to get atlas from owner's animator (will be set after atlas loads)\nif(this.anim&&this.anim.animations.projectile&&this.anim.animations.projectile.rects){projectileImage=this.anim.animations.projectile.image;projectileRects=this.anim.animations.projectile.rects;projectileFrames=this.anim.animations.projectile.rects.length;console.log(\"[qte] Projectile using atlas frames from \".concat(this.name));}else{console.log(\"[qte] Projectile: No atlas frames for 'projectile' in \".concat(this.name,\", falling back to individual image.\"));}const proj=new Projectile(startX,startY,vx,0,this,imgSrc,projectileFrames,projectileImage,projectileRects);// Debug log projectile spawn\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] spawnProjectile\",{owner:this.name,startX,startY,imgSrc,facing:this.facing});const distanceToEdge=this.facing>0?this.canvasW-startX:startX;proj.lifespan=Math.min(1.2,Math.abs(distanceToEdge/speed));projectiles.push(proj);}if(this.rangedTimer<=0)this.ranging=false;}// State machine fallbacks\nif(!this.attacking&&!this.ranging){if(!this.onGround)this.setState(\"jump\");else if(Math.abs(this.vx)>1)this.setState(\"walk\");else this.setState(\"idle\");}// animator update\nthis.anim.update(dt);}draw(){this.anim.draw(this.ctx,this.x,this.y,this.w,this.h,this.facing<0);}setState(s){if(this.state===s)return;this.state=s;this.anim.setState(s);}}","map":{"version":3,"names":["SpriteAnimator","P1_PROJECTILE_SRC","P2_PROJECTILE_SRC","Projectile","constructor","x","y","vx","vy","owner","imgSrc","framesHint","atlasImage","arguments","length","undefined","atlasRects","alive","age","lifespan","anim","displayW","displayH","animationDef","src","frames","fps","loop","frameW","frameH","image","rects","imageLoaded","imageBroken","fly","setState","update","dt","draw","ctx","save","alpha","Math","max","globalAlpha","a","animations","complete","console","debug","broken","restore","rect","w","h","Blast","timer","boom","Fighter","opts","_opts$muzzleOffset","canvasW","canvasH","facing","hp","onGround","state","name","color","keys","attacking","parrying","ranging","attackLaunched","rangedLaunched","muzzleOffset","attackTimer","rangedTimer","parryTimer","parryFreezeTimer","stunTimer","parryConsumed","parryDurationDefault","parryWindowLength","stunned","canvasWidth","canvasHeight","img","Image","spriteConfig","idle","hitbox","aw","ah","ax","ay","input","projectiles","left","right","up","attack","ranged","frame","projW","projH","muzzle","centerX","centerY","startX","round","startY","speed","projectileImage","projectileRects","projectileFrames","projectile","log","concat","proj","distanceToEdge","min","abs","push","s"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/qte/fighter.ts"],"sourcesContent":["import { SpriteAnimator } from \"./spriteAnimator\";\nimport {\n  P1_PROJECTILE_SRC,\n  P2_PROJECTILE_SRC,\n  P1_BLAST_SRC,\n  P2_BLAST_SRC,\n} from \"./assetRegistry\";\n\nexport interface Rect {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport interface FighterOptions {\n  x: number;\n  y: number;\n  color: string;\n  keys: Record<string, string>; // keycodes mapping\n  name: string;\n  spriteConfig: { frameW: number; frameH: number; animations: any };\n  ctx: CanvasRenderingContext2D;\n  canvasWidth: number;\n  canvasHeight: number;\n  muzzleOffset?: { x: number; y: number };\n}\n\nexport class Projectile {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  alive = true;\n  age = 0;\n  lifespan = 1.0;\n  owner: Fighter;\n  anim: SpriteAnimator;\n  displayW = 256;\n  displayH = 256;\n\n  constructor(\n    x: number,\n    y: number,\n    vx: number,\n    vy: number,\n    owner: Fighter,\n    imgSrc: string,\n    framesHint: number,\n    atlasImage: HTMLImageElement | null = null,\n    atlasRects: Rect[] | null = null\n  ) {\n    this.x = x;\n    this.y = y;\n    this.vx = vx;\n    this.vy = vy;\n    this.owner = owner;\n    const animationDef: any = {\n      src: imgSrc,\n      frames: framesHint,\n      fps: 12,\n      loop: true,\n      frameW: 256,\n      frameH: 256,\n    };\n    \n    if (atlasImage && atlasRects) {\n      animationDef.image = atlasImage;\n      animationDef.rects = atlasRects;\n      animationDef.frames = atlasRects.length;\n      animationDef.imageLoaded = true;\n      animationDef.imageBroken = false;\n    }\n    \n    this.anim = new SpriteAnimator(atlasImage, 256, 256, {\n      fly: animationDef,\n    });\n    this.anim.setState(\"fly\");\n  }\n\n  update(dt: number) {\n    this.age += dt;\n    this.x += this.vx * dt;\n    this.y += this.vy * dt;\n    this.anim.update(dt);\n    if (this.age >= this.lifespan) this.alive = false;\n  }\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    const alpha = Math.max(0, 1 - this.age / this.lifespan);\n    ctx.globalAlpha = alpha;\n    // Debug image load state if available\n    const a = this.anim.animations[\"fly\"];\n    // eslint-disable-next-line no-console\n    if (a && a.image && !a.image.complete) console.debug(\"[qte] projectile image not complete\", { src: a.src, complete: a.image.complete, broken: a.imageBroken });\n    this.anim.draw(ctx, this.x, this.y, this.displayW, this.displayH, this.vx < 0);\n    ctx.restore();\n    ctx.globalAlpha = 1;\n  }\n  rect(): Rect {\n    return { x: this.x, y: this.y, w: this.displayW, h: this.displayH };\n  }\n}\n\nexport class Blast {\n  x: number;\n  y: number;\n  alive = true;\n  timer: number;\n  anim: SpriteAnimator;\n  w = 256;\n  h = 256;\n  constructor(x: number, y: number, imgSrc: string, framesHint: number, atlasImage: HTMLImageElement | null = null, atlasRects: Rect[] | null = null) {\n    this.x = x;\n    this.y = y;\n    this.timer = framesHint / 12;\n    \n    const animationDef: any = {\n      src: imgSrc,\n      frames: framesHint,\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    };\n    \n    if (atlasImage && atlasRects) {\n      animationDef.image = atlasImage;\n      animationDef.rects = atlasRects;\n      animationDef.frames = atlasRects.length;\n      animationDef.imageLoaded = true;\n      animationDef.imageBroken = false;\n    }\n    \n    this.anim = new SpriteAnimator(atlasImage, 256, 256, {\n      boom: animationDef,\n    });\n    this.anim.setState(\"boom\");\n  }\n  update(dt: number) {\n    this.timer -= dt;\n    this.anim.update(dt);\n    if (this.timer <= 0) this.alive = false;\n  }\n  draw(ctx: CanvasRenderingContext2D) {\n    this.anim.draw(ctx, this.x - this.w * 0.5, this.y - this.h * 0.5, this.w, this.h);\n  }\n}\n\nexport class Fighter {\n  private ctx: CanvasRenderingContext2D;\n  private canvasW: number;\n  private canvasH: number;\n\n  x: number;\n  y: number;\n  w = 256;\n  h = 256;\n  vx = 0;\n  vy = 0;\n  facing = 1;\n  hp = 100;\n  onGround = false;\n\n  state: string = \"idle\";\n  name: string;\n  color: string;\n  keys: Record<string, string>;\n  anim: SpriteAnimator;\n\n  // action flags\n  attacking = false;\n  parrying = false;\n  ranging = false;\n  attackLaunched = false;\n  rangedLaunched = false;\n  muzzleOffset: { x: number; y: number };\n\n  // timers\n  attackTimer = 0;\n  rangedTimer = 0;\n  parryTimer = 0;\n  parryFreezeTimer = 0;\n  stunTimer = 0;\n  parryConsumed = false;\n  parryDurationDefault = 0.4;\n  parryWindowLength = this.parryDurationDefault * 0.25;\n  stunned = false;\n\n  constructor(opts: FighterOptions) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.color = opts.color;\n    this.keys = opts.keys;\n    this.name = opts.name;\n    this.ctx = opts.ctx;\n    this.canvasW = opts.canvasWidth;\n    this.canvasH = opts.canvasHeight;\n    this.muzzleOffset = opts.muzzleOffset ?? { x: 36, y: -48 };\n\n    const img = new Image();\n    img.src = opts.spriteConfig.animations.idle.src;\n    this.anim = new SpriteAnimator(img, opts.spriteConfig.frameW, opts.spriteConfig.frameH, opts.spriteConfig.animations);\n    this.anim.setState(\"idle\");\n  }\n\n  rect(): Rect {\n    return { x: this.x, y: this.y, w: this.w, h: this.h };\n  }\n\n  hitbox(): Rect | null {\n    if (this.state === \"attack\") {\n      const aw = 60,\n        ah = 40;\n      const ax = this.facing > 0 ? this.x + this.w - 10 : this.x - (aw - 10);\n      const ay = this.y + this.h * 0.55 - ah * 0.5;\n      return { x: ax, y: ay, w: aw, h: ah };\n    }\n    return null;\n  }\n\n  update(dt: number, input: Record<string, boolean>, projectiles: Projectile[]) {\n    // Movement & gravity\n    if (input[this.keys.left]) {\n      this.vx = -150;\n      this.facing = -1;\n    } else if (input[this.keys.right]) {\n      this.vx = 150;\n      this.facing = 1;\n    } else this.vx = 0;\n    if (this.onGround && input[this.keys.up]) {\n      this.vy = -350;\n      this.onGround = false;\n    }\n    this.vy += 900 * dt;\n    this.x += this.vx * dt;\n    this.y += this.vy * dt;\n\n    // ground collision\n    if (this.y + this.h >= this.canvasH - 40) {\n      this.y = this.canvasH - 40 - this.h;\n      this.vy = 0;\n      this.onGround = true;\n    }\n\n    // Attack input\n    if (input[this.keys.attack] && !this.attacking) {\n      this.attacking = true;\n      this.state = \"attack\";\n      this.anim.setState(\"attack\");\n      this.attackTimer = 0.35;\n    }\n    if (this.attacking) {\n      this.attackTimer -= dt;\n      if (this.attackTimer <= 0) this.attacking = false;\n    }\n\n    // Ranged input\n    if (input[this.keys.ranged] && !this.ranging) {\n      this.ranging = true;\n      this.state = \"ranged\";\n      this.anim.setState(\"ranged\");\n      this.rangedTimer = 0.4;\n      this.rangedLaunched = false;\n    }\n    if (this.ranging) {\n      this.rangedTimer -= dt;\n      if (!this.rangedLaunched && this.anim.state === \"ranged\" && this.anim.frame === this.anim.animations[\"ranged\"].frames - 1) {\n        this.rangedLaunched = true;\n        // spawn point (muzzle) â€“ use configured muzzleOffset (mirrored by facing)\n        const projW = 256, projH = 256;\n        const muzzle = this.muzzleOffset || { x: 36, y: -48 };\n        const centerX = this.x + this.w * 0.5 + muzzle.x * this.facing;\n        const centerY = this.y + this.h * 0.5 + muzzle.y;\n        const startX = Math.round(centerX - projW * 0.5);\n        const startY = Math.round(centerY - projH * 0.5);\n        const speed = 600;\n        const vx = this.facing > 0 ? speed : -speed;\n        const imgSrc = this.name === \"P1\" ? P1_PROJECTILE_SRC : P2_PROJECTILE_SRC;\n        // Use atlas for projectile if available\n        let projectileImage = null;\n        let projectileRects = null;\n        let projectileFrames = 6;\n        \n        // Try to get atlas from owner's animator (will be set after atlas loads)\n        if (this.anim && this.anim.animations.projectile && this.anim.animations.projectile.rects) {\n          projectileImage = this.anim.animations.projectile.image;\n          projectileRects = this.anim.animations.projectile.rects;\n          projectileFrames = this.anim.animations.projectile.rects.length;\n          console.log(`[qte] Projectile using atlas frames from ${this.name}`);\n        } else {\n          console.log(`[qte] Projectile: No atlas frames for 'projectile' in ${this.name}, falling back to individual image.`);\n        }\n        \n        const proj = new Projectile(startX, startY, vx, 0, this, imgSrc, projectileFrames, projectileImage, projectileRects);\n        // Debug log projectile spawn\n        // eslint-disable-next-line no-console\n        console.debug(\"[qte] spawnProjectile\", { owner: this.name, startX, startY, imgSrc, facing: this.facing });\n        const distanceToEdge = this.facing > 0 ? this.canvasW - startX : startX;\n        proj.lifespan = Math.min(1.2, Math.abs(distanceToEdge / speed));\n        projectiles.push(proj);\n      }\n      if (this.rangedTimer <= 0) this.ranging = false;\n    }\n\n    // State machine fallbacks\n    if (!this.attacking && !this.ranging) {\n      if (!this.onGround) this.setState(\"jump\");\n      else if (Math.abs(this.vx) > 1) this.setState(\"walk\");\n      else this.setState(\"idle\");\n    }\n\n    // animator update\n    this.anim.update(dt);\n  }\n\n  draw() {\n    this.anim.draw(this.ctx, this.x, this.y, this.w, this.h, this.facing < 0);\n  }\n\n  private setState(s: string) {\n    if (this.state === s) return;\n    this.state = s;\n    this.anim.setState(s);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}