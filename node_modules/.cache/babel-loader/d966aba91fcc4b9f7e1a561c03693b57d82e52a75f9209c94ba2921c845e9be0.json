{"ast":null,"code":"// Central asset registry for QTE demo – can later be replaced by JSON generated list\n\n// --- Asset paths per character folder ----\n// Asset paths are resolved relative to the location of the HTML file (public/qte/index.html).\n// We use relative URLs (no leading slash) to avoid issues when the demo is deployed under a sub-path.\nexport const P1_PROJECTILE_SRC = \"ninja/projectile_256x256_6.png\";\nexport const P1_BLAST_SRC = \"ninja/blast_256x256_4.png\";\nexport const P2_PROJECTILE_SRC = \"cyboard/projectile_256x256_6.png\";\n// cyboard currently has no dedicated blast sprite – fallback to the neutral ninja blast\nexport const P2_BLAST_SRC = \"cyboard/blast_256x256_4.png\";\nfunction framesFromFilename(src, fallback) {\n  const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src || \"\");\n  const n = m ? parseInt(m[1], 10) : NaN;\n  return Number.isFinite(n) ? n : fallback;\n}\nexport function buildSpriteConfig(folder, overrides) {\n  // Ensure no trailing slashes and keep the path RELATIVE (no leading '/')\n  const base = folder.replace(/\\/+$|\\/+$/g, \"\");\n  const anims = {\n    idle: {\n      src: `${base}/idle_256x256_6.png`,\n      frames: framesFromFilename(`${base}/idle_256x256_6.png`, 6),\n      fps: 6,\n      loop: true,\n      frameW: 256,\n      frameH: 256\n    },\n    walk: {\n      src: `${base}/walk_256x256_6.png`,\n      frames: framesFromFilename(`${base}/walk_256x256_6.png`, 6),\n      fps: 10,\n      loop: true,\n      frameW: 256,\n      frameH: 256\n    },\n    jump: {\n      src: `${base}/jump_256x256_8.png`,\n      frames: framesFromFilename(`${base}/jump_256x256_8.png`, 8),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256\n    },\n    attack: {\n      src: `${base}/attack_256x256_7.png`,\n      frames: framesFromFilename(`${base}/attack_256x256_7.png`, 7),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256\n    },\n    parry: {\n      src: `${base}/parry_256x256_6.png`,\n      frames: framesFromFilename(`${base}/parry_256x256_6.png`, 6),\n      fps: 10,\n      loop: false,\n      frameW: 256,\n      frameH: 256\n    },\n    spawn: {\n      src: `${base}/spawn_256x256_6.png`,\n      frames: framesFromFilename(`${base}/spawn_256x256_6.png`, 6),\n      fps: 8,\n      loop: false,\n      frameW: 256,\n      frameH: 256\n    },\n    defeat: {\n      src: `${base}/defeat_256x256_4.png`,\n      frames: framesFromFilename(`${base}/defeat_256x256_4.png`, 4),\n      fps: 6,\n      loop: false,\n      frameW: 256,\n      frameH: 256\n    },\n    projectile: {\n      src: `${base}/projectile_256x256_6.png`,\n      frames: framesFromFilename(`${base}/projectile_256x256_6.png`, 6),\n      fps: 12,\n      loop: true,\n      frameW: 256,\n      frameH: 256\n    },\n    ranged: {\n      src: `${base}/ranged_256x256_4.png`,\n      frames: framesFromFilename(`${base}/ranged_256x256_4.png`, 4),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256\n    },\n    blast: {\n      src: `${base}/blast_256x256_4.png`,\n      frames: framesFromFilename(`${base}/blast_256x256_4.png`, 4),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256\n    }\n  };\n  if (overrides) {\n    for (const k of Object.keys(overrides)) {\n      anims[k] = {\n        ...anims[k],\n        ...overrides[k]\n      };\n    }\n  }\n  return {\n    frameW: 256,\n    frameH: 256,\n    animations: anims\n  };\n}","map":{"version":3,"names":["P1_PROJECTILE_SRC","P1_BLAST_SRC","P2_PROJECTILE_SRC","P2_BLAST_SRC","framesFromFilename","src","fallback","m","exec","n","parseInt","NaN","Number","isFinite","buildSpriteConfig","folder","overrides","base","replace","anims","idle","frames","fps","loop","frameW","frameH","walk","jump","attack","parry","spawn","defeat","projectile","ranged","blast","k","Object","keys","animations"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/qte/assetRegistry.ts"],"sourcesContent":["// Central asset registry for QTE demo – can later be replaced by JSON generated list\nexport type AnimationOverride = Partial<{\n  src: string;\n  frames: number;\n  fps: number;\n  loop: boolean;\n  frameW: number;\n  frameH: number;\n}>;\n\n// --- Asset paths per character folder ----\n// Asset paths are resolved relative to the location of the HTML file (public/qte/index.html).\n// We use relative URLs (no leading slash) to avoid issues when the demo is deployed under a sub-path.\nexport const P1_PROJECTILE_SRC = \"ninja/projectile_256x256_6.png\";\nexport const P1_BLAST_SRC = \"ninja/blast_256x256_4.png\";\n\nexport const P2_PROJECTILE_SRC = \"cyboard/projectile_256x256_6.png\";\n// cyboard currently has no dedicated blast sprite – fallback to the neutral ninja blast\nexport const P2_BLAST_SRC = \"cyboard/blast_256x256_4.png\";\n\nfunction framesFromFilename(src: string, fallback: number): number {\n  const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src || \"\");\n  const n = m ? parseInt(m[1], 10) : NaN;\n  return Number.isFinite(n) ? n : fallback;\n}\n\nexport function buildSpriteConfig(\n  folder: string,\n  overrides?: Record<string, AnimationOverride>\n) {\n  // Ensure no trailing slashes and keep the path RELATIVE (no leading '/')\n  const base = folder.replace(/\\/+$|\\/+$/g, \"\");\n  const anims: Record<string, AnimationOverride> = {\n    idle: {\n      src: `${base}/idle_256x256_6.png`,\n      frames: framesFromFilename(`${base}/idle_256x256_6.png`, 6),\n      fps: 6,\n      loop: true,\n      frameW: 256,\n      frameH: 256,\n    },\n    walk: {\n      src: `${base}/walk_256x256_6.png`,\n      frames: framesFromFilename(`${base}/walk_256x256_6.png`, 6),\n      fps: 10,\n      loop: true,\n      frameW: 256,\n      frameH: 256,\n    },\n    jump: {\n      src: `${base}/jump_256x256_8.png`,\n      frames: framesFromFilename(`${base}/jump_256x256_8.png`, 8),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    },\n    attack: {\n      src: `${base}/attack_256x256_7.png`,\n      frames: framesFromFilename(`${base}/attack_256x256_7.png`, 7),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    },\n    parry: {\n      src: `${base}/parry_256x256_6.png`,\n      frames: framesFromFilename(`${base}/parry_256x256_6.png`, 6),\n      fps: 10,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    },\n    spawn: {\n      src: `${base}/spawn_256x256_6.png`,\n      frames: framesFromFilename(`${base}/spawn_256x256_6.png`, 6),\n      fps: 8,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    },\n    defeat: {\n      src: `${base}/defeat_256x256_4.png`,\n      frames: framesFromFilename(`${base}/defeat_256x256_4.png`, 4),\n      fps: 6,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    },\n    projectile: {\n      src: `${base}/projectile_256x256_6.png`,\n      frames: framesFromFilename(`${base}/projectile_256x256_6.png`, 6),\n      fps: 12,\n      loop: true,\n      frameW: 256,\n      frameH: 256,\n    },\n    ranged: {\n      src: `${base}/ranged_256x256_4.png`,\n      frames: framesFromFilename(`${base}/ranged_256x256_4.png`, 4),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    },\n    blast: {\n      src: `${base}/blast_256x256_4.png`,\n      frames: framesFromFilename(`${base}/blast_256x256_4.png`, 4),\n      fps: 12,\n      loop: false,\n      frameW: 256,\n      frameH: 256,\n    },\n  };\n  if (overrides) {\n    for (const k of Object.keys(overrides)) {\n      anims[k] = { ...anims[k], ...overrides[k] };\n    }\n  }\n  return { frameW: 256, frameH: 256, animations: anims };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}