{"ast":null,"code":"const isPol = c => c && c.kind === 'pol';\nexport const isBoycottTrap = c => c.kind === 'spec' && (c.key === 'boykott_kampagne' || c.name === 'Boykott-Kampagne');\nexport const isSystemrelevant = c => c.kind === 'spec' && (c.key === 'systemrelevant' || c.name === 'Systemrelevant');\nexport function grantOneTimeProtection(target, log) {\n  if (isPol(target)) {\n    target.protected = true;\n    log(`üõ°Ô∏è ${target.name} erh√§lt einmaligen Schutz.`);\n  }\n}\nexport function registerTrap(state, p, trapCard, log) {\n  state.traps[p].push(trapCard);\n  log(`ü™§ ${trapCard.name} wird verdeckt vorbereitet.`);\n}\nexport function checkTrapsOnOpponentPlay(state, owner, playedCardUid, isTargetNGOorPlatform, log) {\n  const traps = state.traps[owner];\n  if (!traps || traps.length === 0) return;\n  const targetAll = [...state.board[1].innen, ...state.board[1].aussen, ...state.board[1].sofort, ...state.board[2].innen, ...state.board[2].aussen, ...state.board[2].sofort];\n  const target = targetAll.find(c => c.uid === playedCardUid);\n  if (!target) return;\n  if (isTargetNGOorPlatform) {\n    if (state.shields && state.shields.has(target.uid)) {\n      state.shields.delete(target.uid);\n      log(`üõ°Ô∏è Schutz hat Boykott verhindert: ${target.name}.`);\n    } else {\n      if (!state._queue) state._queue = [];\n      state._queue.push({\n        type: 'DEACTIVATE_CARD',\n        targetUid: target.uid\n      });\n      log(`‚õî Boykott deaktiviert: ${target.name}.`);\n    }\n    traps.shift();\n  }\n}","map":{"version":3,"names":["isPol","c","kind","isBoycottTrap","key","name","isSystemrelevant","grantOneTimeProtection","target","log","protected","registerTrap","state","p","trapCard","traps","push","checkTrapsOnOpponentPlay","owner","playedCardUid","isTargetNGOorPlatform","length","targetAll","board","innen","aussen","sofort","find","uid","shields","has","delete","_queue","type","targetUid","shift"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/traps.ts"],"sourcesContent":["import { GameState, Player, Card, PoliticianCard } from '../types/game';\r\n\r\nconst isPol = (c: Card): c is PoliticianCard => c && c.kind === 'pol';\r\n\r\nexport const isBoycottTrap = (c: Card) =>\r\n  c.kind === 'spec' && ((c as any).key === 'boykott_kampagne' || c.name === 'Boykott-Kampagne');\r\n\r\nexport const isSystemrelevant = (c: Card) =>\r\n  c.kind === 'spec' && ((c as any).key === 'systemrelevant' || c.name === 'Systemrelevant');\r\n\r\nexport function grantOneTimeProtection(target: Card, log: (msg: string) => void) {\r\n  if (isPol(target)) {\r\n    (target as PoliticianCard).protected = true;\r\n    log(`üõ°Ô∏è ${target.name} erh√§lt einmaligen Schutz.`);\r\n  }\r\n}\r\n\r\nexport function registerTrap(state: GameState, p: Player, trapCard: Card, log: (msg: string) => void) {\r\n  state.traps[p].push(trapCard);\r\n  log(`ü™§ ${trapCard.name} wird verdeckt vorbereitet.`);\r\n}\r\n\r\nexport function checkTrapsOnOpponentPlay(state: GameState, owner: Player, playedCardUid: number, isTargetNGOorPlatform: boolean, log: (m: string) => void) {\r\n  const traps = state.traps[owner];\r\n  if (!traps || traps.length === 0) return;\r\n\r\n  const targetAll = [\r\n    ...state.board[1].innen, ...state.board[1].aussen, ...state.board[1].sofort,\r\n    ...state.board[2].innen, ...state.board[2].aussen, ...state.board[2].sofort,\r\n  ];\r\n  const target = targetAll.find(c => c.uid === playedCardUid);\r\n  if (!target) return;\r\n\r\n  if (isTargetNGOorPlatform) {\r\n    if (state.shields && state.shields.has(target.uid)) {\r\n      state.shields.delete(target.uid);\r\n      log(`üõ°Ô∏è Schutz hat Boykott verhindert: ${target.name}.`);\r\n    } else {\r\n      if (!state._queue) state._queue = [];\r\n      state._queue.push({ type: 'DEACTIVATE_CARD', targetUid: target.uid });\r\n      log(`‚õî Boykott deaktiviert: ${target.name}.`);\r\n    }\r\n    traps.shift();\r\n  }\r\n}"],"mappings":"AAEA,MAAMA,KAAK,GAAIC,CAAO,IAA0BA,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,KAAK;AAErE,OAAO,MAAMC,aAAa,GAAIF,CAAO,IACnCA,CAAC,CAACC,IAAI,KAAK,MAAM,KAAMD,CAAC,CAASG,GAAG,KAAK,kBAAkB,IAAIH,CAAC,CAACI,IAAI,KAAK,kBAAkB,CAAC;AAE/F,OAAO,MAAMC,gBAAgB,GAAIL,CAAO,IACtCA,CAAC,CAACC,IAAI,KAAK,MAAM,KAAMD,CAAC,CAASG,GAAG,KAAK,gBAAgB,IAAIH,CAAC,CAACI,IAAI,KAAK,gBAAgB,CAAC;AAE3F,OAAO,SAASE,sBAAsBA,CAACC,MAAY,EAAEC,GAA0B,EAAE;EAC/E,IAAIT,KAAK,CAACQ,MAAM,CAAC,EAAE;IAChBA,MAAM,CAAoBE,SAAS,GAAG,IAAI;IAC3CD,GAAG,CAAC,OAAOD,MAAM,CAACH,IAAI,4BAA4B,CAAC;EACrD;AACF;AAEA,OAAO,SAASM,YAAYA,CAACC,KAAgB,EAAEC,CAAS,EAAEC,QAAc,EAAEL,GAA0B,EAAE;EACpGG,KAAK,CAACG,KAAK,CAACF,CAAC,CAAC,CAACG,IAAI,CAACF,QAAQ,CAAC;EAC7BL,GAAG,CAAC,MAAMK,QAAQ,CAACT,IAAI,6BAA6B,CAAC;AACvD;AAEA,OAAO,SAASY,wBAAwBA,CAACL,KAAgB,EAAEM,KAAa,EAAEC,aAAqB,EAAEC,qBAA8B,EAAEX,GAAwB,EAAE;EACzJ,MAAMM,KAAK,GAAGH,KAAK,CAACG,KAAK,CAACG,KAAK,CAAC;EAChC,IAAI,CAACH,KAAK,IAAIA,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;EAElC,MAAMC,SAAS,GAAG,CAChB,GAAGV,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,EAAE,GAAGZ,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,EAAE,GAAGb,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM,EAC3E,GAAGd,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,EAAE,GAAGZ,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,EAAE,GAAGb,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM,CAC5E;EACD,MAAMlB,MAAM,GAAGc,SAAS,CAACK,IAAI,CAAC1B,CAAC,IAAIA,CAAC,CAAC2B,GAAG,KAAKT,aAAa,CAAC;EAC3D,IAAI,CAACX,MAAM,EAAE;EAEb,IAAIY,qBAAqB,EAAE;IACzB,IAAIR,KAAK,CAACiB,OAAO,IAAIjB,KAAK,CAACiB,OAAO,CAACC,GAAG,CAACtB,MAAM,CAACoB,GAAG,CAAC,EAAE;MAClDhB,KAAK,CAACiB,OAAO,CAACE,MAAM,CAACvB,MAAM,CAACoB,GAAG,CAAC;MAChCnB,GAAG,CAAC,sCAAsCD,MAAM,CAACH,IAAI,GAAG,CAAC;IAC3D,CAAC,MAAM;MACL,IAAI,CAACO,KAAK,CAACoB,MAAM,EAAEpB,KAAK,CAACoB,MAAM,GAAG,EAAE;MACpCpB,KAAK,CAACoB,MAAM,CAAChB,IAAI,CAAC;QAAEiB,IAAI,EAAE,iBAAiB;QAAEC,SAAS,EAAE1B,MAAM,CAACoB;MAAI,CAAC,CAAC;MACrEnB,GAAG,CAAC,0BAA0BD,MAAM,CAACH,IAAI,GAAG,CAAC;IAC/C;IACAU,KAAK,CAACoB,KAAK,CAAC,CAAC;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}