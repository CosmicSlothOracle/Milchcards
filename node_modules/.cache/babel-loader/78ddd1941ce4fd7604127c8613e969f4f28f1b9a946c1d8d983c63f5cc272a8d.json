{"ast":null,"code":"import{createKeyboardListener,readGamepadsUnified,P1_KEYS,P2_KEYS}from\"./input\";import{buildSpriteConfig,P1_PROJECTILE_SRC,P2_PROJECTILE_SRC,P1_BLAST_SRC,P2_BLAST_SRC}from\"./assetRegistry\";import{loadAtlas}from\"./atlasLoader\";import{Fighter,Blast}from\"./fighter\";export function createGame(canvas){const ctx=canvas.getContext(\"2d\");const WIDTH=canvas.width,HEIGHT=canvas.height;// Debug: log when this module is actually instantiated so we can confirm if the rebuilt module is loaded\n// Visible in the browser console immediately after page load\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] createGame initialized\",{WIDTH,HEIGHT});function clamp(v,min,max){return v<min?min:v>max?max:v;}const input=createKeyboardListener(canvas);const p1Sprite=buildSpriteConfig(\"ninja\");const p2Sprite=buildSpriteConfig(\"cyboard\",{idle:{src:\"cyboard/idle_256x256_4.png\",frames:4,fps:6},walk:{src:\"cyboard/walk_256x256_4.png\",frames:4,fps:10},ranged:{src:\"cyboard/ranged_256x256_4.png\",frames:4,fps:12},parry:{src:\"cyboard/parry_256x256_4.png\",frames:4,fps:10},blast:{src:\"cyboard/blast_256x256_4.png\",frames:4,fps:12}});const projectiles=[];const blasts=[];const p1=new Fighter({x:100,y:HEIGHT-40-256,color:\"#4aa3ff\",keys:P1_KEYS,name:\"P1\",spriteConfig:p1Sprite,ctx,canvasWidth:WIDTH,canvasHeight:HEIGHT,muzzleOffset:{x:36,y:-48}});const p2=new Fighter({x:WIDTH-100-256,y:HEIGHT-40-256,color:\"#ff7a7a\",keys:P2_KEYS,name:\"P2\",spriteConfig:p2Sprite,ctx,canvasWidth:WIDTH,canvasHeight:HEIGHT,muzzleOffset:{x:-36,y:-48}});p2.facing=-1;// Asynchronously load atlases and patch animators once ready\n(async()=>{try{const[atlas1,atlas2]=await Promise.all([loadAtlas(\"ninja\"),loadAtlas(\"cyboard\")]);// helper to merge atlas into animator\nconst patchAnimator=(anim,atlas)=>{anim.defaultImage=atlas.image;for(const state of Object.keys(atlas.animations)){const a=atlas.animations[state];if(!anim.animations[state])anim.animations[state]={frameW:atlas.frameW,frameH:atlas.frameH,frames:a.frames.length,fps:a.fps,loop:a.loop,rects:a.frames,image:atlas.image};else{anim.animations[state].rects=a.frames;anim.animations[state].image=atlas.image;anim.animations[state].frameW=atlas.frameW;anim.animations[state].frameH=atlas.frameH;anim.animations[state].frames=a.frames.length;}}};patchAnimator(p1.anim,atlas1);patchAnimator(p2.anim,atlas2);}catch(e){// eslint-disable-next-line no-console\nconsole.warn(\"[qte] atlas load failed\",e);}})();// Asset diagnostics: after a short delay log the loaded/broken state of important images\nsetTimeout(()=>{try{// eslint-disable-next-line no-console\nconsole.debug(\"[qte] asset diagnostics: checking sprite images\");const dump=(animName,spriteConfig)=>{const keys=Object.keys(spriteConfig.animations||{});keys.forEach(k=>{const a=spriteConfig.animations[k];// eslint-disable-next-line no-console\nconsole.debug(\"[qte] sprite \".concat(animName,\".\").concat(k),{src:a.src,frames:a.frames,fps:a.fps,loaded:!!a.imageLoaded,broken:!!a.imageBroken});});};dump(\"p1\",p1Sprite);dump(\"p2\",p2Sprite);// also log projectile/blast constants\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] constants\",{P1_PROJECTILE_SRC,P2_PROJECTILE_SRC,P1_BLAST_SRC,P2_BLAST_SRC});}catch(e){// eslint-disable-next-line no-console\nconsole.warn(\"[qte] asset diagnostics failed\",e);}},500);function framesFromFilename(src,fallback){try{const m=/_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);const n=m?parseInt(m[1],10):NaN;return Number.isFinite(n)?n:fallback;}catch(e){return fallback;}}let last=performance.now();function loop(now){const dt=Math.min(0.05,(now-last)/1000);last=now;// merge inputs\nconst gp=readGamepadsUnified(P1_KEYS,P2_KEYS);const mergedInput={};function getKeyboard(code){return!!input[code];}[P1_KEYS.left,P1_KEYS.right,P1_KEYS.up,P1_KEYS.down,P1_KEYS.attack,P1_KEYS.parry,P1_KEYS.ranged].forEach(k=>{if(k)mergedInput[k]=!!gp[k]||getKeyboard(k);});[P2_KEYS.left,P2_KEYS.right,P2_KEYS.up,P2_KEYS.down,P2_KEYS.attack,P2_KEYS.parry,P2_KEYS.ranged].forEach(k=>{if(k)mergedInput[k]=!!gp[k]||getKeyboard(k);});// draw background\nctx.fillStyle=\"#071428\";ctx.fillRect(0,0,WIDTH,HEIGHT);ctx.fillStyle=\"#333\";ctx.fillRect(0,HEIGHT-40,WIDTH,40);// update\np1.update(dt,mergedInput,projectiles);p2.update(dt,mergedInput,projectiles);projectiles.forEach(pr=>pr.update(dt));blasts.forEach(b=>b.update(dt));// cleanup\nfor(let i=projectiles.length-1;i>=0;i--)if(!projectiles[i].alive)projectiles.splice(i,1);for(let i=blasts.length-1;i>=0;i--)if(!blasts[i].alive)blasts.splice(i,1);// draw\np1.draw();p2.draw();projectiles.forEach(pr=>pr.draw(ctx));blasts.forEach(b=>b.draw(ctx));// collisions\nconst h1=p1.hitbox(),h2=p2.hitbox();if(h1&&aabb(h1,p2.rect())){if(p2.parrying&&!p2.parryConsumed&&p2.parryTimer>p2.parryDurationDefault-p2.parryWindowLength){p2.parryConsumed=true;p2.parryFreezeTimer=0.12;p1.stunTimer=1.0;}else{p2.hp=clamp(p2.hp-1,0,100);}}if(h2&&aabb(h2,p1.rect())){if(p1.parrying&&!p1.parryConsumed&&p1.parryTimer>p1.parryDurationDefault-p1.parryWindowLength){p1.parryConsumed=true;p1.parryFreezeTimer=0.12;p2.stunTimer=1.0;}else{p1.hp=clamp(p1.hp-1,0,100);}}for(const pr of projectiles){if(!pr.alive)continue;if(pr.owner!==p1&&aabb(pr.rect(),p1.rect())){var _pr$anim$animations$f;p1.hp=clamp(p1.hp-10,0,100);pr.alive=false;// Debug: log hit and blast chosen\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] projectile hit P1\",{projectileSrc:(_pr$anim$animations$f=pr.anim.animations[\"fly\"])===null||_pr$anim$animations$f===void 0?void 0:_pr$anim$animations$f.src,blastSrc:P2_BLAST_SRC});blasts.push(new Blast(p1.x+p1.w*0.5,p1.y+p1.h*0.5,P2_BLAST_SRC,4));}if(pr.owner!==p2&&aabb(pr.rect(),p2.rect())){var _pr$anim$animations$f2;p2.hp=clamp(p2.hp-10,0,100);pr.alive=false;// Debug: log hit and blast chosen\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] projectile hit P2\",{projectileSrc:(_pr$anim$animations$f2=pr.anim.animations[\"fly\"])===null||_pr$anim$animations$f2===void 0?void 0:_pr$anim$animations$f2.src,blastSrc:P1_BLAST_SRC});blasts.push(new Blast(p2.x+p2.w*0.5,p2.y+p2.h*0.5,P1_BLAST_SRC,4));}}// auto-defeat\nif(p1.hp<=0&&p1.state!==\"defeat\"){p1.state=\"defeat\";p1.attacking=false;p1.parrying=false;p1.ranging=false;p1.vx=0;p1.vy=0;p1.anim.setState(\"defeat\");}if(p2.hp<=0&&p2.state!==\"defeat\"){p2.state=\"defeat\";p2.attacking=false;p2.parrying=false;p2.ranging=false;p2.vx=0;p2.vy=0;p2.anim.setState(\"defeat\");}requestAnimationFrame(loop);}requestAnimationFrame(loop);function aabb(a,b){return!(a.x+a.w<b.x||b.x+b.w<a.x||a.y+a.h<b.y||b.y+b.h<a.y);}return{ctx,p1,p2};}","map":{"version":3,"names":["createKeyboardListener","readGamepadsUnified","P1_KEYS","P2_KEYS","buildSpriteConfig","P1_PROJECTILE_SRC","P2_PROJECTILE_SRC","P1_BLAST_SRC","P2_BLAST_SRC","loadAtlas","Fighter","Blast","createGame","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","console","debug","clamp","v","min","max","input","p1Sprite","p2Sprite","idle","src","frames","fps","walk","ranged","parry","blast","projectiles","blasts","p1","x","y","color","keys","name","spriteConfig","canvasWidth","canvasHeight","muzzleOffset","p2","facing","atlas1","atlas2","Promise","all","patchAnimator","anim","atlas","defaultImage","image","state","Object","animations","a","frameW","frameH","length","loop","rects","e","warn","setTimeout","dump","animName","forEach","k","concat","loaded","imageLoaded","broken","imageBroken","framesFromFilename","fallback","m","exec","n","parseInt","NaN","Number","isFinite","last","performance","now","dt","Math","gp","mergedInput","getKeyboard","code","left","right","up","down","attack","fillStyle","fillRect","update","pr","b","i","alive","splice","draw","h1","hitbox","h2","aabb","rect","parrying","parryConsumed","parryTimer","parryDurationDefault","parryWindowLength","parryFreezeTimer","stunTimer","hp","owner","_pr$anim$animations$f","projectileSrc","blastSrc","push","w","h","_pr$anim$animations$f2","attacking","ranging","vx","vy","setState","requestAnimationFrame"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/qte/gameLoop.ts"],"sourcesContent":["import { createKeyboardListener, readGamepadsUnified, P1_KEYS, P2_KEYS } from \"./input\";\r\nimport { buildSpriteConfig, P1_PROJECTILE_SRC, P2_PROJECTILE_SRC, P1_BLAST_SRC, P2_BLAST_SRC } from \"./assetRegistry\";\r\nimport { loadAtlas } from \"./atlasLoader\";\r\nimport { Fighter, Projectile, Blast } from \"./fighter\";\r\n\r\nexport function createGame(canvas: HTMLCanvasElement) {\r\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  const WIDTH = canvas.width, HEIGHT = canvas.height;\r\n  // Debug: log when this module is actually instantiated so we can confirm if the rebuilt module is loaded\r\n  // Visible in the browser console immediately after page load\r\n  // eslint-disable-next-line no-console\r\n  console.debug(\"[qte] createGame initialized\", { WIDTH, HEIGHT });\r\n\r\n  function clamp(v: number, min: number, max: number) {\r\n    return v < min ? min : v > max ? max : v;\r\n  }\r\n\r\n  const input = createKeyboardListener(canvas);\r\n\r\n  const p1Sprite = buildSpriteConfig(\"ninja\");\r\n  const p2Sprite = buildSpriteConfig(\"cyboard\", {\r\n    idle: { src: \"cyboard/idle_256x256_4.png\", frames: 4, fps: 6 },\r\n    walk: { src: \"cyboard/walk_256x256_4.png\", frames: 4, fps: 10 },\r\n    ranged: { src: \"cyboard/ranged_256x256_4.png\", frames: 4, fps: 12 },\r\n    parry: { src: \"cyboard/parry_256x256_4.png\", frames: 4, fps: 10 },\r\n    blast: { src: \"cyboard/blast_256x256_4.png\", frames: 4, fps: 12 },\r\n  });\r\n\r\n  const projectiles: Projectile[] = [];\r\n  const blasts: Blast[] = [];\r\n\r\n  const p1 = new Fighter({ x: 100, y: HEIGHT - 40 - 256, color: \"#4aa3ff\", keys: P1_KEYS as any, name: \"P1\", spriteConfig: p1Sprite, ctx, canvasWidth: WIDTH, canvasHeight: HEIGHT, muzzleOffset: { x: 36, y: -48 } });\r\n  const p2 = new Fighter({ x: WIDTH - 100 - 256, y: HEIGHT - 40 - 256, color: \"#ff7a7a\", keys: P2_KEYS as any, name: \"P2\", spriteConfig: p2Sprite, ctx, canvasWidth: WIDTH, canvasHeight: HEIGHT, muzzleOffset: { x: -36, y: -48 } });\r\n  p2.facing = -1;\r\n\r\n  // Asynchronously load atlases and patch animators once ready\r\n  (async () => {\r\n    try {\r\n      const [atlas1, atlas2] = await Promise.all([\r\n        loadAtlas(\"ninja\"),\r\n        loadAtlas(\"cyboard\"),\r\n      ]);\r\n      // helper to merge atlas into animator\r\n      const patchAnimator = (anim: any, atlas: any) => {\r\n        anim.defaultImage = atlas.image;\r\n        for (const state of Object.keys(atlas.animations)) {\r\n          const a = atlas.animations[state];\r\n          if (!anim.animations[state]) anim.animations[state] = { frameW: atlas.frameW, frameH: atlas.frameH, frames: a.frames.length, fps: a.fps, loop: a.loop, rects: a.frames, image: atlas.image } as any;\r\n          else {\r\n            anim.animations[state].rects = a.frames;\r\n            anim.animations[state].image = atlas.image;\r\n            anim.animations[state].frameW = atlas.frameW;\r\n            anim.animations[state].frameH = atlas.frameH;\r\n            anim.animations[state].frames = a.frames.length;\r\n          }\r\n        }\r\n      };\r\n      patchAnimator(p1.anim, atlas1);\r\n      patchAnimator(p2.anim, atlas2);\r\n    } catch (e) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\"[qte] atlas load failed\", e);\r\n    }\r\n  })();\r\n\r\n  // Asset diagnostics: after a short delay log the loaded/broken state of important images\r\n  setTimeout(() => {\r\n    try {\r\n      // eslint-disable-next-line no-console\r\n      console.debug(\"[qte] asset diagnostics: checking sprite images\");\r\n      const dump = (animName: string, spriteConfig: any) => {\r\n        const keys = Object.keys(spriteConfig.animations || {});\r\n        keys.forEach((k) => {\r\n          const a = spriteConfig.animations[k];\r\n          // eslint-disable-next-line no-console\r\n          console.debug(`[qte] sprite ${animName}.${k}`, { src: a.src, frames: a.frames, fps: a.fps, loaded: !!a.imageLoaded, broken: !!a.imageBroken });\r\n        });\r\n      };\r\n      dump(\"p1\", p1Sprite);\r\n      dump(\"p2\", p2Sprite);\r\n      // also log projectile/blast constants\r\n      // eslint-disable-next-line no-console\r\n      console.debug(\"[qte] constants\", { P1_PROJECTILE_SRC, P2_PROJECTILE_SRC, P1_BLAST_SRC, P2_BLAST_SRC });\r\n    } catch (e) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\"[qte] asset diagnostics failed\", e);\r\n    }\r\n  }, 500);\r\n\r\n  function framesFromFilename(src: string, fallback: number) {\r\n    try {\r\n      const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);\r\n      const n = m ? parseInt(m[1], 10) : NaN;\r\n      return Number.isFinite(n) ? n : fallback;\r\n    } catch (e) {\r\n      return fallback;\r\n    }\r\n  }\r\n\r\n  let last = performance.now();\r\n  function loop(now: number) {\r\n    const dt = Math.min(0.05, (now - last) / 1000);\r\n    last = now;\r\n\r\n    // merge inputs\r\n    const gp = readGamepadsUnified(P1_KEYS as any, P2_KEYS as any);\r\n    const mergedInput: Record<string, boolean> = {};\r\n    function getKeyboard(code: string) {\r\n      return !!input[code];\r\n    }\r\n    [P1_KEYS.left, P1_KEYS.right, P1_KEYS.up, P1_KEYS.down, P1_KEYS.attack, P1_KEYS.parry, P1_KEYS.ranged].forEach((k) => {\r\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\r\n    });\r\n    [P2_KEYS.left, P2_KEYS.right, P2_KEYS.up, P2_KEYS.down, P2_KEYS.attack, P2_KEYS.parry, P2_KEYS.ranged].forEach((k) => {\r\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\r\n    });\r\n\r\n    // draw background\r\n    ctx.fillStyle = \"#071428\";\r\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n    ctx.fillStyle = \"#333\";\r\n    ctx.fillRect(0, HEIGHT - 40, WIDTH, 40);\r\n\r\n    // update\r\n    p1.update(dt, mergedInput, projectiles);\r\n    p2.update(dt, mergedInput, projectiles);\r\n\r\n    projectiles.forEach((pr) => pr.update(dt));\r\n    blasts.forEach((b) => b.update(dt));\r\n\r\n    // cleanup\r\n    for (let i = projectiles.length - 1; i >= 0; i--) if (!projectiles[i].alive) projectiles.splice(i, 1);\r\n    for (let i = blasts.length - 1; i >= 0; i--) if (!blasts[i].alive) blasts.splice(i, 1);\r\n\r\n    // draw\r\n    p1.draw();\r\n    p2.draw();\r\n    projectiles.forEach((pr) => pr.draw(ctx));\r\n    blasts.forEach((b) => b.draw(ctx));\r\n\r\n    // collisions\r\n    const h1 = p1.hitbox(), h2 = p2.hitbox();\r\n    if (h1 && aabb(h1, p2.rect())) {\r\n      if (p2.parrying && !p2.parryConsumed && p2.parryTimer > p2.parryDurationDefault - p2.parryWindowLength) {\r\n        p2.parryConsumed = true;\r\n        p2.parryFreezeTimer = 0.12;\r\n        p1.stunTimer = 1.0;\r\n      } else {\r\n        p2.hp = clamp(p2.hp - 1, 0, 100);\r\n      }\r\n    }\r\n    if (h2 && aabb(h2, p1.rect())) {\r\n      if (p1.parrying && !p1.parryConsumed && p1.parryTimer > p1.parryDurationDefault - p1.parryWindowLength) {\r\n        p1.parryConsumed = true;\r\n        p1.parryFreezeTimer = 0.12;\r\n        p2.stunTimer = 1.0;\r\n      } else {\r\n        p1.hp = clamp(p1.hp - 1, 0, 100);\r\n      }\r\n    }\r\n\r\n    for (const pr of projectiles) {\r\n      if (!pr.alive) continue;\r\n      if (pr.owner !== p1 && aabb(pr.rect(), p1.rect())) {\r\n        p1.hp = clamp(p1.hp - 10, 0, 100);\r\n        pr.alive = false;\r\n        // Debug: log hit and blast chosen\r\n        // eslint-disable-next-line no-console\r\n        console.debug(\"[qte] projectile hit P1\", { projectileSrc: pr.anim.animations[\"fly\"]?.src, blastSrc: P2_BLAST_SRC });\r\n        blasts.push(new Blast(p1.x + p1.w * 0.5, p1.y + p1.h * 0.5, P2_BLAST_SRC, 4));\r\n      }\r\n      if (pr.owner !== p2 && aabb(pr.rect(), p2.rect())) {\r\n        p2.hp = clamp(p2.hp - 10, 0, 100);\r\n        pr.alive = false;\r\n        // Debug: log hit and blast chosen\r\n        // eslint-disable-next-line no-console\r\n        console.debug(\"[qte] projectile hit P2\", { projectileSrc: pr.anim.animations[\"fly\"]?.src, blastSrc: P1_BLAST_SRC });\r\n        blasts.push(new Blast(p2.x + p2.w * 0.5, p2.y + p2.h * 0.5, P1_BLAST_SRC, 4));\r\n      }\r\n    }\r\n\r\n    // auto-defeat\r\n    if (p1.hp <= 0 && p1.state !== \"defeat\") {\r\n      p1.state = \"defeat\";\r\n      p1.attacking = false;\r\n      p1.parrying = false;\r\n      p1.ranging = false;\r\n      p1.vx = 0;\r\n      p1.vy = 0;\r\n      p1.anim.setState(\"defeat\");\r\n    }\r\n    if (p2.hp <= 0 && p2.state !== \"defeat\") {\r\n      p2.state = \"defeat\";\r\n      p2.attacking = false;\r\n      p2.parrying = false;\r\n      p2.ranging = false;\r\n      p2.vx = 0;\r\n      p2.vy = 0;\r\n      p2.anim.setState(\"defeat\");\r\n    }\r\n\r\n    requestAnimationFrame(loop);\r\n  }\r\n\r\n  requestAnimationFrame(loop);\r\n\r\n  function aabb(a: { x: number; y: number; w: number; h: number }, b: { x: number; y: number; w: number; h: number }) {\r\n    return !(a.x + a.w < b.x || b.x + b.w < a.x || a.y + a.h < b.y || b.y + b.h < a.y);\r\n  }\r\n\r\n  return { ctx, p1, p2 };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}