{"ast":null,"code":"import { createKeyboardListener, readGamepadsUnified, P1_KEYS, P2_KEYS } from \"./input\";\nimport { buildSpriteConfig, P1_PROJECTILE_SRC, P2_PROJECTILE_SRC, P1_BLAST_SRC, P2_BLAST_SRC } from \"./assetRegistry\";\nimport { Fighter, Blast } from \"./fighter\";\nexport function createGame(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  const WIDTH = canvas.width,\n    HEIGHT = canvas.height;\n  // Debug: log when this module is actually instantiated so we can confirm if the rebuilt module is loaded\n  // Visible in the browser console immediately after page load\n  // eslint-disable-next-line no-console\n  console.debug(\"[qte] createGame initialized\", {\n    WIDTH,\n    HEIGHT\n  });\n  function clamp(v, min, max) {\n    return v < min ? min : v > max ? max : v;\n  }\n  const input = createKeyboardListener(canvas);\n  const p1Sprite = buildSpriteConfig(\"ninja\");\n  const p2Sprite = buildSpriteConfig(\"cyboard\", {\n    idle: {\n      src: \"cyboard/idle_256x256_4.png\",\n      frames: 4,\n      fps: 6\n    },\n    walk: {\n      src: \"cyboard/walk_256x256_4.png\",\n      frames: 4,\n      fps: 10\n    },\n    ranged: {\n      src: \"cyboard/ranged_256x256_4.png\",\n      frames: 4,\n      fps: 12\n    },\n    parry: {\n      src: \"cyboard/parry_256x256_4.png\",\n      frames: 4,\n      fps: 10\n    },\n    blast: {\n      src: \"cyboard/blast_256x256_4.png\",\n      frames: 4,\n      fps: 12\n    }\n  });\n  const projectiles = [];\n  const blasts = [];\n  const p1 = new Fighter({\n    x: 100,\n    y: HEIGHT - 40 - 256,\n    color: \"#4aa3ff\",\n    keys: P1_KEYS,\n    name: \"P1\",\n    spriteConfig: p1Sprite,\n    ctx,\n    canvasWidth: WIDTH,\n    canvasHeight: HEIGHT,\n    muzzleOffset: {\n      x: 36,\n      y: -48\n    }\n  });\n  const p2 = new Fighter({\n    x: WIDTH - 100 - 256,\n    y: HEIGHT - 40 - 256,\n    color: \"#ff7a7a\",\n    keys: P2_KEYS,\n    name: \"P2\",\n    spriteConfig: p2Sprite,\n    ctx,\n    canvasWidth: WIDTH,\n    canvasHeight: HEIGHT,\n    muzzleOffset: {\n      x: -36,\n      y: -48\n    }\n  });\n  p2.facing = -1;\n\n  // Asset diagnostics: after a short delay log the loaded/broken state of important images\n  setTimeout(() => {\n    try {\n      // eslint-disable-next-line no-console\n      console.debug(\"[qte] asset diagnostics: checking sprite images\");\n      const dump = (animName, spriteConfig) => {\n        const keys = Object.keys(spriteConfig.animations || {});\n        keys.forEach(k => {\n          const a = spriteConfig.animations[k];\n          // eslint-disable-next-line no-console\n          console.debug(`[qte] sprite ${animName}.${k}`, {\n            src: a.src,\n            frames: a.frames,\n            fps: a.fps,\n            loaded: !!a.imageLoaded,\n            broken: !!a.imageBroken\n          });\n        });\n      };\n      dump(\"p1\", p1Sprite);\n      dump(\"p2\", p2Sprite);\n      // also log projectile/blast constants\n      // eslint-disable-next-line no-console\n      console.debug(\"[qte] constants\", {\n        P1_PROJECTILE_SRC,\n        P2_PROJECTILE_SRC,\n        P1_BLAST_SRC,\n        P2_BLAST_SRC\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[qte] asset diagnostics failed\", e);\n    }\n  }, 500);\n  function framesFromFilename(src, fallback) {\n    try {\n      const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);\n      const n = m ? parseInt(m[1], 10) : NaN;\n      return Number.isFinite(n) ? n : fallback;\n    } catch (e) {\n      return fallback;\n    }\n  }\n  let last = performance.now();\n  function loop(now) {\n    const dt = Math.min(0.05, (now - last) / 1000);\n    last = now;\n\n    // merge inputs\n    const gp = readGamepadsUnified(P1_KEYS, P2_KEYS);\n    const mergedInput = {};\n    function getKeyboard(code) {\n      return !!input[code];\n    }\n    [P1_KEYS.left, P1_KEYS.right, P1_KEYS.up, P1_KEYS.down, P1_KEYS.attack, P1_KEYS.parry, P1_KEYS.ranged].forEach(k => {\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\n    });\n    [P2_KEYS.left, P2_KEYS.right, P2_KEYS.up, P2_KEYS.down, P2_KEYS.attack, P2_KEYS.parry, P2_KEYS.ranged].forEach(k => {\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\n    });\n\n    // draw background\n    ctx.fillStyle = \"#071428\";\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    ctx.fillStyle = \"#333\";\n    ctx.fillRect(0, HEIGHT - 40, WIDTH, 40);\n\n    // update\n    p1.update(dt, mergedInput, projectiles);\n    p2.update(dt, mergedInput, projectiles);\n    projectiles.forEach(pr => pr.update(dt));\n    blasts.forEach(b => b.update(dt));\n\n    // cleanup\n    for (let i = projectiles.length - 1; i >= 0; i--) if (!projectiles[i].alive) projectiles.splice(i, 1);\n    for (let i = blasts.length - 1; i >= 0; i--) if (!blasts[i].alive) blasts.splice(i, 1);\n\n    // draw\n    p1.draw();\n    p2.draw();\n    projectiles.forEach(pr => pr.draw(ctx));\n    blasts.forEach(b => b.draw(ctx));\n\n    // collisions\n    const h1 = p1.hitbox(),\n      h2 = p2.hitbox();\n    if (h1 && aabb(h1, p2.rect())) {\n      if (p2.parrying && !p2.parryConsumed && p2.parryTimer > p2.parryDurationDefault - p2.parryWindowLength) {\n        p2.parryConsumed = true;\n        p2.parryFreezeTimer = 0.12;\n        p1.stunTimer = 1.0;\n      } else {\n        p2.hp = clamp(p2.hp - 1, 0, 100);\n      }\n    }\n    if (h2 && aabb(h2, p1.rect())) {\n      if (p1.parrying && !p1.parryConsumed && p1.parryTimer > p1.parryDurationDefault - p1.parryWindowLength) {\n        p1.parryConsumed = true;\n        p1.parryFreezeTimer = 0.12;\n        p2.stunTimer = 1.0;\n      } else {\n        p1.hp = clamp(p1.hp - 1, 0, 100);\n      }\n    }\n    for (const pr of projectiles) {\n      if (!pr.alive) continue;\n      if (pr.owner !== p1 && aabb(pr.rect(), p1.rect())) {\n        var _pr$anim$animations$f;\n        p1.hp = clamp(p1.hp - 10, 0, 100);\n        pr.alive = false;\n        // Debug: log hit and blast chosen\n        // eslint-disable-next-line no-console\n        console.debug(\"[qte] projectile hit P1\", {\n          projectileSrc: (_pr$anim$animations$f = pr.anim.animations[\"fly\"]) === null || _pr$anim$animations$f === void 0 ? void 0 : _pr$anim$animations$f.src,\n          blastSrc: P2_BLAST_SRC\n        });\n        blasts.push(new Blast(p1.x + p1.w * 0.5, p1.y + p1.h * 0.5, P2_BLAST_SRC, 4));\n      }\n      if (pr.owner !== p2 && aabb(pr.rect(), p2.rect())) {\n        var _pr$anim$animations$f2;\n        p2.hp = clamp(p2.hp - 10, 0, 100);\n        pr.alive = false;\n        // Debug: log hit and blast chosen\n        // eslint-disable-next-line no-console\n        console.debug(\"[qte] projectile hit P2\", {\n          projectileSrc: (_pr$anim$animations$f2 = pr.anim.animations[\"fly\"]) === null || _pr$anim$animations$f2 === void 0 ? void 0 : _pr$anim$animations$f2.src,\n          blastSrc: P1_BLAST_SRC\n        });\n        blasts.push(new Blast(p2.x + p2.w * 0.5, p2.y + p2.h * 0.5, P1_BLAST_SRC, 4));\n      }\n    }\n\n    // auto-defeat\n    if (p1.hp <= 0 && p1.state !== \"defeat\") {\n      p1.state = \"defeat\";\n      p1.attacking = false;\n      p1.parrying = false;\n      p1.ranging = false;\n      p1.vx = 0;\n      p1.vy = 0;\n      p1.anim.setState(\"defeat\");\n    }\n    if (p2.hp <= 0 && p2.state !== \"defeat\") {\n      p2.state = \"defeat\";\n      p2.attacking = false;\n      p2.parrying = false;\n      p2.ranging = false;\n      p2.vx = 0;\n      p2.vy = 0;\n      p2.anim.setState(\"defeat\");\n    }\n    requestAnimationFrame(loop);\n  }\n  requestAnimationFrame(loop);\n  function aabb(a, b) {\n    return !(a.x + a.w < b.x || b.x + b.w < a.x || a.y + a.h < b.y || b.y + b.h < a.y);\n  }\n  return {\n    ctx,\n    p1,\n    p2\n  };\n}","map":{"version":3,"names":["createKeyboardListener","readGamepadsUnified","P1_KEYS","P2_KEYS","buildSpriteConfig","P1_PROJECTILE_SRC","P2_PROJECTILE_SRC","P1_BLAST_SRC","P2_BLAST_SRC","Fighter","Blast","createGame","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","console","debug","clamp","v","min","max","input","p1Sprite","p2Sprite","idle","src","frames","fps","walk","ranged","parry","blast","projectiles","blasts","p1","x","y","color","keys","name","spriteConfig","canvasWidth","canvasHeight","muzzleOffset","p2","facing","setTimeout","dump","animName","Object","animations","forEach","k","a","loaded","imageLoaded","broken","imageBroken","e","warn","framesFromFilename","fallback","m","exec","n","parseInt","NaN","Number","isFinite","last","performance","now","loop","dt","Math","gp","mergedInput","getKeyboard","code","left","right","up","down","attack","fillStyle","fillRect","update","pr","b","i","length","alive","splice","draw","h1","hitbox","h2","aabb","rect","parrying","parryConsumed","parryTimer","parryDurationDefault","parryWindowLength","parryFreezeTimer","stunTimer","hp","owner","_pr$anim$animations$f","projectileSrc","anim","blastSrc","push","w","h","_pr$anim$animations$f2","state","attacking","ranging","vx","vy","setState","requestAnimationFrame"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/qte/gameLoop.ts"],"sourcesContent":["import { createKeyboardListener, readGamepadsUnified, P1_KEYS, P2_KEYS } from \"./input\";\r\nimport { buildSpriteConfig, P1_PROJECTILE_SRC, P2_PROJECTILE_SRC, P1_BLAST_SRC, P2_BLAST_SRC } from \"./assetRegistry\";\r\nimport { Fighter, Projectile, Blast } from \"./fighter\";\r\n\r\nexport function createGame(canvas: HTMLCanvasElement) {\r\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  const WIDTH = canvas.width, HEIGHT = canvas.height;\r\n  // Debug: log when this module is actually instantiated so we can confirm if the rebuilt module is loaded\r\n  // Visible in the browser console immediately after page load\r\n  // eslint-disable-next-line no-console\r\n  console.debug(\"[qte] createGame initialized\", { WIDTH, HEIGHT });\r\n\r\n  function clamp(v: number, min: number, max: number) {\r\n    return v < min ? min : v > max ? max : v;\r\n  }\r\n\r\n  const input = createKeyboardListener(canvas);\r\n\r\n  const p1Sprite = buildSpriteConfig(\"ninja\");\r\n  const p2Sprite = buildSpriteConfig(\"cyboard\", {\r\n    idle: { src: \"cyboard/idle_256x256_4.png\", frames: 4, fps: 6 },\r\n    walk: { src: \"cyboard/walk_256x256_4.png\", frames: 4, fps: 10 },\r\n    ranged: { src: \"cyboard/ranged_256x256_4.png\", frames: 4, fps: 12 },\r\n    parry: { src: \"cyboard/parry_256x256_4.png\", frames: 4, fps: 10 },\r\n    blast: { src: \"cyboard/blast_256x256_4.png\", frames: 4, fps: 12 },\r\n  });\r\n\r\n  const projectiles: Projectile[] = [];\r\n  const blasts: Blast[] = [];\r\n\r\n  const p1 = new Fighter({ x: 100, y: HEIGHT - 40 - 256, color: \"#4aa3ff\", keys: P1_KEYS as any, name: \"P1\", spriteConfig: p1Sprite, ctx, canvasWidth: WIDTH, canvasHeight: HEIGHT, muzzleOffset: { x: 36, y: -48 } });\r\n  const p2 = new Fighter({ x: WIDTH - 100 - 256, y: HEIGHT - 40 - 256, color: \"#ff7a7a\", keys: P2_KEYS as any, name: \"P2\", spriteConfig: p2Sprite, ctx, canvasWidth: WIDTH, canvasHeight: HEIGHT, muzzleOffset: { x: -36, y: -48 } });\r\n  p2.facing = -1;\r\n\r\n  // Asset diagnostics: after a short delay log the loaded/broken state of important images\r\n  setTimeout(() => {\r\n    try {\r\n      // eslint-disable-next-line no-console\r\n      console.debug(\"[qte] asset diagnostics: checking sprite images\");\r\n      const dump = (animName: string, spriteConfig: any) => {\r\n        const keys = Object.keys(spriteConfig.animations || {});\r\n        keys.forEach((k) => {\r\n          const a = spriteConfig.animations[k];\r\n          // eslint-disable-next-line no-console\r\n          console.debug(`[qte] sprite ${animName}.${k}`, { src: a.src, frames: a.frames, fps: a.fps, loaded: !!a.imageLoaded, broken: !!a.imageBroken });\r\n        });\r\n      };\r\n      dump(\"p1\", p1Sprite);\r\n      dump(\"p2\", p2Sprite);\r\n      // also log projectile/blast constants\r\n      // eslint-disable-next-line no-console\r\n      console.debug(\"[qte] constants\", { P1_PROJECTILE_SRC, P2_PROJECTILE_SRC, P1_BLAST_SRC, P2_BLAST_SRC });\r\n    } catch (e) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\"[qte] asset diagnostics failed\", e);\r\n    }\r\n  }, 500);\r\n\r\n  function framesFromFilename(src: string, fallback: number) {\r\n    try {\r\n      const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);\r\n      const n = m ? parseInt(m[1], 10) : NaN;\r\n      return Number.isFinite(n) ? n : fallback;\r\n    } catch (e) {\r\n      return fallback;\r\n    }\r\n  }\r\n\r\n  let last = performance.now();\r\n  function loop(now: number) {\r\n    const dt = Math.min(0.05, (now - last) / 1000);\r\n    last = now;\r\n\r\n    // merge inputs\r\n    const gp = readGamepadsUnified(P1_KEYS as any, P2_KEYS as any);\r\n    const mergedInput: Record<string, boolean> = {};\r\n    function getKeyboard(code: string) {\r\n      return !!input[code];\r\n    }\r\n    [P1_KEYS.left, P1_KEYS.right, P1_KEYS.up, P1_KEYS.down, P1_KEYS.attack, P1_KEYS.parry, P1_KEYS.ranged].forEach((k) => {\r\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\r\n    });\r\n    [P2_KEYS.left, P2_KEYS.right, P2_KEYS.up, P2_KEYS.down, P2_KEYS.attack, P2_KEYS.parry, P2_KEYS.ranged].forEach((k) => {\r\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\r\n    });\r\n\r\n    // draw background\r\n    ctx.fillStyle = \"#071428\";\r\n    ctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n    ctx.fillStyle = \"#333\";\r\n    ctx.fillRect(0, HEIGHT - 40, WIDTH, 40);\r\n\r\n    // update\r\n    p1.update(dt, mergedInput, projectiles);\r\n    p2.update(dt, mergedInput, projectiles);\r\n\r\n    projectiles.forEach((pr) => pr.update(dt));\r\n    blasts.forEach((b) => b.update(dt));\r\n\r\n    // cleanup\r\n    for (let i = projectiles.length - 1; i >= 0; i--) if (!projectiles[i].alive) projectiles.splice(i, 1);\r\n    for (let i = blasts.length - 1; i >= 0; i--) if (!blasts[i].alive) blasts.splice(i, 1);\r\n\r\n    // draw\r\n    p1.draw();\r\n    p2.draw();\r\n    projectiles.forEach((pr) => pr.draw(ctx));\r\n    blasts.forEach((b) => b.draw(ctx));\r\n\r\n    // collisions\r\n    const h1 = p1.hitbox(), h2 = p2.hitbox();\r\n    if (h1 && aabb(h1, p2.rect())) {\r\n      if (p2.parrying && !p2.parryConsumed && p2.parryTimer > p2.parryDurationDefault - p2.parryWindowLength) {\r\n        p2.parryConsumed = true;\r\n        p2.parryFreezeTimer = 0.12;\r\n        p1.stunTimer = 1.0;\r\n      } else {\r\n        p2.hp = clamp(p2.hp - 1, 0, 100);\r\n      }\r\n    }\r\n    if (h2 && aabb(h2, p1.rect())) {\r\n      if (p1.parrying && !p1.parryConsumed && p1.parryTimer > p1.parryDurationDefault - p1.parryWindowLength) {\r\n        p1.parryConsumed = true;\r\n        p1.parryFreezeTimer = 0.12;\r\n        p2.stunTimer = 1.0;\r\n      } else {\r\n        p1.hp = clamp(p1.hp - 1, 0, 100);\r\n      }\r\n    }\r\n\r\n    for (const pr of projectiles) {\r\n      if (!pr.alive) continue;\r\n      if (pr.owner !== p1 && aabb(pr.rect(), p1.rect())) {\r\n        p1.hp = clamp(p1.hp - 10, 0, 100);\r\n        pr.alive = false;\r\n        // Debug: log hit and blast chosen\r\n        // eslint-disable-next-line no-console\r\n        console.debug(\"[qte] projectile hit P1\", { projectileSrc: pr.anim.animations[\"fly\"]?.src, blastSrc: P2_BLAST_SRC });\r\n        blasts.push(new Blast(p1.x + p1.w * 0.5, p1.y + p1.h * 0.5, P2_BLAST_SRC, 4));\r\n      }\r\n      if (pr.owner !== p2 && aabb(pr.rect(), p2.rect())) {\r\n        p2.hp = clamp(p2.hp - 10, 0, 100);\r\n        pr.alive = false;\r\n        // Debug: log hit and blast chosen\r\n        // eslint-disable-next-line no-console\r\n        console.debug(\"[qte] projectile hit P2\", { projectileSrc: pr.anim.animations[\"fly\"]?.src, blastSrc: P1_BLAST_SRC });\r\n        blasts.push(new Blast(p2.x + p2.w * 0.5, p2.y + p2.h * 0.5, P1_BLAST_SRC, 4));\r\n      }\r\n    }\r\n\r\n    // auto-defeat\r\n    if (p1.hp <= 0 && p1.state !== \"defeat\") {\r\n      p1.state = \"defeat\";\r\n      p1.attacking = false;\r\n      p1.parrying = false;\r\n      p1.ranging = false;\r\n      p1.vx = 0;\r\n      p1.vy = 0;\r\n      p1.anim.setState(\"defeat\");\r\n    }\r\n    if (p2.hp <= 0 && p2.state !== \"defeat\") {\r\n      p2.state = \"defeat\";\r\n      p2.attacking = false;\r\n      p2.parrying = false;\r\n      p2.ranging = false;\r\n      p2.vx = 0;\r\n      p2.vy = 0;\r\n      p2.anim.setState(\"defeat\");\r\n    }\r\n\r\n    requestAnimationFrame(loop);\r\n  }\r\n\r\n  requestAnimationFrame(loop);\r\n\r\n  function aabb(a: { x: number; y: number; w: number; h: number }, b: { x: number; y: number; w: number; h: number }) {\r\n    return !(a.x + a.w < b.x || b.x + b.w < a.x || a.y + a.h < b.y || b.y + b.h < a.y);\r\n  }\r\n\r\n  return { ctx, p1, p2 };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}