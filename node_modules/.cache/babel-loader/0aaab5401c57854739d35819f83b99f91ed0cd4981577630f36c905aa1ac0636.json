{"ast":null,"code":"function other(p) {\n  return p === 1 ? 2 : 1;\n}\nexport function startOfTurn(state, p) {\n  var _state$board$p$innen, _state$board$p, _state$board$p$aussen, _state$board$p2;\n  // AP reset\n  state.actionPoints[p] = 2;\n\n  // Flags reset\n  const f = state.effectFlags[p];\n  // Flags reset\n  const prevZuck = f.zuckSpent;\n  f.zuckOnceAp = false;\n  f.zuckSpent = false;\n  f.aiWeiweiOnActivate = false;\n  f.elonOnceAp = false;\n  f.elonSpent = false;\n  f.gatesNextInitiativeAp = false;\n  f.gretaFirstGovAp = false;\n  f.sorosAuthoritarianAp = false;\n  f.auraScience = 0;\n  f.auraHealth = 0;\n  f.auraMilitaryPenalty = 0;\n  // Oppositionsblockade ends at start of player's turn\n  f.initiativesLocked = false;\n  // Simplified AP system: No initiative-specific bonuses\n\n  // Helper to consume double aura flag once\n  const consumeDouble = () => {\n    if (f.doublePublicAura) {\n      f.doublePublicAura = false;\n      if (!state._effectQueue) state._effectQueue = [];\n      state._effectQueue.push({\n        type: 'LOG',\n        msg: 'Double Public Aura consumed.'\n      });\n      return true;\n    }\n    return false;\n  };\n\n  // Determine active public cards (inner lane)\n  const pubNames = ((_state$board$p$innen = (_state$board$p = state.board[p]) === null || _state$board$p === void 0 ? void 0 : _state$board$p.innen) !== null && _state$board$p$innen !== void 0 ? _state$board$p$innen : []).map(c => c.name);\n\n  // Apply auras with possible doubling (consume order defined)\n  if (pubNames.includes('Jennifer Doudna')) {\n    var _f$auraScience;\n    const doubled = consumeDouble();\n    f.auraScience = ((_f$auraScience = f.auraScience) !== null && _f$auraScience !== void 0 ? _f$auraScience : 0) + (doubled ? 2 : 1);\n  }\n  if (pubNames.includes('Anthony Fauci')) {\n    var _f$auraHealth;\n    const doubled = consumeDouble();\n    f.auraHealth = ((_f$auraHealth = f.auraHealth) !== null && _f$auraHealth !== void 0 ? _f$auraHealth : 0) + (doubled ? 2 : 1);\n  }\n  if (pubNames.includes('Noam Chomsky')) {\n    var _f$auraMilitaryPenalt;\n    const doubled = consumeDouble();\n    f.auraMilitaryPenalty = ((_f$auraMilitaryPenalt = f.auraMilitaryPenalty) !== null && _f$auraMilitaryPenalt !== void 0 ? _f$auraMilitaryPenalt : 0) + (doubled ? 2 : 1);\n  }\n\n  // einmalige Aktivierungsboni\n  if (pubNames.includes('Mark Zuckerberg')) f.zuckOnceAp = true;\n  if (pubNames.includes('Ai Weiwei')) f.aiWeiweiOnActivate = true;\n  if (pubNames.includes('Elon Musk')) f.elonOnceAp = true;\n  if (pubNames.includes('Bill Gates')) f.gatesNextInitiativeAp = true;\n  if (pubNames.includes('Greta Thunberg')) f.gretaFirstGovAp = true;\n  if (pubNames.includes('George Soros')) f.sorosAuthoritarianAp = true;\n\n  // Leadership effect: +1 AP immediately\n  const govNames = ((_state$board$p$aussen = (_state$board$p2 = state.board[p]) === null || _state$board$p2 === void 0 ? void 0 : _state$board$p2.aussen) !== null && _state$board$p$aussen !== void 0 ? _state$board$p$aussen : []).map(c => c.name);\n  if (govNames.some(name => ['Justin Trudeau', 'Volodymyr Zelenskyy', 'Ursula von der Leyen', 'Donald Trump', 'Mohammed bin Salman', 'Benjamin Netanyahu', 'Helmut Schmidt'].includes(name))) {\n    // Simplified AP system: Leadership gives +1 AP immediately\n    state.actionPoints[p] += 1;\n  }\n}\n\n// Legacy compatibility\nexport function applyStartOfTurnFlags(state, player, log) {\n  startOfTurn(state, player);\n}\nexport function applyStartOfTurnHooks(state, player, log) {\n  applyStartOfTurnFlags(state, player, log);\n}","map":{"version":3,"names":["other","p","startOfTurn","state","_state$board$p$innen","_state$board$p","_state$board$p$aussen","_state$board$p2","actionPoints","f","effectFlags","prevZuck","zuckSpent","zuckOnceAp","aiWeiweiOnActivate","elonOnceAp","elonSpent","gatesNextInitiativeAp","gretaFirstGovAp","sorosAuthoritarianAp","auraScience","auraHealth","auraMilitaryPenalty","initiativesLocked","consumeDouble","doublePublicAura","_effectQueue","push","type","msg","pubNames","board","innen","map","c","name","includes","_f$auraScience","doubled","_f$auraHealth","_f$auraMilitaryPenalt","govNames","aussen","some","applyStartOfTurnFlags","player","log","applyStartOfTurnHooks"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/startOfTurnHooks.ts"],"sourcesContent":["import { GameState, Player } from '../types/game';\r\n\r\nfunction other(p: Player): Player { return p === 1 ? 2 : 1; }\r\n\r\nexport function startOfTurn(state: GameState, p: Player) {\r\n  // AP reset\r\n  state.actionPoints[p] = 2;\r\n\r\n  // Flags reset\r\n  const f = state.effectFlags[p];\r\n  // Flags reset\r\n  const prevZuck = f.zuckSpent;\r\n  f.zuckOnceAp = false;\r\n  f.zuckSpent = false;\r\n  f.aiWeiweiOnActivate = false;\r\n  f.elonOnceAp = false;\r\n  f.elonSpent = false;\r\n  f.gatesNextInitiativeAp = false;\r\n  f.gretaFirstGovAp = false;\r\n  f.sorosAuthoritarianAp = false;\r\n  f.auraScience = 0;\r\n  f.auraHealth = 0;\r\n  f.auraMilitaryPenalty = 0;\r\n  // Oppositionsblockade ends at start of player's turn\r\n  f.initiativesLocked = false;\r\n  // Simplified AP system: No initiative-specific bonuses\r\n\r\n  // Helper to consume double aura flag once\r\n  const consumeDouble = (): boolean => {\r\n    if (f.doublePublicAura) {\r\n      f.doublePublicAura = false;\r\n      if (!state._effectQueue) state._effectQueue = [];\r\n      state._effectQueue.push({ type: 'LOG', msg: 'Double Public Aura consumed.' } as any);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Determine active public cards (inner lane)\r\n  const pubNames: string[] = (state.board[p]?.innen ?? []).map(c => c.name);\r\n\r\n  // Apply auras with possible doubling (consume order defined)\r\n  if (pubNames.includes('Jennifer Doudna')) {\r\n    const doubled = consumeDouble();\r\n    f.auraScience = (f.auraScience ?? 0) + (doubled ? 2 : 1);\r\n  }\r\n  if (pubNames.includes('Anthony Fauci')) {\r\n    const doubled = consumeDouble();\r\n    f.auraHealth = (f.auraHealth ?? 0) + (doubled ? 2 : 1);\r\n  }\r\n  if (pubNames.includes('Noam Chomsky')) {\r\n    const doubled = consumeDouble();\r\n    f.auraMilitaryPenalty = (f.auraMilitaryPenalty ?? 0) + (doubled ? 2 : 1);\r\n  }\r\n\r\n  // einmalige Aktivierungsboni\r\n  if (pubNames.includes('Mark Zuckerberg')) f.zuckOnceAp = true;\r\n  if (pubNames.includes('Ai Weiwei')) f.aiWeiweiOnActivate = true;\r\n  if (pubNames.includes('Elon Musk')) f.elonOnceAp = true;\r\n  if (pubNames.includes('Bill Gates')) f.gatesNextInitiativeAp = true;\r\n  if (pubNames.includes('Greta Thunberg')) f.gretaFirstGovAp = true;\r\n  if (pubNames.includes('George Soros')) f.sorosAuthoritarianAp = true;\r\n\r\n  // Leadership effect: +1 AP immediately\r\n  const govNames: string[] = (state.board[p]?.aussen ?? []).map((c: any) => c.name);\r\n  if (govNames.some(name => ['Justin Trudeau', 'Volodymyr Zelenskyy', 'Ursula von der Leyen', 'Donald Trump', 'Mohammed bin Salman', 'Benjamin Netanyahu', 'Helmut Schmidt'].includes(name))) {\r\n    // Simplified AP system: Leadership gives +1 AP immediately\r\n    state.actionPoints[p] += 1;\r\n  }\r\n}\r\n\r\n// Legacy compatibility\r\nexport function applyStartOfTurnFlags(state: GameState, player: Player, log: (m: string) => void) {\r\n  startOfTurn(state, player);\r\n}\r\n\r\nexport function applyStartOfTurnHooks(state: GameState, player: Player, log: (m: string) => void) {\r\n  applyStartOfTurnFlags(state, player, log);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}