{"ast":null,"code":"import React,{createContext,useContext,useReducer}from'react';import{GameEngine}from'../engine/gameEngine';// Action types for the reducer\nimport{jsx as _jsx}from\"react/jsx-runtime\";// Initial game state\nconst createInitialState=()=>({actionPoints:{1:2,2:2},hands:{1:[],2:[]},decks:{1:[],2:[]},board:{1:{innen:[],aussen:[],sofort:[]},2:{innen:[],aussen:[],sofort:[]}},discard:[],log:[],round:1,current:1,passed:{1:false,2:false},actionsUsed:{1:0,2:0},permanentSlots:{1:{government:null,public:null,initiativePermanent:null},2:{government:null,public:null,initiativePermanent:null}},shields:new Set(),traps:{1:[],2:[]},activeRefresh:{1:0,2:0},roundsWon:{1:0,2:0},effectFlags:{1:{opportunistActive:false,markZuckerbergUsed:false},2:{opportunistActive:false,markZuckerbergUsed:false}},_effectQueue:[]});// Game reducer\nfunction gameReducer(state,action){const engine=new GameEngine(state);switch(action.type){case'PLAY_CARD':{const success=engine.playCard(action.player,action.card,action.targetLane);if(success){return engine.getState();}// If play failed, return current state unchanged\nreturn state;}case'START_TURN':{engine.startTurn(action.player);return engine.getState();}case'DRAW_CARDS':{engine.drawCards(action.player,action.amount);return engine.getState();}case'SET_STATE':{return action.state;}case'RESET_GAME':{return createInitialState();}default:return state;}}// Context interface\n// Create context\nconst GameContext=/*#__PURE__*/createContext(undefined);// Provider component\nexport function GameProvider(_ref){let{children,initialState}=_ref;const[state,dispatch]=useReducer(gameReducer,initialState||createInitialState());// Create engine instance for the current state\nconst engine=new GameEngine(state);const value={state,dispatch,engine};return/*#__PURE__*/_jsx(GameContext.Provider,{value:value,children:children});}// Custom hook to use the game context\nexport function useGameContext(){const context=useContext(GameContext);if(context===undefined){throw new Error('useGameContext must be used within a GameProvider');}return context;}// Convenience hooks for common operations\nexport function useGameState(){return useGameContext().state;}export function useGameDispatch(){return useGameContext().dispatch;}export function useGameEngine(){return useGameContext().engine;}","map":{"version":3,"names":["React","createContext","useContext","useReducer","GameEngine","jsx","_jsx","createInitialState","actionPoints","hands","decks","board","innen","aussen","sofort","discard","log","round","current","passed","actionsUsed","permanentSlots","government","public","initiativePermanent","shields","Set","traps","activeRefresh","roundsWon","effectFlags","opportunistActive","markZuckerbergUsed","_effectQueue","gameReducer","state","action","engine","type","success","playCard","player","card","targetLane","getState","startTurn","drawCards","amount","GameContext","undefined","GameProvider","_ref","children","initialState","dispatch","value","Provider","useGameContext","context","Error","useGameState","useGameDispatch","useGameEngine"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/context/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { GameState, Player, Card } from '../types/game';\r\nimport { GameEngine } from '../engine/gameEngine';\r\n\r\n// Action types for the reducer\r\nexport type GameAction =\r\n  | { type: 'PLAY_CARD'; player: Player; card: Card; targetLane?: 'innen' | 'aussen' | 'sofort' }\r\n  | { type: 'START_TURN'; player: Player }\r\n  | { type: 'DRAW_CARDS'; player: Player; amount: number }\r\n  | { type: 'SET_STATE'; state: GameState }\r\n  | { type: 'RESET_GAME' };\r\n\r\n// Initial game state\r\nconst createInitialState = (): GameState => ({\r\n  actionPoints: { 1: 2, 2: 2 },\r\n  hands: { 1: [], 2: [] },\r\n  decks: { 1: [], 2: [] },\r\n  board: {\r\n    1: { innen: [], aussen: [], sofort: [] },\r\n    2: { innen: [], aussen: [], sofort: [] }\r\n  },\r\n  discard: [],\r\n  log: [],\r\n  round: 1,\r\n  current: 1,\r\n  passed: { 1: false, 2: false },\r\n  actionsUsed: { 1: 0, 2: 0 },\r\n      permanentSlots: { 1: { government: null, public: null, initiativePermanent: null }, 2: { government: null, public: null, initiativePermanent: null } },\r\n  shields: new Set(),\r\n  traps: { 1: [], 2: [] },\r\n  activeRefresh: { 1: 0, 2: 0 },\r\n  roundsWon: { 1: 0, 2: 0 },\r\n  effectFlags: {\r\n    1: { opportunistActive: false, markZuckerbergUsed: false },\r\n    2: { opportunistActive: false, markZuckerbergUsed: false }\r\n  },\r\n  _effectQueue: []\r\n});\r\n\r\n// Game reducer\r\nfunction gameReducer(state: GameState, action: GameAction): GameState {\r\n  const engine = new GameEngine(state);\r\n\r\n  switch (action.type) {\r\n    case 'PLAY_CARD': {\r\n      const success = engine.playCard(action.player, action.card, action.targetLane);\r\n      if (success) {\r\n        return engine.getState();\r\n      }\r\n      // If play failed, return current state unchanged\r\n      return state;\r\n    }\r\n\r\n    case 'START_TURN': {\r\n      engine.startTurn(action.player);\r\n      return engine.getState();\r\n    }\r\n\r\n    case 'DRAW_CARDS': {\r\n      engine.drawCards(action.player, action.amount);\r\n      return engine.getState();\r\n    }\r\n\r\n    case 'SET_STATE': {\r\n      return action.state;\r\n    }\r\n\r\n    case 'RESET_GAME': {\r\n      return createInitialState();\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Context interface\r\ninterface GameContextType {\r\n  state: GameState;\r\n  dispatch: React.Dispatch<GameAction>;\r\n  engine: GameEngine;\r\n}\r\n\r\n// Create context\r\nconst GameContext = createContext<GameContextType | undefined>(undefined);\r\n\r\n// Provider component\r\ninterface GameProviderProps {\r\n  children: ReactNode;\r\n  initialState?: GameState;\r\n}\r\n\r\nexport function GameProvider({ children, initialState }: GameProviderProps) {\r\n  const [state, dispatch] = useReducer(gameReducer, initialState || createInitialState());\r\n\r\n  // Create engine instance for the current state\r\n  const engine = new GameEngine(state);\r\n\r\n  const value: GameContextType = {\r\n    state,\r\n    dispatch,\r\n    engine\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook to use the game context\r\nexport function useGameContext(): GameContextType {\r\n  const context = useContext(GameContext);\r\n  if (context === undefined) {\r\n    throw new Error('useGameContext must be used within a GameProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Convenience hooks for common operations\r\nexport function useGameState(): GameState {\r\n  return useGameContext().state;\r\n}\r\n\r\nexport function useGameDispatch(): React.Dispatch<GameAction> {\r\n  return useGameContext().dispatch;\r\n}\r\n\r\nexport function useGameEngine(): GameEngine {\r\n  return useGameContext().engine;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}