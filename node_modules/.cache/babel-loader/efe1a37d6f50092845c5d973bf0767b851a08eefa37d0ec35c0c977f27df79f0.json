{"ast":null,"code":"import _objectSpread from\"C:/Users/skank/Videos/Cards/Milchcards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useRef,useEffect,useCallback}from'react';import{useVisualEffectsSafe}from'../context/VisualEffectsContext';import{LAYOUT,getZone,computeSlotRects,getUiTransform,getLaneCapacity,getPublicRects,getGovernmentRects,getSofortRect}from'../ui/layout';import{sortHandCards}from'../utils/gameUtils';import{getCardImagePath}from'../data/gameData';import influenceIconUrl from'../assets/icons/influence.svg';import publicSymbolUrl from'../assets/icons/public_symbol.png';import sofortSymbolUrl from'../assets/icons/sofort_initiative_symbol.png';import dauerhaftSymbolUrl from'../assets/icons/dauerhaft_initative.png';import governmentSymbolUrl from'../assets/icons/government_symbol.png';import interventionSymbolUrl from'../assets/icons/intervention_symbol.png';import govPlaceGifUrl from'../assets/effect_gif/place_card_gov_256x256.gif';import govPlaceSpritesheetUrl from'../ui/sprites/playcard_gov_256x256_14.png';import instantSpritesheetUrl from'../ui/sprites/activate_trap_hit_target_256x256_16x2.png';import hitSpritesheetUrl from'../ui/sprites/activate_inititive_hit_target_256x256_16_2rows.png';import{jsx as _jsx}from\"react/jsx-runtime\";// Helper: is corruption target selection active\nfunction isCorruptionSelection(state,player){const sel=state.pendingAbilitySelect;return sel&&sel.type==='corruption_steal'&&sel.actorPlayer===player;}export const GameCanvas=_ref=>{let{gameState,selectedHandIndex,onCardClick,onCardHover,devMode=false}=_ref;// listen for dice roll requests from resolver and trigger Dice3D\nuseEffect(()=>{const handler=ev=>{try{var _ev$detail;const player=(_ev$detail=ev.detail)===null||_ev$detail===void 0?void 0:_ev$detail.player;// find Dice3D canvas on page and trigger click (it rolls on click)\nconst dice=document.querySelector('canvas');// better: dispatch global event so App-level Dice3D component can roll programmatically\nwindow.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll',{detail:{player}}));}catch(e){}};window.addEventListener('pc:request_dice_roll',handler);return()=>window.removeEventListener('pc:request_dice_roll',handler);},[]);const canvasRef=useRef(null);const visualEffects=useVisualEffectsSafe();const clickZonesRef=useRef([]);// Smooth vertical scroll for P1 hand when it has more than visible slots\nconst handScrollTargetRef=useRef(0);const handScrollCurrentRef=useRef(0);const handScrollEnabledRef=useRef(true);// Touch handling refs\nconst touchStartYRef=useRef(null);const lastTouchYRef=useRef(null);const isTouchingRef=useRef(false);const backgroundImageRef=useRef(null);const imageCacheRef=useRef(new Map());const influenceImgRef=useRef(null);// Animation state for visual influence changes: Map<uid, Array<Anim>>\nconst influenceAnimRef=useRef(new Map());// Previous per-card influence snapshot to detect increases\nconst prevInfluencesRef=useRef({});// Slot symbol images\nconst slotSymbolImgsRef=useRef(new Map());// Map of canonical slot positions for animations: key -> {x,y,w,h,cx,cy}\nconst slotPositionsRef=useRef({});// Mapping between animation UIDs and slot keys to ensure one-shot playback\nconst uidToKeyRef=useRef({});const keyToUidRef=useRef({});// Temporary test GIF for government slots\nconst govGifRef=useRef(null);const govSpritesRef=useRef(null);// hit (target) spritesheet (25 frames)\nconst hitSpritesRef=useRef(null);// sprite animation state keyed by slot-key (player.lane.index)\nconst govSpriteStateRef=useRef({});const instantSpritesRef=useRef(null);const instantSpriteStateRef=useRef({});const hitSpriteStateRef=useRef({});// Corruption (Bestechungsskandal) target selection mode\nconst corruptionSelectActorRef=useRef(null);const gameStateRef=useRef(gameState);useEffect(()=>{gameStateRef.current=gameState;},[gameState]);useEffect(()=>{const onEnterCorruptionSelect=ev=>{try{var _ev$detail2;const actor=(_ev$detail2=ev.detail)===null||_ev$detail2===void 0?void 0:_ev$detail2.player;console.log('üî• GAMECANVAS RECEIVED pc:corruption_select_target - Actor:',actor);corruptionSelectActorRef.current=actor!==null&&actor!==void 0?actor:null;console.log('üî• SET corruptionSelectActorRef.current:',corruptionSelectActorRef.current);}catch(e){console.error('üî• ERROR in corruption select handler:',e);}};window.addEventListener('pc:corruption_select_target',onEnterCorruptionSelect);// Keyboard hotkeys 1-5 to choose opponent government slot when corruption select is active\nconst onKeyDown=ev=>{try{var _gs$board,_gs$board$victim,_gs$board$victim$auss,_card$uid;const k=ev.key;if(!['1','2','3','4','5'].includes(k))return;const actor=corruptionSelectActorRef.current;if(!actor)return;const victim=actor===1?2:1;const idx=Number(k)-1;// map '1' -> slot 0\nconst gs=gameStateRef.current;const card=gs===null||gs===void 0?void 0:(_gs$board=gs.board)===null||_gs$board===void 0?void 0:(_gs$board$victim=_gs$board[victim])===null||_gs$board$victim===void 0?void 0:(_gs$board$victim$auss=_gs$board$victim.aussen)===null||_gs$board$victim$auss===void 0?void 0:_gs$board$victim$auss[idx];console.debug('[CORR][KEY] pressed',k,'actor',actor,'victim',victim,'idx',idx,'card',card);if(!card)return;const uid=(_card$uid=card.uid)!==null&&_card$uid!==void 0?_card$uid:card.id;if(!uid)return;console.debug('[CORR][KEY] dispatching pick_target for uid',uid);window.dispatchEvent(new CustomEvent('pc:corruption_pick_target',{detail:{player:actor,targetUid:uid}}));try{console.debug('[CORR][KEY] dispatching target_selected for uid',uid);window.dispatchEvent(new CustomEvent('pc:corruption_target_selected',{detail:{player:actor,targetUid:uid}}));}catch(e){console.debug('[CORR][KEY] target_selected dispatch error',e);}ev.preventDefault();}catch(e){}};window.addEventListener('keydown',onKeyDown);return()=>{window.removeEventListener('pc:corruption_select_target',onEnterCorruptionSelect);window.removeEventListener('keydown',onKeyDown);};},[]);// Helper: draw slot icons with uniform pulsing opacity and a light reflection\nconst drawSlotIconWithPulse=useCallback(function(ctx,img,x,y,w,h){let phase=arguments.length>6&&arguments[6]!==undefined?arguments[6]:0;if(!img||!img.complete)return;try{const now=performance.now();const base=0.10;// base opacity\nconst pulseRange=0.08;// pulse amplitude (-> up to base + pulseRange)\nconst period=700;// ms\nconst pulse=base+pulseRange*(0.5+0.5*Math.sin(now/period+phase));// draw icon with pulsing alpha\nctx.save();ctx.globalAlpha=pulse;ctx.drawImage(img,x,y,w,h);// subtle reflection: gradient overlay on top half\nconst grad=ctx.createLinearGradient(x,y,x,y+h*0.5);grad.addColorStop(0,\"rgba(255,255,255,\".concat(0.18*pulse,\")\"));grad.addColorStop(1,\"rgba(255,255,255,0)\");ctx.globalCompositeOperation='lighter';ctx.fillStyle=grad;ctx.fillRect(x,y,w,h*0.5);ctx.restore();}catch(e){// silent fallback\n}},[]);// Load influence icon once\nuseEffect(()=>{const img=new Image();img.src=influenceIconUrl;influenceImgRef.current=img;},[]);const drawCardAt=useCallback(function(ctx,card,x,y,size){var _shield;let selected=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;let showAPCost=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;let player=arguments.length>7?arguments[7]:undefined;// Apply per-card fade-in if a play animation is active for this uid\nlet extraAlpha=1;try{var _uid;const uid=(_uid=card.uid)!==null&&_uid!==void 0?_uid:card.id;const list=visualEffects&&visualEffects.playAnimsRef&&visualEffects.playAnimsRef.current||window.__pc_play_anims||[];const anim=list.find(a=>a.uid===uid);if(anim){const p=Math.min(1,Math.max(0,(performance.now()-anim.started)/anim.duration));// ease-out\nextraAlpha=Math.pow(p,2);}}catch(e){}let dx=x,dy=y,s=size;if(selected){s=Math.floor(size*1.05);dx=x-Math.floor((s-size)/2);dy=y-Math.floor((s-size)/2);}// Note: pulse overlay is drawn at top layer after all cards are rendered\n// Draw card image with caching to prevent flicker in continuous loop\nconst src=getCardImagePath(card,'ui');const cached=imageCacheRef.current.get(src);ctx.save();ctx.globalAlpha=extraAlpha;if(cached&&cached.complete&&cached.naturalWidth>0){ctx.drawImage(cached,dx,dy,s,s);}else{const img=new Image();img.onload=()=>{imageCacheRef.current.set(src,img);// Note: onload happens async; draw will occur on next frame\n// don't draw here into stale ctx\n};img.src=src;imageCacheRef.current.set(src,img);}ctx.restore();// Status-Indikatoren (f√ºr alle Board-Karten)\n// Einfluss-Wert dauerhaft anzeigen (oben links) ‚Äì nur f√ºr Regierungskarten\nif(card.kind==='pol'){var _influence;const barH=Math.max(20,Math.floor(s*0.12)+6);ctx.fillStyle='rgba(0,0,0,0.6)';ctx.fillRect(dx,dy+s-barH,s,barH);ctx.fillStyle='#ffffff';const fontSize=Math.floor(s*0.12);ctx.font=\"bold \".concat(fontSize,\"px sans-serif\");ctx.textAlign='left';ctx.textBaseline='middle';ctx.fillText(\"\".concat((_influence=card.influence)!==null&&_influence!==void 0?_influence:0),dx+8,dy+s-barH/2);}// Schutz-Status (blauer Punkt)\nif(card.protected||((_shield=card.shield)!==null&&_shield!==void 0?_shield:0)>0){ctx.fillStyle='#1da1f2';ctx.fillRect(dx+s-22,dy+6,16,16);}// Deaktiviert-Status (roter Punkt)\nif(card.deactivated){ctx.fillStyle='#b63838';ctx.fillRect(dx+s-22,dy+26,16,16);}// Einfluss-Badge f√ºr Handkarten oben rechts (nur Regierungskarten)\nif(showAPCost&&player&&card.kind==='pol'){var _influence2;const badgeHeight=Math.max(16,Math.floor(s*0.12));const badgeWidth=badgeHeight*2;const badgeX=dx+s-badgeWidth-6;const badgeY=dy+6;// Semi-transparent dunkler Hintergrund\nctx.fillStyle='rgba(0,0,0,0.6)';ctx.beginPath();ctx.roundRect(badgeX,badgeY,badgeWidth,badgeHeight,badgeHeight/2);ctx.fill();// Influence icon (90% opacity) links im Badge\nif(influenceImgRef.current&&influenceImgRef.current.complete){ctx.globalAlpha=0.9;ctx.drawImage(influenceImgRef.current,badgeX+2,badgeY+2,badgeHeight-4,badgeHeight-4);ctx.globalAlpha=1;}// Influence number rechts im Badge\nctx.fillStyle='#ffffff';ctx.font=\"bold \".concat(Math.floor(badgeHeight*0.5),\"px sans-serif\");ctx.textAlign='right';ctx.textBaseline='middle';ctx.fillText(\"\".concat((_influence2=card.influence)!==null&&_influence2!==void 0?_influence2:0),badgeX+badgeWidth-4,badgeY+badgeHeight/2);// Reset align\nctx.textAlign='start';ctx.textBaseline='alphabetic';}// NOTE: influence overlays (pulse + labels) are drawn in a separate pass\n// Auswahl-Rahmen\nif(selected){ctx.strokeStyle='#61dafb';ctx.lineWidth=3;ctx.strokeRect(dx+1,dy+1,s-2,s-2);ctx.lineWidth=1;}// Return exact 256x256 click zone over the card\n// Since all cards are 256x256, the click zone should match exactly\nreturn{x:dx,y:dy,w:256,h:256};},[gameState]);// Slot-Benennungs-Funktion basierend auf Glossar\nconst getSlotDisplayName=useCallback((zoneId,index,player)=>{const slotNumber=index+1;if(zoneId.includes('government')){if(zoneId.includes('player')){return\"Regierungsreihe Slot \".concat(slotNumber);}else{return\"Gegner Regierung Slot \".concat(slotNumber);}}else if(zoneId.includes('public')){if(zoneId.includes('player')){return\"\\xD6ffentlichkeitsreihe Slot \".concat(slotNumber);}else{return\"Gegner \\xD6ffentlichkeit Slot \".concat(slotNumber);}}else if(zoneId.includes('permanent.government')){if(zoneId.includes('player')){return'Regierung Spezial-Slot';}else{return'Gegner Regierung Spezial-Slot';}}else if(zoneId.includes('permanent.public')){if(zoneId.includes('player')){return'√ñffentlichkeit Spezial-Slot';}else{return'Gegner √ñffentlichkeit Spezial-Slot';}}else if(zoneId.includes('instant')){if(zoneId.includes('player')){return'Sofort-Slot';}else{return'Gegner Sofort-Slot';}}else if(zoneId.includes('hand')){return'Hand';}else if(zoneId.includes('interventions')){return'Interventionen';}return\"Slot \".concat(slotNumber);},[]);const drawLane=useCallback((ctx,zoneId,player,lane,clickable)=>{const zone=getZone(zoneId);if(!zone)return;const slots=computeSlotRects(zone);const arr=gameState.board[player][lane];slots.forEach((s,idx)=>{const card=arr[idx];// Hintergrundfarbe nach Kategorie\nlet bgColor='rgba(0,0,0,0.1)';// Standard\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';// Hellgelb f√ºr Regierung\n}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';// Hellgr√ºn f√ºr √ñffentlichkeit\n}ctx.fillStyle=bgColor;ctx.fillRect(s.x,s.y,s.w,s.h);// Slot-Rahmen\nctx.strokeStyle='rgba(255,255,255,0.06)';ctx.strokeRect(s.x+0.5,s.y+0.5,s.w-1,s.h-1);if(card){const isSelected=player===1&&selectedHandIndex!==null&&gameState.hands[1][selectedHandIndex]===card;const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,isSelected,false);// Kartenname unter dem Slot anzeigen\nctx.fillStyle='rgba(255,255,255,0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';const textY=s.y+s.h+16;ctx.fillText(card.name,s.x+s.w/2,textY);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'board_card',player,lane,index:idx,card}}));}else if(clickable&&gameState.current===player){// Slot-Benennung anzeigen (f√ºr den aktuellen Spieler)\nconst slotName=getSlotDisplayName(zoneId,idx,player);ctx.fillStyle='rgba(255,255,255,0.6)';ctx.font='11px sans-serif';ctx.textAlign='center';const textY=s.y+s.h/2;ctx.fillText(slotName,s.x+s.w/2,textY);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',lane,index:idx}});}});},[gameState,selectedHandIndex,drawCardAt,getSlotDisplayName]);const drawHandP1=useCallback(ctx=>{const hand=sortHandCards(gameState.hands[1]);const zone=getZone('hand.player');if(!zone)return;const slots=computeSlotRects(zone);// Apply smooth offset (lerp towards target)\nconst target=handScrollTargetRef.current;handScrollCurrentRef.current+=(target-handScrollCurrentRef.current)*0.15;// easing\nconst offsetY=Math.round(handScrollCurrentRef.current);slots.forEach((s,i)=>{const card=hand[i];if(!card)return;// Find original index in unsorted hand for click handling\nconst originalIndex=gameState.hands[1].findIndex(c=>c.uid===card.uid);const isSel=selectedHandIndex===originalIndex;// apply vertical offset\nconst sx=s.x;const sy=s.y+offsetY;const clickZone=drawCardAt(ctx,card,sx,sy,s.w,isSel,true,1);// Show AP cost for player 1 hand\nclickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'hand_p1',index:originalIndex,card}}));});},[gameState.hands,selectedHandIndex,drawCardAt]);// üîß DEV MODE: Player 2 Hand (rechts unten, kompakter)\nconst drawHandP2=useCallback(ctx=>{const hand=sortHandCards(gameState.hands[2]);const zone=getZone('hand.opponent');if(!zone)return;const slots=computeSlotRects(zone);// Hintergrund f√ºr P2 Hand\nconst[x,y,w,h]=zone.rectPx;ctx.fillStyle='rgba(255, 100, 100, 0.15)';// R√∂tlicher Hintergrund f√ºr P2\nctx.fillRect(x,y,w,h);ctx.strokeStyle='rgba(255, 100, 100, 0.3)';ctx.strokeRect(x+0.5,y+0.5,w-1,h-1);// Label f√ºr P2 Hand\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='bold 14px sans-serif';ctx.textAlign='center';ctx.fillText('Player 2 Hand',x+w/2,y-8);slots.forEach((s,i)=>{const card=hand[i];if(!card)return;// Find original index in unsorted hand for click handling\nconst originalIndex=gameState.hands[2].findIndex(c=>c.uid===card.uid);const isSel=gameState.current===2&&selectedHandIndex===originalIndex;const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,isSel,true,2);// Show AP cost for player 2 hand\nclickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'hand_p2',index:originalIndex,card}}));});},[gameState,selectedHandIndex,drawCardAt]);// Interventions strip (player traps)\nconst drawInterventionsP1=useCallback(ctx=>{const traps=gameState.traps[1]||[];const zone=getZone('interventions.player');if(!zone)return;// Single intervention slot\nconst[zx,zy,zw,zh]=zone.rectPx;const card=traps[0];// Only first trap\n// Hintergrund f√ºr Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.15)';// Lavendelfarben f√ºr Interventionen\nctx.fillRect(zx,zy,zw,zh);ctx.strokeStyle='rgba(200, 160, 255, 0.3)';ctx.strokeRect(zx+0.5,zy+0.5,zw-1,zh-1);// Slot-Benennung f√ºr Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.8)';ctx.font='11px sans-serif';ctx.textAlign='left';ctx.fillText('Intervention',zx+8,zy+zh-6);if(card){const clickZone=drawCardAt(ctx,card,zx,zy,zw,false,false);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'trap_p1',index:0,card}}));}},[gameState.traps,drawCardAt]);// Interventions strip (opponent traps)\nconst drawInterventionsP2=useCallback(ctx=>{const traps=gameState.traps[2]||[];const zone=getZone('interventions.opponent');if(!zone)return;// Single intervention slot\nconst[zx,zy,zw,zh]=zone.rectPx;const card=traps[0];// Only first trap\n// Hintergrund f√ºr Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.15)';// Lavendelfarben f√ºr Interventionen\nctx.fillRect(zx,zy,zw,zh);ctx.strokeStyle='rgba(200, 160, 255, 0.3)';ctx.strokeRect(zx+0.5,zy+0.5,zw-1,zh-1);// Slot-Benennung f√ºr Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.8)';ctx.font='11px sans-serif';ctx.textAlign='left';ctx.fillText('Intervention',zx+8,zy+zh-6);if(card){const clickZone=drawCardAt(ctx,card,zx,zy,zw,false,false);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'trap_p2',index:0,card}}));}},[gameState.traps,drawCardAt]);// Single slot drawing function\nconst drawSingleSlot=useCallback((ctx,zoneId,card,clickType,player)=>{const zone=getZone(zoneId);if(!zone)return;const[x,y,w,h]=zone.rectPx;// Hintergrundfarbe nach Kategorie\nlet bgColor='rgba(0,0,0,0.1)';// Standard\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';// Hellgelb f√ºr Regierung\n}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';// Hellgr√ºn f√ºr √ñffentlichkeit\n}else if(zoneId.includes('instant')){bgColor='rgba(127, 116, 91, 0.15)';// Neutral f√ºr Sofort-Slots\n}else if(zoneId.includes('permanent')){// Unterscheide zwischen government und public permanent slots\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';}}ctx.fillStyle=bgColor;ctx.fillRect(x,y,w,h);// Draw slot border\nctx.strokeStyle='rgba(255,255,255,0.06)';ctx.strokeRect(x+0.5,y+0.5,w-1,h-1);if(card){const isSelected=player===1&&selectedHandIndex!==null&&gameState.hands[1][selectedHandIndex]===card;const clickZone=drawCardAt(ctx,card,x,y,w,isSelected,false);// Kartenname unter dem Slot anzeigen\nctx.fillStyle='rgba(255,255,255,0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';const textY=y+h+16;ctx.fillText(card.name,x+w/2,textY);// Register click zone for the card - always in dev mode, otherwise only for current player\nif(devMode||player===gameState.current){clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'slot_card',slot:clickType,player,card}}));}// üîß NEU: Sofort-Initiative-Slots sind immer klickbar f√ºr Aktivierung (handled by activateInstantInitiative)\nif(clickType==='instant'){clickZonesRef.current.push({x,y,w,h,data:{type:'activate_instant',player,card}});}}else if(gameState.current===player||devMode){// Slot-Benennung f√ºr leere Slots anzeigen (f√ºr den aktuellen Spieler oder im Dev Mode)\nconst slotName=getSlotDisplayName(zoneId,0,player);ctx.fillStyle='rgba(255,255,255,0.6)';ctx.font='11px sans-serif';ctx.textAlign='center';const textY=y+h/2;ctx.fillText(slotName,x+w/2,textY);clickZonesRef.current.push({x,y,w,h,data:{type:'empty_slot',slot:clickType,player}});}},[selectedHandIndex,gameState,drawCardAt,getSlotDisplayName,devMode]);// Small UI hook: show a lightweight corruption modal overlay when a target is selected\nuseEffect(()=>{const onTargetSelected=ev=>{const{player,targetUid}=ev.detail||{};if(!player||!targetUid)return;// create transient overlay element if not present\ntry{var _board,_board2,_board2$aussen,_board3,_board4,_board4$aussen;const id='pc-corruption-modal';let el=document.getElementById(id);if(!el){el=document.createElement('div');el.id=id;el.style.position='fixed';el.style.left='50%';el.style.top='40%';el.style.transform='translate(-50%, -50%)';el.style.padding='12px 16px';el.style.background='rgba(6,10,15,0.9)';el.style.border='1px solid rgba(255,255,255,0.12)';el.style.borderRadius='8px';el.style.zIndex='3000';el.style.color='#e5e7eb';el.style.fontFamily='monospace';el.style.fontSize='14px';document.body.appendChild(el);}const card=((_board=gameState.board)===null||_board===void 0?void 0:(_board2=_board[player===1?1:2])===null||_board2===void 0?void 0:(_board2$aussen=_board2.aussen)===null||_board2$aussen===void 0?void 0:_board2$aussen.find(c=>c.uid===targetUid))||((_board3=gameState.board)===null||_board3===void 0?void 0:(_board4=_board3[player===1?2:1])===null||_board4===void 0?void 0:(_board4$aussen=_board4.aussen)===null||_board4$aussen===void 0?void 0:_board4$aussen.find(c=>c.uid===targetUid));el.innerHTML=\"<div style=\\\"display:flex;flex-direction:column;gap:8px;min-width:260px;\\\">\\n          <div style=\\\"font-weight:700\\\">Bestechungsskandal 2.0 \\u2014 Ziel gew\\xE4hlt</div>\\n          <div>Gew\\xE4hltes Ziel: <b>\".concat(card?card.name:'UID '+targetUid,\"</b></div>\\n          <div>Probe: W6 \\u2265 Einfluss (inkl. Oligarch-Bonus)</div>\\n          <div style=\\\"display:flex;gap:8px;justify-content:flex-end;\\\">\\n            <button id=\\\"pc-corruption-roll\\\" style=\\\"background:#2563eb;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\\\">W\\xFCrfeln</button>\\n            <button id=\\\"pc-corruption-cancel\\\" style=\\\"background:#374151;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\\\">Abbrechen</button>\\n          </div>\\n        </div>\");const rollBtn=document.getElementById('pc-corruption-roll');const cancelBtn=document.getElementById('pc-corruption-cancel');if(rollBtn){rollBtn.onclick=()=>{try{console.log('üî• CORRUPTION W√úRFELN CLICKED - triggering dice roll');// Trigger the dice component to roll\nwindow.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll',{detail:{player,targetUid}}));window.dispatchEvent(new CustomEvent('pc:corruption_request_roll',{detail:{player,targetUid}}));}catch(e){console.error('üî• ERROR triggering dice roll:',e);}// disable until result\nrollBtn.disabled=true;rollBtn.innerText='W√ºrfelt...';};}if(cancelBtn){cancelBtn.onclick=()=>{el.remove();};}}catch(e){console.debug('corruption modal create failed',e);}};window.addEventListener('pc:corruption_target_selected',onTargetSelected);return()=>window.removeEventListener('pc:corruption_target_selected',onTargetSelected);},[gameState]);// Draw permanent slots for player\nconst drawPermanentSlotsP1=useCallback(ctx=>{drawSingleSlot(ctx,'slot.permanent.government.player',gameState.permanentSlots[1].government,'permanent_government',1);drawSingleSlot(ctx,'slot.permanent.public.player',gameState.permanentSlots[1].public,'permanent_public',1);},[gameState.permanentSlots,drawSingleSlot]);// Draw permanent slots for opponent\nconst drawPermanentSlotsP2=useCallback(ctx=>{drawSingleSlot(ctx,'slot.permanent.government.opponent',gameState.permanentSlots[2].government,'permanent_government',2);drawSingleSlot(ctx,'slot.permanent.public.opponent',gameState.permanentSlots[2].public,'permanent_public',2);},[gameState.permanentSlots,drawSingleSlot]);// Draw instant slots\nconst drawInstantSlots=useCallback(ctx=>{// Sofort-Initiative-Slots aus dem Board zeichnen\nconst sofortPlayerCard=gameState.board[1].sofort[0];const sofortOppCard=gameState.board[2].sofort[0];drawSingleSlot(ctx,'slot.instant.player',sofortPlayerCard,'instant',1);drawSingleSlot(ctx,'slot.instant.opponent',sofortOppCard,'instant',2);},[gameState.board,drawSingleSlot]);// Aktive Schl√ºsselw√∂rter und Unterkategorien ermitteln\nconst getActiveKeywordsAndSubcategories=useCallback(player=>{const board=gameState.board[player];const permanentSlots=gameState.permanentSlots[player];const allCards=[...board.innen,...board.aussen,permanentSlots.government,permanentSlots.public].filter(c=>c&&c.kind==='pol');const keywords=new Set();const subcategories=new Set();allCards.forEach(card=>{if(!card.deactivated){// Regierungskarten-Schl√ºsselw√∂rter\nif(card.tag==='Leadership'){keywords.add('Leadership');}if(card.tag==='Diplomat'){keywords.add('Diplomat');}// √ñffentlichkeits-Unterkategorien (f√ºr Karten in √ñffentlichkeitsreihe)\nif(board.innen.includes(card)){const publicCard=card;if(publicCard.tag){// Oligarch\nconst oligarchNames=['Elon Musk','Bill Gates','George Soros','Warren Buffett','Mukesh Ambani','Jeff Bezos','Alisher Usmanov','Gautam Adani','Jack Ma','Zhang Yiming','Roman Abramovich'];if(oligarchNames.includes(publicCard.name)){subcategories.add('Oligarch');}// Plattform\nconst platformNames=['Mark Zuckerberg','Tim Cook','Sam Altman','Jack Ma'];if(platformNames.includes(publicCard.name)){subcategories.add('Plattform');}// Bewegung\nconst movementNames=['Greta Thunberg','Malala Yousafzai','Ai Weiwei','Alexei Navalny'];if(movementNames.includes(publicCard.name)){subcategories.add('Bewegung');}// NGO/Think-Tank\nconst ngoNames=['Bill Gates','George Soros','Jennifer Doudna','Noam Chomsky','Anthony Fauci'];if(ngoNames.includes(publicCard.name)){subcategories.add('NGO/Think-Tank');}// Intelligenz\nconst intelligenceNames=['Jennifer Doudna','Noam Chomsky','Edward Snowden','Julian Assange','Yuval Noah Harari','Ai Weiwei','Alexei Navalny','Anthony Fauci'];if(intelligenceNames.includes(publicCard.name)){subcategories.add('Intelligenz');}// Medien\nconst mediaNames=['Oprah Winfrey'];if(mediaNames.includes(publicCard.name)){subcategories.add('Medien');}}}}});return{keywords:Array.from(keywords),subcategories:Array.from(subcategories)};},[gameState]);// Info-Panels zeichnen\nconst drawInfoPanels=useCallback(ctx=>{const{keywords,subcategories}=getActiveKeywordsAndSubcategories(1);// Panel f√ºr Regierungsschl√ºsselw√∂rter (rechts neben Regierungsslots)\nconst govPanelX=1640+256+20;// Nach dem letzten permanenten Slot\nconst govPanelY=300;// Auf H√∂he der Regierungsslots\nconst govPanelW=120;const govPanelH=256;// Regierungspanel Hintergrund\nctx.fillStyle='rgba(255, 197, 0, 0.15)';ctx.fillRect(govPanelX,govPanelY,govPanelW,govPanelH);ctx.strokeStyle='rgba(255, 197, 0, 0.3)';ctx.strokeRect(govPanelX+0.5,govPanelY+0.5,govPanelW-1,govPanelH-1);// Regierungspanel Titel\nctx.fillStyle='rgba(255, 197, 0, 0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';ctx.fillText('Regierung',govPanelX+govPanelW/2,govPanelY+16);// Schl√ºsselw√∂rter auflisten\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='11px sans-serif';ctx.textAlign='left';if(keywords.length>0){keywords.forEach((keyword,idx)=>{ctx.fillText(\"\\u2022 \".concat(keyword),govPanelX+8,govPanelY+36+idx*16);});}else{ctx.fillStyle='rgba(255, 255, 255, 0.5)';ctx.fillText('Keine aktiven',govPanelX+8,govPanelY+36);ctx.fillText('Schl√ºsselw√∂rter',govPanelX+8,govPanelY+52);}// Panel f√ºr √ñffentlichkeits-Unterkategorien (rechts neben √ñffentlichkeitsslots)\nconst pubPanelX=1640+256+20;const pubPanelY=580;// Auf H√∂he der √ñffentlichkeitsslots\nconst pubPanelW=120;const pubPanelH=256;// √ñffentlichkeitspanel Hintergrund\nctx.fillStyle='rgba(0, 255, 0, 0.15)';ctx.fillRect(pubPanelX,pubPanelY,pubPanelW,pubPanelH);ctx.strokeStyle='rgba(0, 255, 0, 0.3)';ctx.strokeRect(pubPanelX+0.5,pubPanelY+0.5,pubPanelW-1,pubPanelH-1);// √ñffentlichkeitspanel Titel\nctx.fillStyle='rgba(0, 255, 0, 0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';ctx.fillText('√ñffentlichkeit',pubPanelX+pubPanelW/2,pubPanelY+16);// Unterkategorien auflisten\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='11px sans-serif';ctx.textAlign='left';if(subcategories.length>0){subcategories.forEach((subcategory,idx)=>{const displayName=subcategory.length>12?subcategory.substring(0,10)+'...':subcategory;ctx.fillText(\"\\u2022 \".concat(displayName),pubPanelX+8,pubPanelY+36+idx*16);});}else{ctx.fillStyle='rgba(255, 255, 255, 0.5)';ctx.fillText('Keine aktiven',pubPanelX+8,pubPanelY+36);ctx.fillText('Unterkategorien',pubPanelX+8,pubPanelY+52);}},[getActiveKeywordsAndSubcategories]);// Move diagnostics to draw callback to ensure they run after canvas is actually rendered\nconst runDiagnostics=useCallback(()=>{try{const handZones=clickZonesRef.current.filter(z=>z.data&&z.data.type==='hand_p1');const uiUIDs=handZones.map(z=>{var _z$data$card$uid;return z.data.card&&((_z$data$card$uid=z.data.card.uid)!==null&&_z$data$card$uid!==void 0?_z$data$card$uid:z.data.card.id);}).filter(Boolean);const stateHand=gameState.hands&&gameState.hands[1]?gameState.hands[1]:[];const stateUIDs=stateHand.map(c=>{var _c$uid;return(_c$uid=c.uid)!==null&&_c$uid!==void 0?_c$uid:c.id;}).filter(Boolean);const missingInState=uiUIDs.filter(u=>!stateUIDs.includes(u));const missingInUI=stateUIDs.filter(u=>!uiUIDs.includes(u));// Only warn if there are cards in UI that don't exist in state (real error)\n// Don't warn about missing UI cards due to limited slot capacity\nif(missingInState.length>0){var _politicardDebug;const mismatch={ts:Date.now(),uiCount:uiUIDs.length,stateCount:stateUIDs.length,uiUIDs,stateUIDs,missingInState,missingInUI,stack:new Error('mismatch-stack').stack};window.__politicardDebug=_objectSpread(_objectSpread({},window.__politicardDebug),{},{mismatch:[...(((_politicardDebug=window.__politicardDebug)===null||_politicardDebug===void 0?void 0:_politicardDebug.mismatch)||[])].slice(-19).concat([mismatch])});// Clear, then log to console so user can copy/paste trace\nconsole.warn('POLITICARD DIAGNOSTIC: hand mismatch detected',mismatch);}}catch(e){// swallow diagnostic errors to avoid breaking rendering\nconsole.error('Diagnostic error',e);}},[gameState.hands]);const draw=useCallback(()=>{var _LAYOUT$background,_LAYOUT$background2;const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Detect influence increases and start animations\ntry{const currSnapshot={};const collect=c=>{var _c$uid2,_c$influence;if(!c)return;if(c.kind!=='pol')return;const uid=(_c$uid2=c.uid)!==null&&_c$uid2!==void 0?_c$uid2:c.id!=null?String(c.id):null;if(!uid)return;currSnapshot[uid]=(_c$influence=c.influence)!==null&&_c$influence!==void 0?_c$influence:0;};// board rows\n(gameState.board[1].aussen||[]).forEach(collect);(gameState.board[2].aussen||[]).forEach(collect);(gameState.board[1].innen||[]).forEach(collect);(gameState.board[2].innen||[]).forEach(collect);// permanent slots\ncollect(gameState.permanentSlots[1].government);collect(gameState.permanentSlots[2].government);collect(gameState.permanentSlots[1].public);collect(gameState.permanentSlots[2].public);const now=performance.now();Object.keys(currSnapshot).forEach(uid=>{var _currSnapshot$uid,_prevInfluencesRef$cu;const curr=(_currSnapshot$uid=currSnapshot[uid])!==null&&_currSnapshot$uid!==void 0?_currSnapshot$uid:0;const prev=(_prevInfluencesRef$cu=prevInfluencesRef.current[uid])!==null&&_prevInfluencesRef$cu!==void 0?_prevInfluencesRef$cu:curr;if(curr>prev){const delta=curr-prev;const list=influenceAnimRef.current.get(uid)||[];list.push({start:now,duration:900,amount:delta});influenceAnimRef.current.set(uid,list);}prevInfluencesRef.current[uid]=curr;});}catch(e){// ignore\n}// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);// Clear click zones\nclickZonesRef.current=[];// Background: prefer PNG if configured\nif((_LAYOUT$background=LAYOUT.background)!==null&&_LAYOUT$background!==void 0&&_LAYOUT$background.enabled&&(_LAYOUT$background2=LAYOUT.background)!==null&&_LAYOUT$background2!==void 0&&_LAYOUT$background2.src){if(backgroundImageRef.current){ctx.drawImage(backgroundImageRef.current,0,0,canvas.width,canvas.height);}else{ctx.fillStyle='#0c131b';ctx.fillRect(0,0,canvas.width,canvas.height);}}else{ctx.fillStyle='#0c131b';ctx.fillRect(0,0,canvas.width,canvas.height);}// Apply UI transform (new signature)\nconst{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);ctx.save();ctx.translate(offsetX,offsetY);ctx.scale(scale,scale);// Draw opponent board (top rows) - clickable im Dev Mode\n// Draw opponent board using new layout system\nconst opponentPublicRects=getPublicRects('opponent');const opponentGovRects=getGovernmentRects('opponent');// Draw opponent public slots\nopponentPublicRects.forEach((s,idx)=>{const card=gameState.board[2].innen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,2);// Register click zone in dev mode\nif(devMode){clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'slot_card',player:2,lane:'innen',index:idx,card}}));}}else{// draw placeholder symbol for empty public slot\nconst img=slotSymbolImgsRef.current.get('public');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.4);// Register empty slot click zone in dev mode\nif(devMode){clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:2,lane:'innen',index:idx}});}}});// Draw opponent government slots\nopponentGovRects.forEach((s,idx)=>{const card=gameState.board[2].aussen[idx];const corrActive=!!(gameState.pendingAbilitySelect&&gameState.pendingAbilitySelect.type==='corruption_steal');if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,2);// In dev mode, register click zone based on drawCardAt result\nif(devMode){clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'board_card',player:2,lane:'aussen',index:idx,card}}));}// When corruption target selection is active, register exact slot rectangle for click detection\nif(corrActive){clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'board_card',player:2,lane:'aussen',index:idx,card}});}}else{const img=slotSymbolImgsRef.current.get('government');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.1);// Register empty slot click zone only in dev mode\nif(devMode){clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:2,lane:'aussen',index:idx}});}}});// Draw opponent permanent slots (show icons even when not current)\ntry{const permGovZoneOpp=getZone('slot.permanent.government.opponent');if(permGovZoneOpp){const card=gameState.permanentSlots[2].government;const[ox,oy,ow,oh]=permGovZoneOpp.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.government.opponent',card,'permanent_government',2);}else{const img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,ox,oy,ow,oh,0.3);// Register empty slot click zone in dev mode\nif(devMode){clickZonesRef.current.push({x:ox,y:oy,w:ow,h:oh,data:{type:'empty_slot',slot:'permanent_government',player:2}});}}}}catch(e){}try{const permPubZoneOpp=getZone('slot.permanent.public.opponent');if(permPubZoneOpp){const card=gameState.permanentSlots[2].public;const[ox2,oy2,ow2,oh2]=permPubZoneOpp.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.public.opponent',card,'permanent_public',2);}else{const img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,ox2,oy2,ow2,oh2,0.7);// Register empty slot click zone in dev mode\nif(devMode){clickZonesRef.current.push({x:ox2,y:oy2,w:ow2,h:oh2,data:{type:'empty_slot',slot:'permanent_public',player:2}});}}}}catch(e){}// Draw player board (middle rows)\n// Draw player board using new layout system\nconst playerPublicRects=getPublicRects('player');const playerGovRects=getGovernmentRects('player');// Draw player public slots\nplayerPublicRects.forEach((s,idx)=>{const card=gameState.board[1].innen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,1);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'row_slot',player:1,lane:'innen',index:idx}}));}else{// Empty slot click zone and draw public symbol\n// Draw unified pulsing icon for empty public slot\nconst img=slotSymbolImgsRef.current.get('public');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.4);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:1,lane:'innen',index:idx}});}});// Draw player government slots\nplayerGovRects.forEach((s,idx)=>{const card=gameState.board[1].aussen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,1);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'row_slot',player:1,lane:'aussen',index:idx}}));}else{// Empty slot click zone and draw government symbol\nconst img=slotSymbolImgsRef.current.get('government');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.1);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:1,lane:'aussen',index:idx}});}});// --- GOV PLACEMENT SPRITESHEET OVERLAY (frame-based) ---\ntry{const sprites=govSpritesRef.current;const gif=govGifRef.current;const anims=visualEffects&&visualEffects.playAnimsRef&&visualEffects.playAnimsRef.current||[];// Start sprite animation when a playAnim for a gov-card is active and maps to a slot\nconst now=performance.now();// Prefer mutating the source anim array so entries are consumed and don't retrigger repeatedly\nconst animsArr=visualEffects&&visualEffects.playAnimsRef&&visualEffects.playAnimsRef.current||(window.__pc_play_anims=window.__pc_play_anims||[]);// Iterate backwards and consume processed animations to ensure one-shot playback\nfor(let i=animsArr.length-1;i>=0;i--){var _zone$data$player,_zone$data$lane,_zone$data$index;const a=animsArr[i];try{// handle specialized 'hit:' playAnims which indicate target-hit sprites by slot key\nif(typeof a.uid==='string'&&a.uid.indexOf('hit:')===0){const inner=a.uid.slice(4);// '1.aussen.0'\nif(!hitSpriteStateRef.current[inner]){hitSpriteStateRef.current[inner]={started:now,frameCount:25,frameDuration:30};animsArr.splice(i,1);}continue;}}catch(e){}// find the zone/slot for this uid\nconst zone=clickZonesRef.current.find(z=>{var _z$data$card$uid2;return z.data&&z.data.card&&((_z$data$card$uid2=z.data.card.uid)!==null&&_z$data$card$uid2!==void 0?_z$data$card$uid2:String(z.data.card.id))===a.uid;});if(!zone)continue;// determine if gov slot or instant\nlet isGov=false;let isInstant=false;try{const dt=zone.data||{};if(dt.type==='row_slot'&&dt.lane==='aussen')isGov=true;if(dt.type==='board_card'&&dt.lane==='aussen')isGov=true;if(dt.slot&&typeof dt.slot==='string'&&dt.slot.includes('government'))isGov=true;if(dt.type==='activate_instant'||dt.slot&&typeof dt.slot==='string'&&dt.slot.includes('instant'))isInstant=true;}catch(e){}if(!isGov&&!isInstant)continue;const player=(_zone$data$player=zone.data.player)!==null&&_zone$data$player!==void 0?_zone$data$player:1;const lane=(_zone$data$lane=zone.data.lane)!==null&&_zone$data$lane!==void 0?_zone$data$lane:'aussen';const idx=(_zone$data$index=zone.data.index)!==null&&_zone$data$index!==void 0?_zone$data$index:0;const key=\"\".concat(player,\".\").concat(lane,\".\").concat(idx);// initialize sprite state if not present; consume the anim entry only when we actually start playback\nlet startedThis=false;if(isGov){if(!govSpriteStateRef.current[key]){govSpriteStateRef.current[key]={started:now,frameCount:14,frameDuration:40};// 14 frames @ ~40ms -> ~560ms\nstartedThis=true;}}if(isInstant){const instKey=\"\".concat(player,\".instant.\").concat(idx);if(!instantSpriteStateRef.current[instKey]){instantSpriteStateRef.current[instKey]={started:now,frameCount:14,frameDuration:40};startedThis=true;}}if(startedThis){animsArr.splice(i,1);}}// draw running sprite animations per gov slot\nObject.keys(govSpriteStateRef.current).forEach(k=>{const st=govSpriteStateRef.current[k];const elapsed=now-st.started;const total=st.frameCount*st.frameDuration;if(elapsed>total){// animation finished; remove state\ndelete govSpriteStateRef.current[k];return;}const frame=Math.floor(elapsed/st.frameDuration);// parse key -> player.lane.index\nconst parts=k.split('.');const player=Number(parts[0])||1;const lane=parts[1]||'aussen';const index=Number(parts[2]||0);// compute slot rect for this gov slot (player or opponent board)\nconst rect=player===1?playerGovRects[index]:opponentGovRects[index];if(!rect)return;// spritesheet: frame N located at x = N*256, y = 0\nif(sprites&&sprites.complete){const sx=frame*256;const sy=0;const sw=256;const sh=256;// draw exactly matching the slot rect size to avoid scaling mismatches\nconst dx=rect.x;const dy=rect.y;ctx.drawImage(sprites,sx,sy,sw,sh,dx,dy,rect.w,rect.h);}else if(gif&&gif.complete){// fallback to static gif if spritesheet missing\nctx.drawImage(gif,rect.x,rect.y,rect.w,rect.h);}});// --- INSTANT INITIATIVE SPRITESHEET (draw on instant slot) ---\ntry{const spritesI=instantSpritesRef.current;const nowI=performance.now();Object.keys(instantSpriteStateRef.current).forEach(k=>{const st=instantSpriteStateRef.current[k];const elapsed=nowI-st.started;const total=st.frameCount*st.frameDuration;if(elapsed>total){delete instantSpriteStateRef.current[k];return;}const frame=Math.floor(elapsed/st.frameDuration);const parts=k.split('.');const player=Number(parts[0])||1;const index=Number(parts[2]||0);const rects=getSofortRect(player?'player':'opponent');// getSofortRect returns one rect; map by player/context ‚Äî fallback to zone\nconst instantRect=getZone('slot.instant.player').rectPx;const[ix,iy,iw,ih]=instantRect;if(spritesI&&spritesI.complete){const sx=frame*256;const sy=0;const sw=256;const sh=256;ctx.drawImage(spritesI,sx,sy,sw,sh,ix,iy,iw,ih);}});}catch(e){}// --- HIT / TARGET SPRITESHEET (draw as overlay on targeted slot) ---\ntry{const spritesH=hitSpritesRef.current;const nowH=performance.now();Object.keys(hitSpriteStateRef.current).forEach(k=>{const st=hitSpriteStateRef.current[k];const elapsed=nowH-st.started;const total=st.frameCount*st.frameDuration;if(elapsed>total){delete hitSpriteStateRef.current[k];return;}const frame=Math.floor(elapsed/st.frameDuration);// parse key -> player.lane.index\nconst parts=k.split('.');const player=Number(parts[0])||1;const lane=parts[1]||'aussen';const index=Number(parts[2]||0);// compute slot rect for this gov slot (attempt gov then public)\nconst rect=(player===1?playerGovRects:opponentGovRects)[index]||(player===1?playerPublicRects:opponentPublicRects)[index];if(!rect)return;if(spritesH&&spritesH.complete){const sx=frame*256;const sy=0;const sw=256;const sh=256;const dx=rect.x;const dy=rect.y;ctx.drawImage(spritesH,sx,sy,sw,sh,dx,dy,rect.w,rect.h);}});}catch(e){}}catch(e){}// Draw player permanent slots (draw symbols if empty)\n// permanent government\nconst permGovZone=getZone('slot.permanent.government.player');if(permGovZone){const card=gameState.permanentSlots[1].government;const[x,y,w,h]=permGovZone.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.government.player',card,'permanent_government',1);}else{// Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent gov slot)\nconst img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,x,y,w,h,0.2);}}// permanent public\nconst permPubZone=getZone('slot.permanent.public.player');if(permPubZone){const card=gameState.permanentSlots[1].public;const[x2,y2,w2,h2]=permPubZone.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.public.player',card,'permanent_public',1);}else{// Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent public slot)\nconst img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,x2,y2,w2,h2,0.9);}}// Draw instant slots (both players) and placeholder if empty\nconst instantPlayerZone=getZone('slot.instant.player');if(instantPlayerZone){const card=gameState.board[1].sofort[0];const[x,y,w,h]=instantPlayerZone.rectPx;if(card)drawSingleSlot(ctx,'slot.instant.player',card,'instant',1);else{// Use unified icon draw helper for instant slot\nconst img=slotSymbolImgsRef.current.get('sofort');drawSlotIconWithPulse(ctx,img,x,y,w,h,0.0);}}// Draw interventions strip (player)\n// We draw symbol if empty\nconst interventionsZone=getZone('interventions.player');if(interventionsZone){const[zx,zy,zw,zh]=interventionsZone.rectPx;const card=gameState.traps[1]&&gameState.traps[1][0];if(card)drawInterventionsP1(ctx);else{const img=slotSymbolImgsRef.current.get('intervention');drawSlotIconWithPulse(ctx,img,zx,zy,zw,zh,0.6);}}// Draw interventions strip (opponent) - nur im Dev Mode\nif(devMode){drawInterventionsP2(ctx);}// Draw hand (P1)\ndrawHandP1(ctx);// üîß DEV MODE: Draw hand (P2) - nur im Dev Mode\nif(devMode){drawHandP2(ctx);}// Draw info panels\ndrawInfoPanels(ctx);// Draw corruption mode indicator\nconst corrActive=!!(gameState.pendingAbilitySelect&&gameState.pendingAbilitySelect.type==='corruption_steal');if(corrActive){ctx.save();ctx.fillStyle='rgba(255, 0, 0, 0.8)';ctx.font='bold 32px sans-serif';ctx.textAlign='center';ctx.fillText('üî• CORRUPTION TARGET SELECTION ACTIVE üî•',960,100);ctx.fillStyle='rgba(255, 255, 0, 0.9)';ctx.font='bold 24px sans-serif';ctx.fillText('Click on opponent government card to target',960,140);ctx.restore();}// --- VISUAL EFFECTS: Particle bursts, card pop scale, initiative ripple & AP pop ---\ntry{const now=performance.now();const{particlesRef,popsRef,ripplesRef,apLabelsRef,reducedMotion}=visualEffects||{};const parts=particlesRef.current||[];if(!reducedMotion){for(let i=parts.length-1;i>=0;i--){const p=parts[i];const age=now-p.start;if(age>p.life){parts.splice(i,1);continue;}p.vy+=p.gravity||0.09;p.x+=p.vx;p.y+=p.vy;const t=1-age/p.life;ctx.save();ctx.globalAlpha=Math.max(0,Math.min(1,t));ctx.fillStyle=p.color||'#ffd166';ctx.beginPath();ctx.arc(p.x,p.y,(p.size||4)*t,0,Math.PI*2);ctx.fill();ctx.restore();}particlesRef.current=parts;const pops=popsRef.current||[];pops.forEach(pop=>{const p=Math.min(1,Math.max(0,(now-pop.started)/pop.duration));const eased=1+0.12*(1-Math.pow(1-p,3));const zone=clickZonesRef.current.find(z=>{var _z$data$card$uid3;return z.data&&z.data.card&&((_z$data$card$uid3=z.data.card.uid)!==null&&_z$data$card$uid3!==void 0?_z$data$card$uid3:String(z.data.card.id))===pop.uid;});if(!zone)return;ctx.save();ctx.translate(zone.x+zone.w/2,zone.y+zone.h/2);ctx.scale(eased,eased);ctx.globalAlpha=0.12*(1-p);ctx.fillStyle='#ffffff';ctx.fillRect(-zone.w/2,-zone.h/2,zone.w,zone.h);ctx.restore();});const ripples=ripplesRef.current||[];for(let i=ripples.length-1;i>=0;i--){const r=ripples[i];const p=Math.min(1,Math.max(0,(now-r.started)/r.duration));if(p>=1){ripples.splice(i,1);continue;}const radius=r.radius*(0.8+1.8*p);ctx.save();const g=ctx.createRadialGradient(r.cx,r.cy,radius*0.1,r.cx,r.cy,radius);g.addColorStop(0,\"rgba(255,255,255,\".concat(0.12*(1-p),\")\"));g.addColorStop(1,\"rgba(255,255,255,0)\");ctx.fillStyle=g;ctx.beginPath();ctx.arc(r.cx,r.cy,radius,0,Math.PI*2);ctx.fill();ctx.restore();if(r.showAp&&!r._apSpawned){apLabelsRef.current=apLabelsRef.current||[];apLabelsRef.current.push({x:r.apX,y:r.apY,started:now,duration:800,text:'+1'});r._apSpawned=true;}}ripplesRef.current=ripples;const apl=apLabelsRef.current||[];for(let i=apl.length-1;i>=0;i--){const l=apl[i];const p=Math.min(1,Math.max(0,(now-l.started)/l.duration));if(p>=1){apl.splice(i,1);continue;}ctx.save();ctx.globalAlpha=1-p;ctx.fillStyle='#ffdd57';ctx.font='bold 22px sans-serif';ctx.textAlign='center';ctx.fillText(l.text,l.x,l.y-20*p);ctx.restore();}apLabelsRef.current=apl;}else{const apl=apLabelsRef.current||[];for(let i=apl.length-1;i>=0;i--){const l=apl[i];const p=Math.min(1,Math.max(0,(now-l.started)/l.duration));if(p>=1){apl.splice(i,1);continue;}ctx.save();ctx.globalAlpha=1-p;ctx.fillStyle='#ffdd57';ctx.font='bold 18px sans-serif';ctx.textAlign='center';ctx.fillText(l.text,l.x,l.y-10*p);ctx.restore();}apLabelsRef.current=apl;}}catch(e){}// --- Overlay pass: draw influence pulse ring and +N labels on top of all cards ---\ntry{const now=performance.now();// iterate over stored anims\ninfluenceAnimRef.current.forEach((anims,uid)=>{// find card position by scanning clickZones\nconst zone=clickZonesRef.current.find(z=>{var _z$data$card$uid4;return z.data&&(z.data.card&&((_z$data$card$uid4=z.data.card.uid)!==null&&_z$data$card$uid4!==void 0?_z$data$card$uid4:String(z.data.card.id))===uid||z.data.card&&z.data.card.uid===uid);});if(!zone)return;const cx=zone.x+zone.w/2;const cy=zone.y+zone.h/2;// calculate aggregate pulse for this uid\nlet maxPulse=0;let totalAmount=0;const remaining=[];anims.forEach(a=>{const p=Math.min(1,Math.max(0,(now-a.start)/a.duration));const pulse=Math.pow(Math.max(0,1-p),2);if(pulse>maxPulse)maxPulse=pulse;if(p<1){remaining.push(a);totalAmount+=a.amount;}});// update list\nif(remaining.length>0)influenceAnimRef.current.set(uid,remaining);else influenceAnimRef.current.delete(uid);if(maxPulse>0.001){// draw a soft ring to the right-bottom of influence number\nconst ringRadius=Math.max(8,zone.w*0.08)*(1+maxPulse*0.6);const ringX=zone.x+zone.w-28;// near bottom-right where influence text lives\nconst ringY=zone.y+zone.h-20;ctx.save();ctx.beginPath();ctx.strokeStyle=\"rgba(46, 204, 113, \".concat(0.9*maxPulse,\")\");ctx.lineWidth=Math.max(2,Math.ceil(6*maxPulse));ctx.arc(ringX,ringY,ringRadius,0,Math.PI*2);ctx.stroke();ctx.restore();}if(totalAmount>0){// floating +N to the right of influence number\nconst labelX=zone.x+zone.w-12;const labelY=zone.y+zone.h-32-Math.random()*6;// slight jitter\nctx.save();ctx.fillStyle='#2ecc71';ctx.font='bold 16px sans-serif';ctx.textAlign='left';ctx.textBaseline='middle';ctx.fillText(\"+\".concat(totalAmount),labelX,labelY);ctx.restore();}});}catch(e){// ignore overlay errors\n}// --- Outline pass: draw a subtle, slightly pulsing 257x257 square around 256x256 slots ---\ntry{const now2=performance.now();clickZonesRef.current.forEach((z,i)=>{if(!z)return;const w=z.w||0;const h=z.h||0;// only target 256x256 slot-sized zones (covers the icons)\nif(Math.abs(w-256)>0.1||Math.abs(h-256)>0.1)return;const x=z.x;const y=z.y;// Color palette (rgb)\nconst rgbTeal='20,184,166';const rgbBurg='127,29,29';const rgbPurple='139,92,246';const rgbYellow='250,204,21';const rgbOrange='251,146,60';// Determine slot semantic\nlet slotType='default';try{const dt=z.data||{};if(dt.slot&&typeof dt.slot==='string'){if(dt.slot.includes('government'))slotType='government';else if(dt.slot.includes('public'))slotType='public';else if(dt.slot.includes('permanent'))slotType='permanent';else if(dt.slot.includes('instant'))slotType='instant';}if(dt.type==='row_slot'&&dt.lane==='aussen')slotType='government';if(dt.type==='row_slot'&&dt.lane==='innen')slotType='public';if(dt.type==='trap_p1'||dt.type==='trap_p2'||dt.card&&dt.card.kind==='trap')slotType='intervention';if(dt.type==='activate_instant'||dt.slot==='instant')slotType='instant';if(dt.slot==='permanent_government'||dt.slot==='permanent_public'||dt.slot==='permanent')slotType='permanent';}catch(e){}const pulse=0.5+0.5*Math.sin(now2/350+i);const alpha=0.06+0.12*pulse;// subtle alpha\nconst lw=1+2*pulse;// line width between 1 and 3\n// Create gradient based on slot type\nlet grad=null;try{grad=ctx.createLinearGradient(x,y,x+w,y+h);if(slotType==='government'){grad.addColorStop(0,\"rgba(\".concat(rgbTeal,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbBurg,\",1)\"));}else if(slotType==='public'){grad.addColorStop(0,\"rgba(\".concat(rgbBurg,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbTeal,\",1)\"));}else if(slotType==='permanent'){grad.addColorStop(0,\"rgba(\".concat(rgbPurple,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbPurple,\",1)\"));}else if(slotType==='instant'){grad.addColorStop(0,\"rgba(\".concat(rgbYellow,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbYellow,\",1)\"));}else if(slotType==='intervention'){grad.addColorStop(0,\"rgba(\".concat(rgbOrange,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbOrange,\",1)\"));}else{grad.addColorStop(0,\"rgba(255,255,255,1)\");grad.addColorStop(1,\"rgba(255,255,255,1)\");}}catch(e){grad=null;}ctx.save();if(grad)ctx.strokeStyle=grad;else ctx.strokeStyle=\"rgba(255,255,255,\".concat(alpha.toFixed(3),\")\");ctx.globalAlpha=alpha;ctx.lineWidth=lw;// draw 257x257 centered so that it encloses the 256 slot\nctx.strokeRect(x-0.5,y-0.5,w+1,h+1);ctx.restore();});}catch(e){// ignore outline errors\n}ctx.restore();// expose zones for debug snapshot\nwindow.__politicardDebug={uiTransform:getUiTransform(canvas.width,canvas.height),canvasSize:{width:canvas.width,height:canvas.height},zones:LAYOUT.zones,clickZones:clickZonesRef.current.slice(0,1000)};// Build canonical slotPositions map for animations/debugging\ntry{const map={};clickZonesRef.current.forEach(z=>{const d=z.data||{};// support row_slot, board_card, slot_card shapes\nif(d.type==='row_slot'||d.type==='board_card'||d.type==='slot_card'||d.type==='hand_p1'||d.type==='hand_p2'){var _d$player,_d$lane;const player=(_d$player=d.player)!==null&&_d$player!==void 0?_d$player:d.type==='hand_p2'?2:1;const lane=(_d$lane=d.lane)!==null&&_d$lane!==void 0?_d$lane:typeof d.slot==='string'?d.slot:d.type==='hand_p2'?'hand':'unknown';let index;if(d.index!=null){index=d.index;}else if(d.card){// prefer explicit slotIndex, fallback to card.index, otherwise 0\nindex=d.card.slotIndex!=null?d.card.slotIndex:d.card.index!=null?d.card.index:0;}else{index=0;}const key=\"\".concat(player,\".\").concat(lane,\".\").concat(index);map[key]={x:z.x,y:z.y,w:z.w,h:z.h,cx:z.x+z.w/2,cy:z.y+z.h/2};}});slotPositionsRef.current=map;window.__politicardDebug=_objectSpread(_objectSpread({},window.__politicardDebug),{},{slotPositions:slotPositionsRef.current});}catch(e){// don't let debug mapping break rendering\n}// Run diagnostics after canvas is fully rendered\nrunDiagnostics();},[drawLane,drawHandP1,drawHandP2,drawInterventionsP1,drawInterventionsP2,drawPermanentSlotsP1,drawPermanentSlotsP2,drawInstantSlots,drawInfoPanels,devMode,runDiagnostics]);const DRAW_LAYOUT_OVERLAY=false;// force off per new layout system\n// Load slot symbol images once\nuseEffect(()=>{const load=(key,src)=>{const img=new Image();img.onload=()=>{slotSymbolImgsRef.current.set(key,img);};img.onerror=()=>{console.warn('Failed to load slot icon',src);};img.src=src;};// load all slot icons\nload('public',publicSymbolUrl);load('sofort',sofortSymbolUrl);load('dauerhaft',dauerhaftSymbolUrl);load('government',governmentSymbolUrl);load('intervention',interventionSymbolUrl);// load test GIF for gov overlay\ntry{const img=new Image();img.onload=()=>{govGifRef.current=img;};img.onerror=()=>{console.warn('Failed to load gov overlay gif',govPlaceGifUrl);};img.src=govPlaceGifUrl;}catch(e){}// load spritesheet for placement animation\ntry{const s=new Image();s.onload=()=>{govSpritesRef.current=s;};s.onerror=()=>{console.warn('Failed to load gov spritesheet',govPlaceSpritesheetUrl);};s.src=govPlaceSpritesheetUrl;}catch(e){}// load spritesheet for instant initiative activation\ntry{const si=new Image();si.onload=()=>{instantSpritesRef.current=si;};si.onerror=()=>{console.warn('Failed to load instant spritesheet',instantSpritesheetUrl);};si.src=instantSpritesheetUrl;}catch(e){}// load spritesheet for hit/target animation (25 frames)\ntry{const h=new Image();h.onload=()=>{hitSpritesRef.current=h;};h.onerror=()=>{console.warn('Failed to load hit spritesheet',hitSpritesheetUrl);};h.src=hitSpritesheetUrl;}catch(e){}// ensure first draw\nrequestAnimationFrame(draw);},[draw]);// Expose debug trigger to manually start gov sprite animation by slot-key or uid\nuseEffect(()=>{window.__pc_triggerGovAnim=id=>{try{var _zone$data$player2,_zone$data$lane2,_zone$data$index2;const now=performance.now();// if id is slot key like '1.aussen.2'\nif(typeof id==='string'&&id.indexOf('.')>=0){govSpriteStateRef.current[id]={started:now,frameCount:14,frameDuration:40};return;}// otherwise try to resolve as uid/id to a clickZone\nconst uid=id;const zone=clickZonesRef.current.find(z=>{var _z$data$card$uid5;return z.data&&z.data.card&&(((_z$data$card$uid5=z.data.card.uid)!==null&&_z$data$card$uid5!==void 0?_z$data$card$uid5:String(z.data.card.id))===uid||z.data.card.id===uid);});if(!zone){console.warn('pc_triggerGovAnim: no slot found for uid',uid);return;}const player=(_zone$data$player2=zone.data.player)!==null&&_zone$data$player2!==void 0?_zone$data$player2:1;const lane=(_zone$data$lane2=zone.data.lane)!==null&&_zone$data$lane2!==void 0?_zone$data$lane2:zone.data.slot&&typeof zone.data.slot==='string'?zone.data.slot:'aussen';const index=(_zone$data$index2=zone.data.index)!==null&&_zone$data$index2!==void 0?_zone$data$index2:0;const key=\"\".concat(player,\".\").concat(lane,\".\").concat(index);govSpriteStateRef.current[key]={started:now,frameCount:14,frameDuration:40};}catch(e){console.warn('pc_triggerGovAnim error',e);}};// expose easy alias\ntry{window.pc_triggerGovAnim=window.__pc_triggerGovAnim;}catch(e){}return()=>{delete window.__pc_triggerGovAnim;};},[]);// Expose debug trigger for hit animation (key: '1.aussen.0' or uid)\nuseEffect(()=>{window.__pc_triggerHitAnim=id=>{try{var _zone$data$player3,_zone$data$lane3,_zone$data$index3;const now=performance.now();// if id is slot key like '1.aussen.2'\nif(typeof id==='string'&&id.indexOf('.')>=0){hitSpriteStateRef.current[id]={started:now,frameCount:25,frameDuration:30};return;}// otherwise try to resolve as uid/id to a clickZone\nconst uid=id;const zone=clickZonesRef.current.find(z=>{var _z$data$card$uid6;return z.data&&z.data.card&&(((_z$data$card$uid6=z.data.card.uid)!==null&&_z$data$card$uid6!==void 0?_z$data$card$uid6:String(z.data.card.id))===uid||z.data.card.id===uid);});if(!zone){console.warn('pc_triggerHitAnim: no slot found for uid',uid);return;}const player=(_zone$data$player3=zone.data.player)!==null&&_zone$data$player3!==void 0?_zone$data$player3:1;const lane=(_zone$data$lane3=zone.data.lane)!==null&&_zone$data$lane3!==void 0?_zone$data$lane3:zone.data.slot&&typeof zone.data.slot==='string'?zone.data.slot:'aussen';const index=(_zone$data$index3=zone.data.index)!==null&&_zone$data$index3!==void 0?_zone$data$index3:0;const key=\"\".concat(player,\".\").concat(lane,\".\").concat(index);hitSpriteStateRef.current[key]={started:now,frameCount:25,frameDuration:30};}catch(e){console.warn('pc_triggerHitAnim error',e);}};try{window.pc_triggerHitAnim=window.__pc_triggerHitAnim;}catch(e){}return()=>{delete window.__pc_triggerHitAnim;};},[]);// Redraw when game state or selection changes\nuseEffect(()=>{requestAnimationFrame(draw);},[gameState,selectedHandIndex,draw]);// Continuous render loop to keep canvas updated without relying on external state refs\nuseEffect(()=>{let frame;const loop=()=>{draw();frame=requestAnimationFrame(loop);};frame=requestAnimationFrame(loop);return()=>cancelAnimationFrame(frame);},[draw]);const handleCardClick=useCallback(data=>{// Corruption target selection: intercept board card clicks for opponent government\nif(corruptionSelectActorRef.current&&data&&data.type==='board_card'){try{const actor=corruptionSelectActorRef.current;const victim=actor===1?2:1;if(data.player===victim&&(data.lane==='aussen'||data.lane==='government')){var _data$card$uid,_data$card,_data$card2;const uid=(_data$card$uid=(_data$card=data.card)===null||_data$card===void 0?void 0:_data$card.uid)!==null&&_data$card$uid!==void 0?_data$card$uid:(_data$card2=data.card)===null||_data$card2===void 0?void 0:_data$card2.id;if(uid!=null){corruptionSelectActorRef.current=null;try{window.dispatchEvent(new CustomEvent('pc:corruption_target_selected',{detail:{player:actor,targetUid:uid}}));}catch(e){}return;// do not propagate\n}}}catch(e){}}// Hand-Klick\nif(data.type==='hand_p1'){var _data$card$uid2,_data$card3,_data$card4,_gameState$hands;const uid=(_data$card$uid2=(_data$card3=data.card)===null||_data$card3===void 0?void 0:_data$card3.uid)!==null&&_data$card$uid2!==void 0?_data$card$uid2:(_data$card4=data.card)===null||_data$card4===void 0?void 0:_data$card4.id;const stateHand=((_gameState$hands=gameState.hands)===null||_gameState$hands===void 0?void 0:_gameState$hands[1])||[];const idxInState=stateHand.findIndex(c=>{var _c$uid3;return((_c$uid3=c.uid)!==null&&_c$uid3!==void 0?_c$uid3:c.id)===uid;});onCardClick(data);return;}// Slot-Klick\nif(data.type==='row_slot'){var _gameState$board$1$in,_gameState$board,_gameState$board$,_gameState$board$1$au,_gameState$board2,_gameState$board2$;const lane=data.lane;const cap=getLaneCapacity(lane);// Hole aktuelle Row-L√§nge aus gameState\nconst rowCards=lane==='public'?(_gameState$board$1$in=(_gameState$board=gameState.board)===null||_gameState$board===void 0?void 0:(_gameState$board$=_gameState$board[1])===null||_gameState$board$===void 0?void 0:_gameState$board$.innen)!==null&&_gameState$board$1$in!==void 0?_gameState$board$1$in:[]:(_gameState$board$1$au=(_gameState$board2=gameState.board)===null||_gameState$board2===void 0?void 0:(_gameState$board2$=_gameState$board2[1])===null||_gameState$board2$===void 0?void 0:_gameState$board2$.aussen)!==null&&_gameState$board$1$au!==void 0?_gameState$board$1$au:[];if(rowCards.length>=cap){// Optional: UI Feedback\nconsole.warn(\"Row \".concat(lane,\" is full (\").concat(rowCards.length,\"/\").concat(cap,\")\"));return;}onCardClick(data);return;}// Andere Klicks (empty_slot, board_card, etc.)\nonCardClick(data);},[gameState,onCardClick]);const handleClick=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);const mx=(e.clientX-rect.left-offsetX)/scale;const my=(e.clientY-rect.top-offsetY)/scale;const hit=clickZonesRef.current.find(z=>mx>=z.x&&mx<=z.x+z.w&&my>=z.y&&my<=z.y+z.h);if(hit){console.debug('[CanvasClick] mx,my,hit:',mx,my,hit.data);try{// If user clicked a drawn card in an instant slot, normalize to activate_instant\nconst d=hit.data||{};if(d.type==='slot_card'&&d.slot==='instant'){handleCardClick({type:'activate_instant',player:d.player||1,card:d.card});return;}// Fallback: if there's an explicit activate_instant zone, pass through\nif(d.type==='activate_instant'){handleCardClick(d);return;}}catch(err){}handleCardClickInternal(hit.data);}},[handleCardClick]);const handleMouseMove=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);const mx=(e.clientX-rect.left-offsetX)/scale;const my=(e.clientY-rect.top-offsetY)/scale;const hit=clickZonesRef.current.find(z=>mx>=z.x&&mx<=z.x+z.w&&my>=z.y&&my<=z.y+z.h);if(hit){var _hit$data$card;console.log('[hover]',hit.data.type,(_hit$data$card=hit.data.card)===null||_hit$data$card===void 0?void 0:_hit$data$card.name);onCardHover(_objectSpread(_objectSpread({},hit.data),{},{x:e.clientX,y:e.clientY}));}else{onCardHover(null);}},[onCardHover]);const handleWheel=useCallback(e=>{// only enable when player1 has more slots than visible\nconst handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;const zone=getZone('hand.player');if(!zone)return;if(handLen<=5)return;// nothing to scroll\n// Prevent page scrolling when over canvas\ne.preventDefault();// accumulate target offset (invert so wheel down moves cards up)\n// Each wheel step moves by 48px per delta unit\nconst delta=Math.sign(e.deltaY)*48;// compute slot height more robustly\nconst slots=computeSlotRects(zone);const slotH=slots&&slots.length>0?slots[0].h:zone.rectPx[3]/5;const visible=5;const maxOffset=-(Math.max(0,handLen-visible)*slotH);handScrollTargetRef.current=Math.max(Math.min(handScrollTargetRef.current-delta,0),maxOffset);},[gameState.hands]);const handleTouchStart=useCallback(e=>{if(!e.touches||e.touches.length===0)return;const handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;if(handLen<=5)return;isTouchingRef.current=true;const y=e.touches[0].clientY;touchStartYRef.current=y;lastTouchYRef.current=y;e.preventDefault();},[gameState.hands]);const handleTouchMove=useCallback(e=>{var _lastTouchYRef$curren;if(!isTouchingRef.current)return;if(!e.touches||e.touches.length===0)return;const y=e.touches[0].clientY;const last=(_lastTouchYRef$curren=lastTouchYRef.current)!==null&&_lastTouchYRef$curren!==void 0?_lastTouchYRef$curren:y;const dy=y-last;// positive when moving down\nlastTouchYRef.current=y;// invert so dragging up moves cards up\nconst delta=-dy;const handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;const zone=getZone('hand.player');if(!zone)return;const slots=computeSlotRects(zone);const slotH=slots&&slots.length>0?slots[0].h:zone.rectPx[3]/5;const visible=5;const maxOffset=-(Math.max(0,handLen-visible)*slotH);handScrollTargetRef.current=Math.max(Math.min(handScrollTargetRef.current+delta,0),maxOffset);e.preventDefault();},[gameState.hands]);const handleTouchEnd=useCallback(e=>{isTouchingRef.current=false;touchStartYRef.current=null;lastTouchYRef.current=null;},[]);// Expose debug trigger to manually start instant sprite animation by slot-key or uid\nuseEffect(()=>{window.__pc_triggerInstantAnim=key=>{const now=performance.now();instantSpriteStateRef.current[key||'1.instant.0']={started:now,frameCount:14,frameDuration:40};};// alias\ntry{window.pc_triggerInstantAnim=window.__pc_triggerInstantAnim;}catch(e){}return()=>{delete window.__pc_triggerGovAnim;delete window.__pc_triggerInstantAnim;};},[]);// Click handler wrapper for corruption selection\nconst handleCardClickInternal=useCallback(data=>{const sel=gameState.pendingAbilitySelect;if(sel&&sel.type==='corruption_steal'){// Accept clicks on either actual card sprites (with uid) or on empty row_slot hitboxes.\nif(data.player!==sel.actorPlayer&&data.lane==='aussen'){let targetUid=data.uid;// If we got a row_slot hit (no uid), map index‚Üíuid from board state\nif(!targetUid&&data.type==='row_slot'){try{var _board5,_board5$p,_board5$p$aussen;const p=data.player;const idx=data.index;const card=(_board5=gameState.board)===null||_board5===void 0?void 0:(_board5$p=_board5[p])===null||_board5$p===void 0?void 0:(_board5$p$aussen=_board5$p.aussen)===null||_board5$p$aussen===void 0?void 0:_board5$p$aussen[idx];targetUid=card===null||card===void 0?void 0:card.uid;}catch(e){}}if(targetUid){try{console.debug('[CORR] forwarding uid',targetUid,'actorPlayer=',sel.actorPlayer);window.dispatchEvent(new CustomEvent('pc:corruption_pick_target',{detail:{player:sel.actorPlayer,targetUid}}));// Also open small confirmation overlay via DOM event for modal convenience\ntry{window.dispatchEvent(new CustomEvent('pc:corruption_target_selected',{detail:{player:sel.actorPlayer,targetUid}}));}catch(e){}}catch(e){}return;// consume click\n}}}onCardClick(data);},[gameState,onCardClick]);useEffect(()=>{const onDiceResult=()=>{// remove corruption modal if exists\nconst el=document.getElementById('pc-corruption-modal');if(el)el.remove();corruptionSelectActorRef.current=null;};window.addEventListener('pc:dice_result',onDiceResult);return()=>window.removeEventListener('pc:dice_result',onDiceResult);},[]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:1920,height:1080,style:{display:'block',width:'100%',height:'100%',imageRendering:'auto'},onClick:handleClick,onMouseMove:handleMouseMove,onWheel:handleWheel,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd});};","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useVisualEffectsSafe","LAYOUT","getZone","computeSlotRects","getUiTransform","getLaneCapacity","getPublicRects","getGovernmentRects","getSofortRect","sortHandCards","getCardImagePath","influenceIconUrl","publicSymbolUrl","sofortSymbolUrl","dauerhaftSymbolUrl","governmentSymbolUrl","interventionSymbolUrl","govPlaceGifUrl","govPlaceSpritesheetUrl","instantSpritesheetUrl","hitSpritesheetUrl","jsx","_jsx","isCorruptionSelection","state","player","sel","pendingAbilitySelect","type","actorPlayer","GameCanvas","_ref","gameState","selectedHandIndex","onCardClick","onCardHover","devMode","handler","ev","_ev$detail","detail","dice","document","querySelector","window","dispatchEvent","CustomEvent","e","addEventListener","removeEventListener","canvasRef","visualEffects","clickZonesRef","handScrollTargetRef","handScrollCurrentRef","handScrollEnabledRef","touchStartYRef","lastTouchYRef","isTouchingRef","backgroundImageRef","imageCacheRef","Map","influenceImgRef","influenceAnimRef","prevInfluencesRef","slotSymbolImgsRef","slotPositionsRef","uidToKeyRef","keyToUidRef","govGifRef","govSpritesRef","hitSpritesRef","govSpriteStateRef","instantSpritesRef","instantSpriteStateRef","hitSpriteStateRef","corruptionSelectActorRef","gameStateRef","current","onEnterCorruptionSelect","_ev$detail2","actor","console","log","error","onKeyDown","_gs$board","_gs$board$victim","_gs$board$victim$auss","_card$uid","k","key","includes","victim","idx","Number","gs","card","board","aussen","debug","uid","id","targetUid","preventDefault","drawSlotIconWithPulse","ctx","img","x","y","w","h","phase","arguments","length","undefined","complete","now","performance","base","pulseRange","period","pulse","Math","sin","save","globalAlpha","drawImage","grad","createLinearGradient","addColorStop","concat","globalCompositeOperation","fillStyle","fillRect","restore","Image","src","drawCardAt","size","_shield","selected","showAPCost","extraAlpha","_uid","list","playAnimsRef","__pc_play_anims","anim","find","a","p","min","max","started","duration","pow","dx","dy","s","floor","cached","get","naturalWidth","onload","set","kind","_influence","barH","fontSize","font","textAlign","textBaseline","fillText","influence","protected","shield","deactivated","_influence2","badgeHeight","badgeWidth","badgeX","badgeY","beginPath","roundRect","fill","strokeStyle","lineWidth","strokeRect","getSlotDisplayName","zoneId","index","slotNumber","drawLane","lane","clickable","zone","slots","arr","forEach","bgColor","isSelected","hands","clickZone","textY","name","push","_objectSpread","data","slotName","drawHandP1","hand","target","offsetY","round","i","originalIndex","findIndex","c","isSel","sx","sy","drawHandP2","rectPx","drawInterventionsP1","traps","zx","zy","zw","zh","drawInterventionsP2","drawSingleSlot","clickType","slot","onTargetSelected","_board","_board2","_board2$aussen","_board3","_board4","_board4$aussen","el","getElementById","createElement","style","position","left","top","transform","padding","background","border","borderRadius","zIndex","color","fontFamily","body","appendChild","innerHTML","rollBtn","cancelBtn","onclick","disabled","innerText","remove","drawPermanentSlotsP1","permanentSlots","government","public","drawPermanentSlotsP2","drawInstantSlots","sofortPlayerCard","sofort","sofortOppCard","getActiveKeywordsAndSubcategories","allCards","innen","filter","keywords","Set","subcategories","tag","add","publicCard","oligarchNames","platformNames","movementNames","ngoNames","intelligenceNames","mediaNames","Array","from","drawInfoPanels","govPanelX","govPanelY","govPanelW","govPanelH","keyword","pubPanelX","pubPanelY","pubPanelW","pubPanelH","subcategory","displayName","substring","runDiagnostics","handZones","z","uiUIDs","map","_z$data$card$uid","Boolean","stateHand","stateUIDs","_c$uid","missingInState","u","missingInUI","_politicardDebug","mismatch","ts","Date","uiCount","stateCount","stack","Error","__politicardDebug","slice","warn","draw","_LAYOUT$background","_LAYOUT$background2","canvas","getContext","currSnapshot","collect","_c$uid2","_c$influence","String","Object","keys","_currSnapshot$uid","_prevInfluencesRef$cu","curr","prev","delta","start","amount","clearRect","width","height","enabled","scale","offsetX","translate","opponentPublicRects","opponentGovRects","corrActive","permGovZoneOpp","ox","oy","ow","oh","permPubZoneOpp","ox2","oy2","ow2","oh2","playerPublicRects","playerGovRects","sprites","gif","anims","animsArr","_zone$data$player","_zone$data$lane","_zone$data$index","indexOf","inner","frameCount","frameDuration","splice","_z$data$card$uid2","isGov","isInstant","dt","startedThis","instKey","st","elapsed","total","frame","parts","split","rect","sw","sh","spritesI","nowI","rects","instantRect","ix","iy","iw","ih","spritesH","nowH","permGovZone","permPubZone","x2","y2","w2","h2","instantPlayerZone","interventionsZone","particlesRef","popsRef","ripplesRef","apLabelsRef","reducedMotion","age","life","vy","gravity","vx","t","arc","PI","pops","pop","eased","_z$data$card$uid3","ripples","r","radius","g","createRadialGradient","cx","cy","showAp","_apSpawned","apX","apY","text","apl","l","_z$data$card$uid4","maxPulse","totalAmount","remaining","delete","ringRadius","ringX","ringY","ceil","stroke","labelX","labelY","random","now2","abs","rgbTeal","rgbBurg","rgbPurple","rgbYellow","rgbOrange","slotType","alpha","lw","toFixed","uiTransform","canvasSize","zones","clickZones","d","_d$player","_d$lane","slotIndex","slotPositions","DRAW_LAYOUT_OVERLAY","load","onerror","si","requestAnimationFrame","__pc_triggerGovAnim","_zone$data$player2","_zone$data$lane2","_zone$data$index2","_z$data$card$uid5","pc_triggerGovAnim","__pc_triggerHitAnim","_zone$data$player3","_zone$data$lane3","_zone$data$index3","_z$data$card$uid6","pc_triggerHitAnim","loop","cancelAnimationFrame","handleCardClick","_data$card$uid","_data$card","_data$card2","_data$card$uid2","_data$card3","_data$card4","_gameState$hands","idxInState","_c$uid3","_gameState$board$1$in","_gameState$board","_gameState$board$","_gameState$board$1$au","_gameState$board2","_gameState$board2$","cap","rowCards","handleClick","getBoundingClientRect","mx","clientX","my","clientY","hit","err","handleCardClickInternal","handleMouseMove","_hit$data$card","handleWheel","handLen","sign","deltaY","slotH","visible","maxOffset","handleTouchStart","touches","handleTouchMove","_lastTouchYRef$curren","last","handleTouchEnd","__pc_triggerInstantAnim","pc_triggerInstantAnim","_board5","_board5$p","_board5$p$aussen","onDiceResult","ref","display","imageRendering","onClick","onMouseMove","onWheel","onTouchStart","onTouchMove","onTouchEnd"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/GameCanvas.tsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { useVisualEffects, useVisualEffectsSafe } from '../context/VisualEffectsContext';\nimport { GameState, Card, PoliticianCard, Player, Lane } from '../types/game';\nimport { LAYOUT, getZone, computeSlotRects, getUiTransform, getLaneCapacity, getPublicRects, getGovernmentRects, getSofortRect } from '../ui/layout';\nimport { drawCardImage, sortHandCards } from '../utils/gameUtils';\nimport { getNetApCost } from '../utils/ap';\nimport { getCardImagePath } from '../data/gameData';\nimport influenceIconUrl from '../assets/icons/influence.svg';\nimport publicSymbolUrl from '../assets/icons/public_symbol.png';\nimport sofortSymbolUrl from '../assets/icons/sofort_initiative_symbol.png';\nimport dauerhaftSymbolUrl from '../assets/icons/dauerhaft_initative.png';\nimport governmentSymbolUrl from '../assets/icons/government_symbol.png';\nimport interventionSymbolUrl from '../assets/icons/intervention_symbol.png';\nimport govPlaceGifUrl from '../assets/effect_gif/place_card_gov_256x256.gif';\nimport govPlaceSpritesheetUrl from '../ui/sprites/playcard_gov_256x256_14.png';\nimport instantSpritesheetUrl from '../ui/sprites/activate_trap_hit_target_256x256_16x2.png';\nimport hitSpritesheetUrl from '../ui/sprites/activate_inititive_hit_target_256x256_16_2rows.png';\n\ninterface GameCanvasProps {\n  gameState: GameState;\n  selectedHandIndex: number | null;\n  onCardClick: (data: any) => void;\n  onCardHover: (data: any) => void;\n  devMode?: boolean; // üîß DEV MODE: Show P2 hand when true\n}\n\n// Helper: is corruption target selection active\nfunction isCorruptionSelection(state: GameState, player: Player) {\n  const sel: any = (state as any).pendingAbilitySelect;\n  return sel && sel.type === 'corruption_steal' && sel.actorPlayer === player;\n}\n\nexport const GameCanvas: React.FC<GameCanvasProps> = ({\n  gameState,\n  selectedHandIndex,\n  onCardClick,\n  onCardHover,\n  devMode = false,\n}) => {\n  // listen for dice roll requests from resolver and trigger Dice3D\n  useEffect(() => {\n    const handler = (ev: any) => {\n      try {\n        const player = ev.detail?.player;\n        // find Dice3D canvas on page and trigger click (it rolls on click)\n        const dice = document.querySelector('canvas') as HTMLCanvasElement | null;\n        // better: dispatch global event so App-level Dice3D component can roll programmatically\n        window.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll', { detail: { player } }));\n      } catch (e) {}\n    };\n    window.addEventListener('pc:request_dice_roll', handler as EventListener);\n    return () => window.removeEventListener('pc:request_dice_roll', handler as EventListener);\n  }, []);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const visualEffects = useVisualEffectsSafe();\n  const clickZonesRef = useRef<Array<{ x: number; y: number; w: number; h: number; data: any }>>([]);\n  // Smooth vertical scroll for P1 hand when it has more than visible slots\n  const handScrollTargetRef = useRef<number>(0);\n  const handScrollCurrentRef = useRef<number>(0);\n  const handScrollEnabledRef = useRef<boolean>(true);\n  // Touch handling refs\n  const touchStartYRef = useRef<number | null>(null);\n  const lastTouchYRef = useRef<number | null>(null);\n  const isTouchingRef = useRef<boolean>(false);\n  const backgroundImageRef = useRef<HTMLImageElement | null>(null);\n  const imageCacheRef = useRef<Map<string, HTMLImageElement>>(new Map());\n  const influenceImgRef = useRef<HTMLImageElement | null>(null);\n  // Animation state for visual influence changes: Map<uid, Array<Anim>>\n  const influenceAnimRef = useRef<Map<string, Array<{ start: number; duration: number; amount: number }>>>(new Map());\n  // Previous per-card influence snapshot to detect increases\n  const prevInfluencesRef = useRef<Record<string, number>>({});\n  // Slot symbol images\n  const slotSymbolImgsRef = useRef<Map<string, HTMLImageElement>>(new Map());\n  // Map of canonical slot positions for animations: key -> {x,y,w,h,cx,cy}\n  const slotPositionsRef = useRef<Record<string, { x: number; y: number; w: number; h: number; cx: number; cy: number }>>({});\n  // Mapping between animation UIDs and slot keys to ensure one-shot playback\n  const uidToKeyRef = useRef<Record<string, string>>({});\n  const keyToUidRef = useRef<Record<string, string>>({});\n  // Temporary test GIF for government slots\n  const govGifRef = useRef<HTMLImageElement | null>(null);\n  const govSpritesRef = useRef<HTMLImageElement | null>(null);\n  // hit (target) spritesheet (25 frames)\n  const hitSpritesRef = useRef<HTMLImageElement | null>(null);\n  // sprite animation state keyed by slot-key (player.lane.index)\n  const govSpriteStateRef = useRef<Record<string, { started: number; frameCount: number; frameDuration: number }>>({});\n  const instantSpritesRef = useRef<HTMLImageElement | null>(null);\n  const instantSpriteStateRef = useRef<Record<string, { started: number; frameCount: number; frameDuration: number }>>({});\n\n  const hitSpriteStateRef = useRef<Record<string, { started: number; frameCount: number; frameDuration: number }>>({});\n\n  // Corruption (Bestechungsskandal) target selection mode\n  const corruptionSelectActorRef = useRef<Player | null>(null);\n  const gameStateRef = useRef<GameState>(gameState);\n  useEffect(() => { gameStateRef.current = gameState; }, [gameState]);\n  useEffect(() => {\n    const onEnterCorruptionSelect = (ev: any) => {\n      try {\n        const actor = ev.detail?.player as Player | undefined;\n        console.log('üî• GAMECANVAS RECEIVED pc:corruption_select_target - Actor:', actor);\n        corruptionSelectActorRef.current = actor ?? null;\n        console.log('üî• SET corruptionSelectActorRef.current:', corruptionSelectActorRef.current);\n      } catch (e) {\n        console.error('üî• ERROR in corruption select handler:', e);\n      }\n    };\n    window.addEventListener('pc:corruption_select_target', onEnterCorruptionSelect as EventListener);\n    // Keyboard hotkeys 1-5 to choose opponent government slot when corruption select is active\n    const onKeyDown = (ev: KeyboardEvent) => {\n      try {\n        const k = ev.key;\n        if (!['1','2','3','4','5'].includes(k)) return;\n        const actor = corruptionSelectActorRef.current;\n        if (!actor) return;\n        const victim = actor === 1 ? 2 : 1;\n        const idx = Number(k) - 1; // map '1' -> slot 0\n        const gs = gameStateRef.current as any;\n        const card = gs?.board?.[victim]?.aussen?.[idx];\n        console.debug('[CORR][KEY] pressed', k, 'actor', actor, 'victim', victim, 'idx', idx, 'card', card);\n        if (!card) return;\n        const uid = card.uid ?? card.id;\n        if (!uid) return;\n        console.debug('[CORR][KEY] dispatching pick_target for uid', uid);\n        window.dispatchEvent(new CustomEvent('pc:corruption_pick_target', { detail: { player: actor, targetUid: uid } }));\n        try {\n          console.debug('[CORR][KEY] dispatching target_selected for uid', uid);\n          window.dispatchEvent(new CustomEvent('pc:corruption_target_selected', { detail: { player: actor, targetUid: uid } }));\n        } catch(e) { console.debug('[CORR][KEY] target_selected dispatch error', e); }\n        ev.preventDefault();\n      } catch(e) {}\n    };\n    window.addEventListener('keydown', onKeyDown as EventListener);\n    return () => {\n      window.removeEventListener('pc:corruption_select_target', onEnterCorruptionSelect as EventListener);\n      window.removeEventListener('keydown', onKeyDown as EventListener);\n    };\n  }, []);\n\n  // Helper: draw slot icons with uniform pulsing opacity and a light reflection\n  const drawSlotIconWithPulse = useCallback((ctx: CanvasRenderingContext2D, img: HTMLImageElement | undefined, x: number, y: number, w: number, h: number, phase = 0) => {\n    if (!img || !img.complete) return;\n    try {\n      const now = performance.now();\n      const base = 0.10; // base opacity\n      const pulseRange = 0.08; // pulse amplitude (-> up to base + pulseRange)\n      const period = 700; // ms\n      const pulse = base + pulseRange * (0.5 + 0.5 * Math.sin(now / period + phase));\n\n      // draw icon with pulsing alpha\n      ctx.save();\n      ctx.globalAlpha = pulse;\n      ctx.drawImage(img, x, y, w, h);\n\n      // subtle reflection: gradient overlay on top half\n      const grad = ctx.createLinearGradient(x, y, x, y + h * 0.5);\n      grad.addColorStop(0, `rgba(255,255,255,${0.18 * pulse})`);\n      grad.addColorStop(1, `rgba(255,255,255,0)`);\n      ctx.globalCompositeOperation = 'lighter';\n      ctx.fillStyle = grad as any;\n      ctx.fillRect(x, y, w, h * 0.5);\n\n      ctx.restore();\n    } catch (e) {\n      // silent fallback\n    }\n  }, []);\n\n  // Load influence icon once\n  useEffect(() => {\n    const img = new Image();\n    img.src = influenceIconUrl;\n    influenceImgRef.current = img;\n  }, []);\n\n\n  const drawCardAt = useCallback((\n    ctx: CanvasRenderingContext2D,\n    card: Card,\n    x: number,\n    y: number,\n    size: number,\n    selected: boolean = false,\n    showAPCost: boolean = false,\n    player?: Player\n  ) => {\n    // Apply per-card fade-in if a play animation is active for this uid\n    let extraAlpha = 1;\n    try {\n      const uid = (card as any).uid ?? (card as any).id;\n      const list = (visualEffects && visualEffects.playAnimsRef && visualEffects.playAnimsRef.current) || (window as any).__pc_play_anims || [];\n      const anim = list.find((a: any) => a.uid === uid);\n      if (anim) {\n        const p = Math.min(1, Math.max(0, (performance.now() - anim.started) / anim.duration));\n        // ease-out\n        extraAlpha = Math.pow(p, 2);\n      }\n    } catch (e) {}\n    let dx = x, dy = y, s = size;\n    if (selected) {\n      s = Math.floor(size * 1.05);\n      dx = x - Math.floor((s - size) / 2);\n      dy = y - Math.floor((s - size) / 2);\n    }\n\n    // Note: pulse overlay is drawn at top layer after all cards are rendered\n\n    // Draw card image with caching to prevent flicker in continuous loop\n    const src = getCardImagePath(card, 'ui');\n    const cached = imageCacheRef.current.get(src);\n    ctx.save();\n    ctx.globalAlpha = extraAlpha;\n    if (cached && cached.complete && cached.naturalWidth > 0) {\n      ctx.drawImage(cached, dx, dy, s, s);\n    } else {\n      const img = new Image();\n      img.onload = () => {\n        imageCacheRef.current.set(src, img);\n        // Note: onload happens async; draw will occur on next frame\n        // don't draw here into stale ctx\n      };\n      img.src = src;\n      imageCacheRef.current.set(src, img);\n    }\n\n    ctx.restore();\n\n    // Status-Indikatoren (f√ºr alle Board-Karten)\n    // Einfluss-Wert dauerhaft anzeigen (oben links) ‚Äì nur f√ºr Regierungskarten\n    if ((card as any).kind === 'pol') {\n      const barH = Math.max(20, Math.floor(s * 0.12) + 6);\n      ctx.fillStyle = 'rgba(0,0,0,0.6)';\n      ctx.fillRect(dx, dy + s - barH, s, barH);\n\n      ctx.fillStyle = '#ffffff';\n      const fontSize = Math.floor(s * 0.12);\n      ctx.font = `bold ${fontSize}px sans-serif`;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${(card as any).influence ?? 0}`, dx + 8, dy + s - barH / 2);\n    }\n    // Schutz-Status (blauer Punkt)\n    if ((card as any).protected || ((card as any).shield ?? 0) > 0) {\n      ctx.fillStyle = '#1da1f2';\n      ctx.fillRect(dx + s - 22, dy + 6, 16, 16);\n    }\n    // Deaktiviert-Status (roter Punkt)\n    if ((card as any).deactivated) {\n      ctx.fillStyle = '#b63838';\n      ctx.fillRect(dx + s - 22, dy + 26, 16, 16);\n    }\n\n    // Einfluss-Badge f√ºr Handkarten oben rechts (nur Regierungskarten)\n    if (showAPCost && player && (card as any).kind === 'pol') {\n      const badgeHeight = Math.max(16, Math.floor(s * 0.12));\n      const badgeWidth = badgeHeight * 2;\n      const badgeX = dx + s - badgeWidth - 6;\n      const badgeY = dy + 6;\n\n      // Semi-transparent dunkler Hintergrund\n      ctx.fillStyle = 'rgba(0,0,0,0.6)';\n      ctx.beginPath();\n      ctx.roundRect(badgeX, badgeY, badgeWidth, badgeHeight, badgeHeight / 2);\n      ctx.fill();\n\n      // Influence icon (90% opacity) links im Badge\n      if (influenceImgRef.current && influenceImgRef.current.complete) {\n        ctx.globalAlpha = 0.9;\n        ctx.drawImage(influenceImgRef.current, badgeX + 2, badgeY + 2, badgeHeight - 4, badgeHeight - 4);\n        ctx.globalAlpha = 1;\n      }\n\n      // Influence number rechts im Badge\n      ctx.fillStyle = '#ffffff';\n      ctx.font = `bold ${Math.floor(badgeHeight * 0.5)}px sans-serif`;\n      ctx.textAlign = 'right';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${(card as any).influence ?? 0}`, badgeX + badgeWidth - 4, badgeY + badgeHeight / 2);\n\n      // Reset align\n      ctx.textAlign = 'start';\n      ctx.textBaseline = 'alphabetic';\n    }\n\n    // NOTE: influence overlays (pulse + labels) are drawn in a separate pass\n\n    // Auswahl-Rahmen\n    if (selected) {\n      ctx.strokeStyle = '#61dafb';\n      ctx.lineWidth = 3;\n      ctx.strokeRect(dx + 1, dy + 1, s - 2, s - 2);\n      ctx.lineWidth = 1;\n    }\n\n    // Return exact 256x256 click zone over the card\n    // Since all cards are 256x256, the click zone should match exactly\n    return { x: dx, y: dy, w: 256, h: 256 };\n  }, [gameState]);\n\n\n\n\n\n\n\n  // Slot-Benennungs-Funktion basierend auf Glossar\n  const getSlotDisplayName = useCallback((zoneId: string, index: number, player: Player): string => {\n    const slotNumber = index + 1;\n\n    if (zoneId.includes('government')) {\n      if (zoneId.includes('player')) {\n        return `Regierungsreihe Slot ${slotNumber}`;\n      } else {\n        return `Gegner Regierung Slot ${slotNumber}`;\n      }\n    } else if (zoneId.includes('public')) {\n      if (zoneId.includes('player')) {\n        return `√ñffentlichkeitsreihe Slot ${slotNumber}`;\n      } else {\n        return `Gegner √ñffentlichkeit Slot ${slotNumber}`;\n      }\n    } else if (zoneId.includes('permanent.government')) {\n      if (zoneId.includes('player')) {\n        return 'Regierung Spezial-Slot';\n      } else {\n        return 'Gegner Regierung Spezial-Slot';\n      }\n    } else if (zoneId.includes('permanent.public')) {\n      if (zoneId.includes('player')) {\n        return '√ñffentlichkeit Spezial-Slot';\n      } else {\n        return 'Gegner √ñffentlichkeit Spezial-Slot';\n      }\n    } else if (zoneId.includes('instant')) {\n      if (zoneId.includes('player')) {\n        return 'Sofort-Slot';\n      } else {\n        return 'Gegner Sofort-Slot';\n      }\n    } else if (zoneId.includes('hand')) {\n      return 'Hand';\n    } else if (zoneId.includes('interventions')) {\n      return 'Interventionen';\n    }\n\n    return `Slot ${slotNumber}`;\n  }, []);\n\n  const drawLane = useCallback((\n    ctx: CanvasRenderingContext2D,\n    zoneId: string,\n    player: Player,\n    lane: Lane,\n    clickable: boolean\n  ) => {\n    const zone = getZone(zoneId);\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n    const arr = gameState.board[player][lane];\n\n    slots.forEach((s, idx) => {\n      const card = arr[idx];\n\n      // Hintergrundfarbe nach Kategorie\n      let bgColor = 'rgba(0,0,0,0.1)'; // Standard\n      if (zoneId.includes('government')) {\n        bgColor = 'rgba(255, 197, 0, 0.15)'; // Hellgelb f√ºr Regierung\n      } else if (zoneId.includes('public')) {\n        bgColor = 'rgba(0, 255, 0, 0.15)'; // Hellgr√ºn f√ºr √ñffentlichkeit\n      }\n\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(s.x, s.y, s.w, s.h);\n\n      // Slot-Rahmen\n      ctx.strokeStyle = 'rgba(255,255,255,0.06)';\n      ctx.strokeRect(s.x + 0.5, s.y + 0.5, s.w - 1, s.h - 1);\n\n      if (card) {\n        const isSelected = player === 1 && selectedHandIndex !== null && gameState.hands[1][selectedHandIndex] === card;\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, isSelected, false);\n\n        // Kartenname unter dem Slot anzeigen\n        ctx.fillStyle = 'rgba(255,255,255,0.9)';\n        ctx.font = 'bold 12px sans-serif';\n        ctx.textAlign = 'center';\n        const textY = s.y + s.h + 16;\n        ctx.fillText(card.name, s.x + s.w/2, textY);\n\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'board_card', player, lane, index: idx, card }\n        });\n      } else if (clickable && gameState.current === player) {\n        // Slot-Benennung anzeigen (f√ºr den aktuellen Spieler)\n        const slotName = getSlotDisplayName(zoneId, idx, player);\n        ctx.fillStyle = 'rgba(255,255,255,0.6)';\n        ctx.font = '11px sans-serif';\n        ctx.textAlign = 'center';\n        const textY = s.y + s.h/2;\n        ctx.fillText(slotName, s.x + s.w/2, textY);\n\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', lane, index: idx }\n        });\n      }\n    });\n  }, [gameState, selectedHandIndex, drawCardAt, getSlotDisplayName]);\n\n  const drawHandP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const hand = sortHandCards(gameState.hands[1]);\n    const zone = getZone('hand.player');\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n    // Apply smooth offset (lerp towards target)\n    const target = handScrollTargetRef.current;\n    handScrollCurrentRef.current += (target - handScrollCurrentRef.current) * 0.15; // easing\n    const offsetY = Math.round(handScrollCurrentRef.current);\n    slots.forEach((s: { x: number; y: number; w: number; h: number }, i: number) => {\n      const card = hand[i];\n      if (!card) return;\n      // Find original index in unsorted hand for click handling\n      const originalIndex = gameState.hands[1].findIndex(c => c.uid === card.uid);\n      const isSel = selectedHandIndex === originalIndex;\n      // apply vertical offset\n      const sx = s.x;\n      const sy = s.y + offsetY;\n      const clickZone = drawCardAt(ctx, card, sx, sy, s.w, isSel, true, 1); // Show AP cost for player 1 hand\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'hand_p1', index: originalIndex, card } });\n    });\n  }, [gameState.hands, selectedHandIndex, drawCardAt]);\n\n      // üîß DEV MODE: Player 2 Hand (rechts unten, kompakter)\n  const drawHandP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const hand = sortHandCards(gameState.hands[2]);\n    const zone = getZone('hand.opponent');\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n\n    // Hintergrund f√ºr P2 Hand\n    const [x, y, w, h] = zone.rectPx;\n    ctx.fillStyle = 'rgba(255, 100, 100, 0.15)'; // R√∂tlicher Hintergrund f√ºr P2\n    ctx.fillRect(x, y, w, h);\n    ctx.strokeStyle = 'rgba(255, 100, 100, 0.3)';\n    ctx.strokeRect(x + 0.5, y + 0.5, w - 1, h - 1);\n\n    // Label f√ºr P2 Hand\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = 'bold 14px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Player 2 Hand', x + w/2, y - 8);\n\n    slots.forEach((s: { x: number; y: number; w: number; h: number }, i: number) => {\n      const card = hand[i];\n      if (!card) return;\n      // Find original index in unsorted hand for click handling\n      const originalIndex = gameState.hands[2].findIndex(c => c.uid === card.uid);\n      const isSel = gameState.current === 2 && selectedHandIndex === originalIndex;\n      const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, isSel, true, 2); // Show AP cost for player 2 hand\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'hand_p2', index: originalIndex, card } });\n    });\n  }, [gameState, selectedHandIndex, drawCardAt]);\n  // Interventions strip (player traps)\n  const drawInterventionsP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const traps = gameState.traps[1] || [];\n    const zone = getZone('interventions.player');\n    if (!zone) return;\n\n    // Single intervention slot\n    const [zx, zy, zw, zh] = zone.rectPx;\n    const card = traps[0]; // Only first trap\n\n    // Hintergrund f√ºr Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.15)'; // Lavendelfarben f√ºr Interventionen\n    ctx.fillRect(zx, zy, zw, zh);\n    ctx.strokeStyle = 'rgba(200, 160, 255, 0.3)';\n    ctx.strokeRect(zx + 0.5, zy + 0.5, zw - 1, zh - 1);\n\n    // Slot-Benennung f√ºr Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.8)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Intervention', zx + 8, zy + zh - 6);\n\n    if (card) {\n      const clickZone = drawCardAt(ctx, card, zx, zy, zw, false, false);\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'trap_p1', index: 0, card } });\n    }\n  }, [gameState.traps, drawCardAt]);\n\n  // Interventions strip (opponent traps)\n  const drawInterventionsP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const traps = gameState.traps[2] || [];\n    const zone = getZone('interventions.opponent');\n    if (!zone) return;\n\n    // Single intervention slot\n    const [zx, zy, zw, zh] = zone.rectPx;\n    const card = traps[0]; // Only first trap\n\n    // Hintergrund f√ºr Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.15)'; // Lavendelfarben f√ºr Interventionen\n    ctx.fillRect(zx, zy, zw, zh);\n    ctx.strokeStyle = 'rgba(200, 160, 255, 0.3)';\n    ctx.strokeRect(zx + 0.5, zy + 0.5, zw - 1, zh - 1);\n\n    // Slot-Benennung f√ºr Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.8)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Intervention', zx + 8, zy + zh - 6);\n\n    if (card) {\n      const clickZone = drawCardAt(ctx, card, zx, zy, zw, false, false);\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'trap_p2', index: 0, card } });\n    }\n  }, [gameState.traps, drawCardAt]);\n\n  // Single slot drawing function\n  const drawSingleSlot = useCallback((\n    ctx: CanvasRenderingContext2D,\n    zoneId: string,\n    card: Card | null,\n    clickType: string,\n    player: Player\n  ) => {\n    const zone = getZone(zoneId);\n    if (!zone) return;\n    const [x, y, w, h] = zone.rectPx;\n\n    // Hintergrundfarbe nach Kategorie\n    let bgColor = 'rgba(0,0,0,0.1)'; // Standard\n    if (zoneId.includes('government')) {\n      bgColor = 'rgba(255, 197, 0, 0.15)'; // Hellgelb f√ºr Regierung\n    } else if (zoneId.includes('public')) {\n      bgColor = 'rgba(0, 255, 0, 0.15)'; // Hellgr√ºn f√ºr √ñffentlichkeit\n    } else if (zoneId.includes('instant')) {\n      bgColor = 'rgba(127, 116, 91, 0.15)'; // Neutral f√ºr Sofort-Slots\n    } else if (zoneId.includes('permanent')) {\n      // Unterscheide zwischen government und public permanent slots\n      if (zoneId.includes('government')) {\n        bgColor = 'rgba(255, 197, 0, 0.15)';\n      } else if (zoneId.includes('public')) {\n        bgColor = 'rgba(0, 255, 0, 0.15)';\n      }\n    }\n\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(x, y, w, h);\n\n    // Draw slot border\n    ctx.strokeStyle = 'rgba(255,255,255,0.06)';\n    ctx.strokeRect(x + 0.5, y + 0.5, w - 1, h - 1);\n\n    if (card) {\n      const isSelected = player === 1 && selectedHandIndex !== null && gameState.hands[1][selectedHandIndex] === card;\n      const clickZone = drawCardAt(ctx, card, x, y, w, isSelected, false);\n\n      // Kartenname unter dem Slot anzeigen\n      ctx.fillStyle = 'rgba(255,255,255,0.9)';\n      ctx.font = 'bold 12px sans-serif';\n      ctx.textAlign = 'center';\n      const textY = y + h + 16;\n      ctx.fillText(card.name, x + w/2, textY);\n\n      // Register click zone for the card - always in dev mode, otherwise only for current player\n      if (devMode || player === gameState.current) {\n        clickZonesRef.current.push({ ...clickZone, data: { type: 'slot_card', slot: clickType, player, card } });\n      }\n\n      // üîß NEU: Sofort-Initiative-Slots sind immer klickbar f√ºr Aktivierung (handled by activateInstantInitiative)\n      if (clickType === 'instant') {\n        clickZonesRef.current.push({\n          x, y, w, h,\n          data: { type: 'activate_instant', player, card }\n        });\n      }\n    } else if (gameState.current === player || devMode) {\n      // Slot-Benennung f√ºr leere Slots anzeigen (f√ºr den aktuellen Spieler oder im Dev Mode)\n      const slotName = getSlotDisplayName(zoneId, 0, player);\n      ctx.fillStyle = 'rgba(255,255,255,0.6)';\n      ctx.font = '11px sans-serif';\n      ctx.textAlign = 'center';\n      const textY = y + h/2;\n      ctx.fillText(slotName, x + w/2, textY);\n\n      clickZonesRef.current.push({ x, y, w, h, data: { type: 'empty_slot', slot: clickType, player } });\n    }\n  }, [selectedHandIndex, gameState, drawCardAt, getSlotDisplayName, devMode]);\n\n  // Small UI hook: show a lightweight corruption modal overlay when a target is selected\n  useEffect(() => {\n    const onTargetSelected = (ev: any) => {\n      const { player, targetUid } = ev.detail || {};\n      if (!player || !targetUid) return;\n      // create transient overlay element if not present\n      try {\n        const id = 'pc-corruption-modal';\n        let el = document.getElementById(id);\n        if (!el) {\n          el = document.createElement('div');\n          el.id = id;\n          el.style.position = 'fixed';\n          el.style.left = '50%';\n          el.style.top = '40%';\n          el.style.transform = 'translate(-50%, -50%)';\n          el.style.padding = '12px 16px';\n          el.style.background = 'rgba(6,10,15,0.9)';\n          el.style.border = '1px solid rgba(255,255,255,0.12)';\n          el.style.borderRadius = '8px';\n          el.style.zIndex = '3000';\n          el.style.color = '#e5e7eb';\n          el.style.fontFamily = 'monospace';\n          el.style.fontSize = '14px';\n          document.body.appendChild(el);\n        }\n        const card = (gameState as any).board?.[player === 1 ? 1 : 2]?.aussen?.find((c:any)=>c.uid===targetUid) || (gameState as any).board?.[player === 1 ? 2 : 1]?.aussen?.find((c:any)=>c.uid===targetUid);\n        el.innerHTML = `<div style=\"display:flex;flex-direction:column;gap:8px;min-width:260px;\">\n          <div style=\"font-weight:700\">Bestechungsskandal 2.0 ‚Äî Ziel gew√§hlt</div>\n          <div>Gew√§hltes Ziel: <b>${card ? card.name : 'UID '+targetUid}</b></div>\n          <div>Probe: W6 ‚â• Einfluss (inkl. Oligarch-Bonus)</div>\n          <div style=\"display:flex;gap:8px;justify-content:flex-end;\">\n            <button id=\"pc-corruption-roll\" style=\"background:#2563eb;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\">W√ºrfeln</button>\n            <button id=\"pc-corruption-cancel\" style=\"background:#374151;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\">Abbrechen</button>\n          </div>\n        </div>`;\n\n        const rollBtn = document.getElementById('pc-corruption-roll');\n        const cancelBtn = document.getElementById('pc-corruption-cancel');\n        if (rollBtn) {\n          rollBtn.onclick = () => {\n            try {\n              console.log('üî• CORRUPTION W√úRFELN CLICKED - triggering dice roll');\n              // Trigger the dice component to roll\n              window.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll', { detail: { player, targetUid } }));\n              window.dispatchEvent(new CustomEvent('pc:corruption_request_roll', { detail: { player, targetUid } }));\n            } catch(e) {\n              console.error('üî• ERROR triggering dice roll:', e);\n            }\n            // disable until result\n            (rollBtn as HTMLButtonElement).disabled = true;\n            (rollBtn as HTMLButtonElement).innerText = 'W√ºrfelt...';\n          };\n        }\n        if (cancelBtn) {\n          cancelBtn.onclick = () => {\n            el!.remove();\n          };\n        }\n      } catch (e) { console.debug('corruption modal create failed', e); }\n    };\n\n    window.addEventListener('pc:corruption_target_selected', onTargetSelected as EventListener);\n    return () => window.removeEventListener('pc:corruption_target_selected', onTargetSelected as EventListener);\n  }, [gameState]);\n\n  // Draw permanent slots for player\n  const drawPermanentSlotsP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    drawSingleSlot(ctx, 'slot.permanent.government.player', gameState.permanentSlots[1].government, 'permanent_government', 1);\n    drawSingleSlot(ctx, 'slot.permanent.public.player', gameState.permanentSlots[1].public, 'permanent_public', 1);\n  }, [gameState.permanentSlots, drawSingleSlot]);\n\n  // Draw permanent slots for opponent\n  const drawPermanentSlotsP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    drawSingleSlot(ctx, 'slot.permanent.government.opponent', gameState.permanentSlots[2].government, 'permanent_government', 2);\n    drawSingleSlot(ctx, 'slot.permanent.public.opponent', gameState.permanentSlots[2].public, 'permanent_public', 2);\n  }, [gameState.permanentSlots, drawSingleSlot]);\n\n  // Draw instant slots\n  const drawInstantSlots = useCallback((ctx: CanvasRenderingContext2D) => {\n    // Sofort-Initiative-Slots aus dem Board zeichnen\n    const sofortPlayerCard = gameState.board[1].sofort[0];\n    const sofortOppCard = gameState.board[2].sofort[0];\n\n    drawSingleSlot(ctx, 'slot.instant.player', sofortPlayerCard, 'instant', 1);\n    drawSingleSlot(ctx, 'slot.instant.opponent', sofortOppCard, 'instant', 2);\n  }, [gameState.board, drawSingleSlot]);\n\n  // Aktive Schl√ºsselw√∂rter und Unterkategorien ermitteln\n  const getActiveKeywordsAndSubcategories = useCallback((player: Player) => {\n    const board = gameState.board[player];\n    const permanentSlots = gameState.permanentSlots[player];\n    const allCards = [\n      ...board.innen,\n      ...board.aussen,\n      permanentSlots.government,\n      permanentSlots.public\n    ].filter(c => c && c.kind === 'pol') as PoliticianCard[];\n\n    const keywords = new Set<string>();\n    const subcategories = new Set<string>();\n\n    allCards.forEach(card => {\n      if (!card.deactivated) {\n        // Regierungskarten-Schl√ºsselw√∂rter\n        if (card.tag === 'Leadership') {\n          keywords.add('Leadership');\n        }\n        if (card.tag === 'Diplomat') {\n          keywords.add('Diplomat');\n        }\n\n        // √ñffentlichkeits-Unterkategorien (f√ºr Karten in √ñffentlichkeitsreihe)\n        if (board.innen.includes(card)) {\n          const publicCard = card as any;\n          if (publicCard.tag) {\n            // Oligarch\n            const oligarchNames = ['Elon Musk', 'Bill Gates', 'George Soros', 'Warren Buffett', 'Mukesh Ambani', 'Jeff Bezos', 'Alisher Usmanov', 'Gautam Adani', 'Jack Ma', 'Zhang Yiming', 'Roman Abramovich'];\n            if (oligarchNames.includes(publicCard.name)) {\n              subcategories.add('Oligarch');\n            }\n\n            // Plattform\n            const platformNames = ['Mark Zuckerberg', 'Tim Cook', 'Sam Altman', 'Jack Ma'];\n            if (platformNames.includes(publicCard.name)) {\n              subcategories.add('Plattform');\n            }\n\n            // Bewegung\n            const movementNames = ['Greta Thunberg', 'Malala Yousafzai', 'Ai Weiwei', 'Alexei Navalny'];\n            if (movementNames.includes(publicCard.name)) {\n              subcategories.add('Bewegung');\n            }\n\n            // NGO/Think-Tank\n            const ngoNames = ['Bill Gates', 'George Soros', 'Jennifer Doudna', 'Noam Chomsky', 'Anthony Fauci'];\n            if (ngoNames.includes(publicCard.name)) {\n              subcategories.add('NGO/Think-Tank');\n            }\n\n            // Intelligenz\n            const intelligenceNames = ['Jennifer Doudna', 'Noam Chomsky', 'Edward Snowden', 'Julian Assange', 'Yuval Noah Harari', 'Ai Weiwei', 'Alexei Navalny', 'Anthony Fauci'];\n            if (intelligenceNames.includes(publicCard.name)) {\n              subcategories.add('Intelligenz');\n            }\n\n            // Medien\n            const mediaNames = ['Oprah Winfrey'];\n            if (mediaNames.includes(publicCard.name)) {\n              subcategories.add('Medien');\n            }\n          }\n        }\n      }\n    });\n\n    return {\n      keywords: Array.from(keywords),\n      subcategories: Array.from(subcategories)\n    };\n  }, [gameState]);\n\n  // Info-Panels zeichnen\n  const drawInfoPanels = useCallback((ctx: CanvasRenderingContext2D) => {\n    const { keywords, subcategories } = getActiveKeywordsAndSubcategories(1);\n\n    // Panel f√ºr Regierungsschl√ºsselw√∂rter (rechts neben Regierungsslots)\n    const govPanelX = 1640 + 256 + 20; // Nach dem letzten permanenten Slot\n    const govPanelY = 300; // Auf H√∂he der Regierungsslots\n    const govPanelW = 120;\n    const govPanelH = 256;\n\n    // Regierungspanel Hintergrund\n    ctx.fillStyle = 'rgba(255, 197, 0, 0.15)';\n    ctx.fillRect(govPanelX, govPanelY, govPanelW, govPanelH);\n    ctx.strokeStyle = 'rgba(255, 197, 0, 0.3)';\n    ctx.strokeRect(govPanelX + 0.5, govPanelY + 0.5, govPanelW - 1, govPanelH - 1);\n\n    // Regierungspanel Titel\n    ctx.fillStyle = 'rgba(255, 197, 0, 0.9)';\n    ctx.font = 'bold 12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Regierung', govPanelX + govPanelW/2, govPanelY + 16);\n\n    // Schl√ºsselw√∂rter auflisten\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    if (keywords.length > 0) {\n      keywords.forEach((keyword, idx) => {\n        ctx.fillText(`‚Ä¢ ${keyword}`, govPanelX + 8, govPanelY + 36 + idx * 16);\n      });\n    } else {\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.fillText('Keine aktiven', govPanelX + 8, govPanelY + 36);\n      ctx.fillText('Schl√ºsselw√∂rter', govPanelX + 8, govPanelY + 52);\n    }\n\n    // Panel f√ºr √ñffentlichkeits-Unterkategorien (rechts neben √ñffentlichkeitsslots)\n    const pubPanelX = 1640 + 256 + 20;\n    const pubPanelY = 580; // Auf H√∂he der √ñffentlichkeitsslots\n    const pubPanelW = 120;\n    const pubPanelH = 256;\n\n    // √ñffentlichkeitspanel Hintergrund\n    ctx.fillStyle = 'rgba(0, 255, 0, 0.15)';\n    ctx.fillRect(pubPanelX, pubPanelY, pubPanelW, pubPanelH);\n    ctx.strokeStyle = 'rgba(0, 255, 0, 0.3)';\n    ctx.strokeRect(pubPanelX + 0.5, pubPanelY + 0.5, pubPanelW - 1, pubPanelH - 1);\n\n    // √ñffentlichkeitspanel Titel\n    ctx.fillStyle = 'rgba(0, 255, 0, 0.9)';\n    ctx.font = 'bold 12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('√ñffentlichkeit', pubPanelX + pubPanelW/2, pubPanelY + 16);\n\n    // Unterkategorien auflisten\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    if (subcategories.length > 0) {\n      subcategories.forEach((subcategory, idx) => {\n        const displayName = subcategory.length > 12 ? subcategory.substring(0, 10) + '...' : subcategory;\n        ctx.fillText(`‚Ä¢ ${displayName}`, pubPanelX + 8, pubPanelY + 36 + idx * 16);\n      });\n    } else {\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.fillText('Keine aktiven', pubPanelX + 8, pubPanelY + 36);\n      ctx.fillText('Unterkategorien', pubPanelX + 8, pubPanelY + 52);\n    }\n  }, [getActiveKeywordsAndSubcategories]);\n\n  // Move diagnostics to draw callback to ensure they run after canvas is actually rendered\n  const runDiagnostics = useCallback(() => {\n    try {\n      const handZones = clickZonesRef.current.filter(z => z.data && z.data.type === 'hand_p1');\n      const uiUIDs = handZones.map(z => (z.data.card && (z.data.card.uid ?? z.data.card.id)) ).filter(Boolean);\n      const stateHand = gameState.hands && gameState.hands[1] ? gameState.hands[1] : [];\n      const stateUIDs = stateHand.map((c: any) => c.uid ?? c.id).filter(Boolean);\n\n      const missingInState = uiUIDs.filter((u: any) => !stateUIDs.includes(u));\n      const missingInUI = stateUIDs.filter((u: any) => !uiUIDs.includes(u));\n\n      // Only warn if there are cards in UI that don't exist in state (real error)\n      // Don't warn about missing UI cards due to limited slot capacity\n      if (missingInState.length > 0) {\n        const mismatch = {\n          ts: Date.now(),\n          uiCount: uiUIDs.length,\n          stateCount: stateUIDs.length,\n          uiUIDs,\n          stateUIDs,\n          missingInState,\n          missingInUI,\n          stack: (new Error('mismatch-stack')).stack\n        };\n        (window as any).__politicardDebug = {\n          ...(window as any).__politicardDebug,\n          mismatch: [ ...(window as any).__politicardDebug?.mismatch || [] ].slice(-19).concat([mismatch])\n        };\n        // Clear, then log to console so user can copy/paste trace\n        console.warn('POLITICARD DIAGNOSTIC: hand mismatch detected', mismatch);\n      }\n    } catch (e) {\n      // swallow diagnostic errors to avoid breaking rendering\n      console.error('Diagnostic error', e);\n    }\n  }, [gameState.hands]);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Detect influence increases and start animations\n    try {\n      const currSnapshot: Record<string, number> = {};\n      const collect = (c: any) => {\n        if (!c) return;\n        if ((c as any).kind !== 'pol') return;\n        const uid = c.uid ?? (c.id != null ? String(c.id) : null);\n        if (!uid) return;\n        currSnapshot[uid] = (c.influence ?? 0) as number;\n      };\n      // board rows\n      (gameState.board[1].aussen || []).forEach(collect);\n      (gameState.board[2].aussen || []).forEach(collect);\n      (gameState.board[1].innen || []).forEach(collect);\n      (gameState.board[2].innen || []).forEach(collect);\n      // permanent slots\n      collect(gameState.permanentSlots[1].government as any);\n      collect(gameState.permanentSlots[2].government as any);\n      collect(gameState.permanentSlots[1].public as any);\n      collect(gameState.permanentSlots[2].public as any);\n\n      const now = performance.now();\n      Object.keys(currSnapshot).forEach(uid => {\n        const curr = currSnapshot[uid] ?? 0;\n        const prev = prevInfluencesRef.current[uid] ?? curr;\n        if (curr > prev) {\n          const delta = curr - prev;\n          const list = influenceAnimRef.current.get(uid) || [];\n          list.push({ start: now, duration: 900, amount: delta });\n          influenceAnimRef.current.set(uid, list);\n        }\n        prevInfluencesRef.current[uid] = curr;\n      });\n    } catch (e) {\n      // ignore\n    }\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Clear click zones\n    clickZonesRef.current = [];\n\n    // Background: prefer PNG if configured\n    if (LAYOUT.background?.enabled && LAYOUT.background?.src) {\n      if (backgroundImageRef.current) {\n        ctx.drawImage(backgroundImageRef.current, 0, 0, canvas.width, canvas.height);\n      } else {\n        ctx.fillStyle = '#0c131b';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n    } else {\n      ctx.fillStyle = '#0c131b';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // Apply UI transform (new signature)\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    ctx.save();\n    ctx.translate(offsetX, offsetY);\n    ctx.scale(scale, scale);\n\n    // Draw opponent board (top rows) - clickable im Dev Mode\n    // Draw opponent board using new layout system\n    const opponentPublicRects = getPublicRects('opponent');\n    const opponentGovRects = getGovernmentRects('opponent');\n\n    // Draw opponent public slots\n    opponentPublicRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[2].innen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 2);\n        // Register click zone in dev mode\n        if (devMode) {\n          clickZonesRef.current.push({\n            ...clickZone,\n            data: { type: 'slot_card', player: 2, lane: 'innen', index: idx, card }\n          });\n        }\n      }\n      else {\n        // draw placeholder symbol for empty public slot\n        const img = slotSymbolImgsRef.current.get('public');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.4);\n        // Register empty slot click zone in dev mode\n        if (devMode) {\n          clickZonesRef.current.push({\n            x: s.x, y: s.y, w: s.w, h: s.h,\n            data: { type: 'row_slot', player: 2, lane: 'innen', index: idx }\n          });\n        }\n      }\n    });\n\n    // Draw opponent government slots\n    opponentGovRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[2].aussen[idx];\n      const corrActive = !!((gameState as any).pendingAbilitySelect && (gameState as any).pendingAbilitySelect.type === 'corruption_steal');\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 2);\n        // In dev mode, register click zone based on drawCardAt result\n        if (devMode) {\n          clickZonesRef.current.push({\n            ...clickZone,\n            data: { type: 'board_card', player: 2, lane: 'aussen', index: idx, card }\n          });\n        }\n        // When corruption target selection is active, register exact slot rectangle for click detection\n        if (corrActive) {\n          clickZonesRef.current.push({\n            x: s.x,\n            y: s.y,\n            w: s.w,\n            h: s.h,\n            data: { type: 'board_card', player: 2, lane: 'aussen', index: idx, card }\n          });\n        }\n      }\n      else {\n        const img = slotSymbolImgsRef.current.get('government');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.1);\n        // Register empty slot click zone only in dev mode\n        if (devMode) {\n          clickZonesRef.current.push({\n            x: s.x, y: s.y, w: s.w, h: s.h,\n            data: { type: 'row_slot', player: 2, lane: 'aussen', index: idx }\n          });\n        }\n      }\n    });\n\n    // Draw opponent permanent slots (show icons even when not current)\n    try {\n      const permGovZoneOpp = getZone('slot.permanent.government.opponent');\n      if (permGovZoneOpp) {\n        const card = gameState.permanentSlots[2].government;\n        const [ox, oy, ow, oh] = permGovZoneOpp.rectPx;\n        if (card) {\n          drawSingleSlot(ctx, 'slot.permanent.government.opponent', card, 'permanent_government', 2);\n        } else {\n          const img = slotSymbolImgsRef.current.get('dauerhaft');\n          drawSlotIconWithPulse(ctx, img, ox, oy, ow, oh, 0.3);\n          // Register empty slot click zone in dev mode\n          if (devMode) {\n            clickZonesRef.current.push({\n              x: ox, y: oy, w: ow, h: oh,\n              data: { type: 'empty_slot', slot: 'permanent_government', player: 2 }\n            });\n          }\n        }\n      }\n    } catch (e) {}\n    try {\n      const permPubZoneOpp = getZone('slot.permanent.public.opponent');\n      if (permPubZoneOpp) {\n        const card = gameState.permanentSlots[2].public;\n        const [ox2, oy2, ow2, oh2] = permPubZoneOpp.rectPx;\n        if (card) {\n          drawSingleSlot(ctx, 'slot.permanent.public.opponent', card, 'permanent_public', 2);\n        } else {\n          const img = slotSymbolImgsRef.current.get('dauerhaft');\n          drawSlotIconWithPulse(ctx, img, ox2, oy2, ow2, oh2, 0.7);\n          // Register empty slot click zone in dev mode\n          if (devMode) {\n            clickZonesRef.current.push({\n              x: ox2, y: oy2, w: ow2, h: oh2,\n              data: { type: 'empty_slot', slot: 'permanent_public', player: 2 }\n            });\n          }\n        }\n      }\n    } catch (e) {}\n\n    // Draw player board (middle rows)\n    // Draw player board using new layout system\n    const playerPublicRects = getPublicRects('player');\n    const playerGovRects = getGovernmentRects('player');\n\n    // Draw player public slots\n    playerPublicRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[1].innen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 1);\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'row_slot', player: 1, lane: 'innen', index: idx }\n        });\n      } else {\n        // Empty slot click zone and draw public symbol\n        // Draw unified pulsing icon for empty public slot\n        const img = slotSymbolImgsRef.current.get('public');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.4);\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', player: 1, lane: 'innen', index: idx }\n        });\n      }\n    });\n\n    // Draw player government slots\n    playerGovRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[1].aussen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 1);\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'row_slot', player: 1, lane: 'aussen', index: idx }\n        });\n      } else {\n        // Empty slot click zone and draw government symbol\n        const img = slotSymbolImgsRef.current.get('government');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.1);\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', player: 1, lane: 'aussen', index: idx }\n        });\n      }\n    });\n\n    // --- GOV PLACEMENT SPRITESHEET OVERLAY (frame-based) ---\n    try {\n      const sprites = govSpritesRef.current;\n      const gif = govGifRef.current;\n      const anims = (visualEffects && visualEffects.playAnimsRef && visualEffects.playAnimsRef.current) || [];\n\n      // Start sprite animation when a playAnim for a gov-card is active and maps to a slot\n      const now = performance.now();\n      // Prefer mutating the source anim array so entries are consumed and don't retrigger repeatedly\n      const animsArr: Array<{ uid: string | number; started: number; duration: number; lane?: string }> = (visualEffects && visualEffects.playAnimsRef && visualEffects.playAnimsRef.current) || ((window as any).__pc_play_anims = (window as any).__pc_play_anims || []);\n\n      // Iterate backwards and consume processed animations to ensure one-shot playback\n      for (let i = animsArr.length - 1; i >= 0; i--) {\n        const a = animsArr[i];\n        try {\n          // handle specialized 'hit:' playAnims which indicate target-hit sprites by slot key\n          if (typeof a.uid === 'string' && a.uid.indexOf('hit:') === 0) {\n            const inner = a.uid.slice(4); // '1.aussen.0'\n            if (!hitSpriteStateRef.current[inner]) {\n              hitSpriteStateRef.current[inner] = { started: now, frameCount: 25, frameDuration: 30 };\n              animsArr.splice(i, 1);\n            }\n            continue;\n          }\n        } catch (e) {}\n\n        // find the zone/slot for this uid\n        const zone = clickZonesRef.current.find(z => z.data && z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === a.uid));\n        if (!zone) continue;\n\n        // determine if gov slot or instant\n        let isGov = false;\n        let isInstant = false;\n        try {\n          const dt = zone.data || {};\n          if (dt.type === 'row_slot' && dt.lane === 'aussen') isGov = true;\n          if (dt.type === 'board_card' && dt.lane === 'aussen') isGov = true;\n          if (dt.slot && typeof dt.slot === 'string' && dt.slot.includes('government')) isGov = true;\n          if (dt.type === 'activate_instant' || (dt.slot && typeof dt.slot === 'string' && dt.slot.includes('instant'))) isInstant = true;\n        } catch (e) {}\n        if (!isGov && !isInstant) continue;\n\n        const player = zone.data.player ?? 1;\n        const lane = zone.data.lane ?? 'aussen';\n        const idx = zone.data.index ?? 0;\n        const key = `${player}.${lane}.${idx}`;\n\n        // initialize sprite state if not present; consume the anim entry only when we actually start playback\n        let startedThis = false;\n        if (isGov) {\n          if (!govSpriteStateRef.current[key]) {\n            govSpriteStateRef.current[key] = { started: now, frameCount: 14, frameDuration: 40 }; // 14 frames @ ~40ms -> ~560ms\n            startedThis = true;\n          }\n        }\n        if (isInstant) {\n          const instKey = `${player}.instant.${idx}`;\n          if (!instantSpriteStateRef.current[instKey]) {\n            instantSpriteStateRef.current[instKey] = { started: now, frameCount: 14, frameDuration: 40 };\n            startedThis = true;\n          }\n        }\n        if (startedThis) {\n          animsArr.splice(i, 1);\n        }\n      }\n\n      // draw running sprite animations per gov slot\n      Object.keys(govSpriteStateRef.current).forEach(k => {\n        const st = govSpriteStateRef.current[k];\n        const elapsed = now - st.started;\n        const total = st.frameCount * st.frameDuration;\n        if (elapsed > total) {\n          // animation finished; remove state\n          delete govSpriteStateRef.current[k];\n          return;\n        }\n        const frame = Math.floor(elapsed / st.frameDuration);\n\n        // parse key -> player.lane.index\n        const parts = k.split('.');\n        const player = Number(parts[0]) || 1;\n        const lane = parts[1] || 'aussen';\n        const index = Number(parts[2] || 0);\n\n        // compute slot rect for this gov slot (player or opponent board)\n        const rect = player === 1 ? playerGovRects[index] : opponentGovRects[index];\n        if (!rect) return;\n\n        // spritesheet: frame N located at x = N*256, y = 0\n        if (sprites && sprites.complete) {\n          const sx = frame * 256;\n          const sy = 0;\n          const sw = 256;\n          const sh = 256;\n          // draw exactly matching the slot rect size to avoid scaling mismatches\n          const dx = rect.x;\n          const dy = rect.y;\n          ctx.drawImage(sprites, sx, sy, sw, sh, dx, dy, rect.w, rect.h);\n        } else if (gif && gif.complete) {\n          // fallback to static gif if spritesheet missing\n          ctx.drawImage(gif, rect.x, rect.y, rect.w, rect.h);\n        }\n      });\n      // --- INSTANT INITIATIVE SPRITESHEET (draw on instant slot) ---\n      try {\n        const spritesI = instantSpritesRef.current;\n        const nowI = performance.now();\n        Object.keys(instantSpriteStateRef.current).forEach(k => {\n          const st = instantSpriteStateRef.current[k];\n          const elapsed = nowI - st.started;\n          const total = st.frameCount * st.frameDuration;\n          if (elapsed > total) { delete instantSpriteStateRef.current[k]; return; }\n          const frame = Math.floor(elapsed / st.frameDuration);\n          const parts = k.split('.');\n          const player = Number(parts[0]) || 1;\n          const index = Number(parts[2] || 0);\n          const rects = getSofortRect(player ? 'player' : 'opponent');\n          // getSofortRect returns one rect; map by player/context ‚Äî fallback to zone\n          const instantRect = getZone('slot.instant.player').rectPx;\n          const [ix, iy, iw, ih] = instantRect;\n          if (spritesI && spritesI.complete) {\n            const sx = frame * 256; const sy = 0; const sw = 256; const sh = 256;\n            ctx.drawImage(spritesI, sx, sy, sw, sh, ix, iy, iw, ih);\n          }\n        });\n      } catch (e) {}\n      // --- HIT / TARGET SPRITESHEET (draw as overlay on targeted slot) ---\n      try {\n        const spritesH = hitSpritesRef.current;\n        const nowH = performance.now();\n        Object.keys(hitSpriteStateRef.current).forEach(k => {\n          const st = hitSpriteStateRef.current[k];\n          const elapsed = nowH - st.started;\n          const total = st.frameCount * st.frameDuration;\n          if (elapsed > total) { delete hitSpriteStateRef.current[k]; return; }\n          const frame = Math.floor(elapsed / st.frameDuration);\n\n          // parse key -> player.lane.index\n          const parts = k.split('.');\n          const player = Number(parts[0]) || 1;\n          const lane = parts[1] || 'aussen';\n          const index = Number(parts[2] || 0);\n\n          // compute slot rect for this gov slot (attempt gov then public)\n          const rect = (player === 1 ? playerGovRects : opponentGovRects)[index] || (player === 1 ? playerPublicRects : opponentPublicRects)[index];\n          if (!rect) return;\n\n          if (spritesH && spritesH.complete) {\n            const sx = frame * 256;\n            const sy = 0;\n            const sw = 256;\n            const sh = 256;\n            const dx = rect.x;\n            const dy = rect.y;\n            ctx.drawImage(spritesH, sx, sy, sw, sh, dx, dy, rect.w, rect.h);\n          }\n        });\n      } catch (e) {}\n    } catch (e) {}\n\n    // Draw player permanent slots (draw symbols if empty)\n    // permanent government\n    const permGovZone = getZone('slot.permanent.government.player');\n    if (permGovZone) {\n      const card = gameState.permanentSlots[1].government;\n      const [x, y, w, h] = permGovZone.rectPx;\n      if (card) {\n        drawSingleSlot(ctx, 'slot.permanent.government.player', card, 'permanent_government', 1);\n      } else {\n        // Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent gov slot)\n        const img = slotSymbolImgsRef.current.get('dauerhaft');\n        drawSlotIconWithPulse(ctx, img, x, y, w, h, 0.2);\n      }\n    }\n    // permanent public\n    const permPubZone = getZone('slot.permanent.public.player');\n    if (permPubZone) {\n      const card = gameState.permanentSlots[1].public;\n      const [x2, y2, w2, h2] = permPubZone.rectPx;\n      if (card) {\n        drawSingleSlot(ctx, 'slot.permanent.public.player', card, 'permanent_public', 1);\n      } else {\n        // Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent public slot)\n        const img = slotSymbolImgsRef.current.get('dauerhaft');\n        drawSlotIconWithPulse(ctx, img, x2, y2, w2, h2, 0.9);\n      }\n    }\n\n    // Draw instant slots (both players) and placeholder if empty\n    const instantPlayerZone = getZone('slot.instant.player');\n    if (instantPlayerZone) {\n      const card = gameState.board[1].sofort[0];\n      const [x, y, w, h] = instantPlayerZone.rectPx;\n      if (card) drawSingleSlot(ctx, 'slot.instant.player', card, 'instant', 1);\n      else {\n        // Use unified icon draw helper for instant slot\n        const img = slotSymbolImgsRef.current.get('sofort');\n        drawSlotIconWithPulse(ctx, img, x, y, w, h, 0.0);\n      }\n    }\n\n    // Draw interventions strip (player)\n    // We draw symbol if empty\n    const interventionsZone = getZone('interventions.player');\n    if (interventionsZone) {\n      const [zx, zy, zw, zh] = interventionsZone.rectPx;\n      const card = gameState.traps[1] && gameState.traps[1][0];\n      if (card) drawInterventionsP1(ctx);\n      else {\n        const img = slotSymbolImgsRef.current.get('intervention');\n        drawSlotIconWithPulse(ctx, img, zx, zy, zw, zh, 0.6);\n      }\n    }\n\n    // Draw interventions strip (opponent) - nur im Dev Mode\n    if (devMode) {\n      drawInterventionsP2(ctx);\n    }\n\n    // Draw hand (P1)\n    drawHandP1(ctx);\n\n    // üîß DEV MODE: Draw hand (P2) - nur im Dev Mode\n    if (devMode) {\n      drawHandP2(ctx);\n    }\n\n    // Draw info panels\n    drawInfoPanels(ctx);\n\n    // Draw corruption mode indicator\n    const corrActive = !!((gameState as any).pendingAbilitySelect && (gameState as any).pendingAbilitySelect.type === 'corruption_steal');\n    if (corrActive) {\n      ctx.save();\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.8)';\n      ctx.font = 'bold 32px sans-serif';\n      ctx.textAlign = 'center';\n      ctx.fillText('üî• CORRUPTION TARGET SELECTION ACTIVE üî•', 960, 100);\n\n      ctx.fillStyle = 'rgba(255, 255, 0, 0.9)';\n      ctx.font = 'bold 24px sans-serif';\n      ctx.fillText('Click on opponent government card to target', 960, 140);\n      ctx.restore();\n    }\n\n    // --- VISUAL EFFECTS: Particle bursts, card pop scale, initiative ripple & AP pop ---\n    try {\n      const now = performance.now();\n      const { particlesRef, popsRef, ripplesRef, apLabelsRef, reducedMotion } = (visualEffects || {}) as any;\n\n      const parts: any[] = particlesRef.current || [];\n      if (!reducedMotion) {\n        for (let i = parts.length - 1; i >= 0; i--) {\n          const p = parts[i];\n          const age = now - p.start;\n          if (age > p.life) {\n            parts.splice(i, 1);\n            continue;\n          }\n          p.vy += (p.gravity || 0.09);\n          p.x += p.vx;\n          p.y += p.vy;\n          const t = 1 - age / p.life;\n          ctx.save();\n          ctx.globalAlpha = Math.max(0, Math.min(1, t));\n          ctx.fillStyle = p.color || '#ffd166';\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, (p.size || 4) * t, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n        }\n        particlesRef.current = parts;\n\n        const pops: any[] = popsRef.current || [];\n        pops.forEach((pop) => {\n          const p = Math.min(1, Math.max(0, (now - pop.started) / pop.duration));\n          const eased = 1 + 0.12 * (1 - Math.pow(1 - p, 3));\n          const zone = clickZonesRef.current.find(z => z.data && z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === pop.uid));\n          if (!zone) return;\n          ctx.save();\n          ctx.translate(zone.x + zone.w / 2, zone.y + zone.h / 2);\n          ctx.scale(eased, eased);\n          ctx.globalAlpha = 0.12 * (1 - p);\n          ctx.fillStyle = '#ffffff';\n          ctx.fillRect(-zone.w / 2, -zone.h / 2, zone.w, zone.h);\n          ctx.restore();\n        });\n\n        const ripples: any[] = ripplesRef.current || [];\n        for (let i = ripples.length - 1; i >= 0; i--) {\n          const r = ripples[i];\n          const p = Math.min(1, Math.max(0, (now - r.started) / r.duration));\n          if (p >= 1) { ripples.splice(i, 1); continue; }\n          const radius = r.radius * (0.8 + 1.8 * p);\n          ctx.save();\n          const g = ctx.createRadialGradient(r.cx, r.cy, radius * 0.1, r.cx, r.cy, radius);\n          g.addColorStop(0, `rgba(255,255,255,${0.12 * (1 - p)})`);\n          g.addColorStop(1, `rgba(255,255,255,0)`);\n          ctx.fillStyle = g as any;\n          ctx.beginPath();\n          ctx.arc(r.cx, r.cy, radius, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n\n          if (r.showAp && !r._apSpawned) {\n            apLabelsRef.current = apLabelsRef.current || [];\n            apLabelsRef.current.push({ x: r.apX, y: r.apY, started: now, duration: 800, text: '+1' });\n            r._apSpawned = true;\n          }\n        }\n        ripplesRef.current = ripples;\n\n        const apl: any[] = apLabelsRef.current || [];\n        for (let i = apl.length - 1; i >= 0; i--) {\n          const l = apl[i];\n          const p = Math.min(1, Math.max(0, (now - l.started) / l.duration));\n          if (p >= 1) { apl.splice(i, 1); continue; }\n          ctx.save();\n          ctx.globalAlpha = 1 - p;\n          ctx.fillStyle = '#ffdd57';\n          ctx.font = 'bold 22px sans-serif';\n          ctx.textAlign = 'center';\n          ctx.fillText(l.text, l.x, l.y - 20 * p);\n          ctx.restore();\n        }\n        apLabelsRef.current = apl;\n      } else {\n        const apl: any[] = apLabelsRef.current || [];\n        for (let i = apl.length - 1; i >= 0; i--) {\n          const l = apl[i];\n          const p = Math.min(1, Math.max(0, (now - l.started) / l.duration));\n          if (p >= 1) { apl.splice(i, 1); continue; }\n          ctx.save();\n          ctx.globalAlpha = 1 - p;\n          ctx.fillStyle = '#ffdd57';\n          ctx.font = 'bold 18px sans-serif';\n          ctx.textAlign = 'center';\n          ctx.fillText(l.text, l.x, l.y - 10 * p);\n          ctx.restore();\n        }\n        apLabelsRef.current = apl;\n      }\n    } catch (e) {}\n\n    // --- Overlay pass: draw influence pulse ring and +N labels on top of all cards ---\n    try {\n      const now = performance.now();\n      // iterate over stored anims\n      influenceAnimRef.current.forEach((anims, uid) => {\n        // find card position by scanning clickZones\n        const zone = clickZonesRef.current.find(z => z.data && ((z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === uid)) || (z.data.card && z.data.card.uid === uid)) );\n        if (!zone) return;\n        const cx = zone.x + zone.w / 2;\n        const cy = zone.y + zone.h / 2;\n        // calculate aggregate pulse for this uid\n        let maxPulse = 0;\n        let totalAmount = 0;\n        const remaining: Array<{ start: number; duration: number; amount: number }> = [];\n        anims.forEach(a => {\n          const p = Math.min(1, Math.max(0, (now - a.start) / a.duration));\n          const pulse = Math.pow(Math.max(0, 1 - p), 2);\n          if (pulse > maxPulse) maxPulse = pulse;\n          if (p < 1) {\n            remaining.push(a);\n            totalAmount += a.amount;\n          }\n        });\n\n        // update list\n        if (remaining.length > 0) influenceAnimRef.current.set(uid, remaining);\n        else influenceAnimRef.current.delete(uid);\n\n        if (maxPulse > 0.001) {\n          // draw a soft ring to the right-bottom of influence number\n          const ringRadius = Math.max(8, zone.w * 0.08) * (1 + maxPulse * 0.6);\n          const ringX = zone.x + zone.w - 28; // near bottom-right where influence text lives\n          const ringY = zone.y + zone.h - 20;\n\n          ctx.save();\n          ctx.beginPath();\n          ctx.strokeStyle = `rgba(46, 204, 113, ${0.9 * maxPulse})`;\n          ctx.lineWidth = Math.max(2, Math.ceil(6 * maxPulse));\n          ctx.arc(ringX, ringY, ringRadius, 0, Math.PI * 2);\n          ctx.stroke();\n          ctx.restore();\n        }\n\n        if (totalAmount > 0) {\n          // floating +N to the right of influence number\n          const labelX = zone.x + zone.w - 12;\n          const labelY = zone.y + zone.h - 32 - (Math.random() * 6); // slight jitter\n          ctx.save();\n          ctx.fillStyle = '#2ecc71';\n          ctx.font = 'bold 16px sans-serif';\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'middle';\n          ctx.fillText(`+${totalAmount}`, labelX, labelY);\n          ctx.restore();\n        }\n      });\n    } catch (e) {\n      // ignore overlay errors\n    }\n\n    // --- Outline pass: draw a subtle, slightly pulsing 257x257 square around 256x256 slots ---\n    try {\n      const now2 = performance.now();\n      clickZonesRef.current.forEach((z, i) => {\n        if (!z) return;\n        const w = z.w || 0;\n        const h = z.h || 0;\n        // only target 256x256 slot-sized zones (covers the icons)\n        if (Math.abs(w - 256) > 0.1 || Math.abs(h - 256) > 0.1) return;\n        const x = z.x;\n        const y = z.y;\n\n        // Color palette (rgb)\n        const rgbTeal = '20,184,166';\n        const rgbBurg = '127,29,29';\n        const rgbPurple = '139,92,246';\n        const rgbYellow = '250,204,21';\n        const rgbOrange = '251,146,60';\n\n        // Determine slot semantic\n        let slotType: 'government' | 'public' | 'permanent' | 'instant' | 'intervention' | 'default' = 'default';\n        try {\n          const dt = z.data || {};\n          if (dt.slot && typeof dt.slot === 'string') {\n            if (dt.slot.includes('government')) slotType = 'government';\n            else if (dt.slot.includes('public')) slotType = 'public';\n            else if (dt.slot.includes('permanent')) slotType = 'permanent';\n            else if (dt.slot.includes('instant')) slotType = 'instant';\n          }\n          if (dt.type === 'row_slot' && dt.lane === 'aussen') slotType = 'government';\n          if (dt.type === 'row_slot' && dt.lane === 'innen') slotType = 'public';\n          if (dt.type === 'trap_p1' || dt.type === 'trap_p2' || (dt.card && dt.card.kind === 'trap')) slotType = 'intervention';\n          if (dt.type === 'activate_instant' || dt.slot === 'instant') slotType = 'instant';\n          if (dt.slot === 'permanent_government' || dt.slot === 'permanent_public' || dt.slot === 'permanent') slotType = 'permanent';\n        } catch (e) {}\n\n        const pulse = 0.5 + 0.5 * Math.sin(now2 / 350 + i);\n        const alpha = 0.06 + 0.12 * pulse; // subtle alpha\n        const lw = 1 + 2 * pulse; // line width between 1 and 3\n\n        // Create gradient based on slot type\n        let grad: CanvasGradient | null = null;\n        try {\n          grad = ctx.createLinearGradient(x, y, x + w, y + h);\n          if (slotType === 'government') {\n            grad.addColorStop(0, `rgba(${rgbTeal},1)`);\n            grad.addColorStop(1, `rgba(${rgbBurg},1)`);\n          } else if (slotType === 'public') {\n            grad.addColorStop(0, `rgba(${rgbBurg},1)`);\n            grad.addColorStop(1, `rgba(${rgbTeal},1)`);\n          } else if (slotType === 'permanent') {\n            grad.addColorStop(0, `rgba(${rgbPurple},1)`);\n            grad.addColorStop(1, `rgba(${rgbPurple},1)`);\n          } else if (slotType === 'instant') {\n            grad.addColorStop(0, `rgba(${rgbYellow},1)`);\n            grad.addColorStop(1, `rgba(${rgbYellow},1)`);\n          } else if (slotType === 'intervention') {\n            grad.addColorStop(0, `rgba(${rgbOrange},1)`);\n            grad.addColorStop(1, `rgba(${rgbOrange},1)`);\n          } else {\n            grad.addColorStop(0, `rgba(255,255,255,1)`);\n            grad.addColorStop(1, `rgba(255,255,255,1)`);\n          }\n        } catch (e) {\n          grad = null;\n        }\n\n        ctx.save();\n        if (grad) ctx.strokeStyle = grad as any;\n        else ctx.strokeStyle = `rgba(255,255,255,${alpha.toFixed(3)})`;\n        ctx.globalAlpha = alpha;\n        ctx.lineWidth = lw;\n        // draw 257x257 centered so that it encloses the 256 slot\n        ctx.strokeRect(x - 0.5, y - 0.5, w + 1, h + 1);\n        ctx.restore();\n      });\n    } catch (e) {\n      // ignore outline errors\n    }\n\n    ctx.restore();\n\n    // expose zones for debug snapshot\n    (window as any).__politicardDebug = {\n      uiTransform: getUiTransform(canvas.width, canvas.height),\n      canvasSize: { width: canvas.width, height: canvas.height },\n      zones: LAYOUT.zones,\n      clickZones: clickZonesRef.current.slice(0, 1000)\n    };\n\n    // Build canonical slotPositions map for animations/debugging\n    try {\n      const map: Record<string, { x: number; y: number; w: number; h: number; cx: number; cy: number }> = {};\n      clickZonesRef.current.forEach(z => {\n        const d = z.data || {};\n        // support row_slot, board_card, slot_card shapes\n        if (d.type === 'row_slot' || d.type === 'board_card' || d.type === 'slot_card' || d.type === 'hand_p1' || d.type === 'hand_p2') {\n          const player = d.player ?? (d.type === 'hand_p2' ? 2 : 1);\n          const lane = d.lane ?? (typeof d.slot === 'string' ? d.slot : (d.type === 'hand_p2' ? 'hand' : 'unknown'));\n          let index: number;\n          if (d.index != null) {\n            index = d.index;\n          } else if (d.card) {\n            // prefer explicit slotIndex, fallback to card.index, otherwise 0\n            index = (d.card.slotIndex != null) ? d.card.slotIndex : ((d.card.index != null) ? d.card.index : 0);\n          } else {\n            index = 0;\n          }\n          const key = `${player}.${lane}.${index}`;\n          map[key] = { x: z.x, y: z.y, w: z.w, h: z.h, cx: z.x + z.w / 2, cy: z.y + z.h / 2 };\n        }\n      });\n      slotPositionsRef.current = map;\n      (window as any).__politicardDebug = { ...(window as any).__politicardDebug, slotPositions: slotPositionsRef.current };\n    } catch (e) {\n      // don't let debug mapping break rendering\n    }\n\n    // Run diagnostics after canvas is fully rendered\n    runDiagnostics();\n  }, [drawLane, drawHandP1, drawHandP2, drawInterventionsP1, drawInterventionsP2, drawPermanentSlotsP1, drawPermanentSlotsP2, drawInstantSlots, drawInfoPanels, devMode, runDiagnostics]);\n\n  const DRAW_LAYOUT_OVERLAY = false; // force off per new layout system\n\n  // Load slot symbol images once\n  useEffect(() => {\n    const load = (key: string, src: string) => {\n      const img = new Image();\n      img.onload = () => { slotSymbolImgsRef.current.set(key, img); };\n      img.onerror = () => { console.warn('Failed to load slot icon', src); };\n      img.src = src;\n    };\n    // load all slot icons\n    load('public', publicSymbolUrl);\n    load('sofort', sofortSymbolUrl);\n    load('dauerhaft', dauerhaftSymbolUrl);\n    load('government', governmentSymbolUrl);\n    load('intervention', interventionSymbolUrl);\n\n    // load test GIF for gov overlay\n    try {\n      const img = new Image();\n      img.onload = () => { govGifRef.current = img; };\n      img.onerror = () => { console.warn('Failed to load gov overlay gif', govPlaceGifUrl); };\n      img.src = govPlaceGifUrl;\n    } catch (e) {}\n    // load spritesheet for placement animation\n    try {\n      const s = new Image();\n      s.onload = () => { govSpritesRef.current = s; };\n      s.onerror = () => { console.warn('Failed to load gov spritesheet', govPlaceSpritesheetUrl); };\n      s.src = govPlaceSpritesheetUrl;\n    } catch (e) {}\n    // load spritesheet for instant initiative activation\n    try {\n      const si = new Image();\n      si.onload = () => { instantSpritesRef.current = si; };\n      si.onerror = () => { console.warn('Failed to load instant spritesheet', instantSpritesheetUrl); };\n      si.src = instantSpritesheetUrl;\n    } catch (e) {}\n\n    // load spritesheet for hit/target animation (25 frames)\n    try {\n      const h = new Image();\n      h.onload = () => { hitSpritesRef.current = h; };\n      h.onerror = () => { console.warn('Failed to load hit spritesheet', hitSpritesheetUrl); };\n      h.src = hitSpritesheetUrl;\n    } catch (e) {}\n\n    // ensure first draw\n    requestAnimationFrame(draw);\n  }, [draw]);\n\n  // Expose debug trigger to manually start gov sprite animation by slot-key or uid\n  useEffect(() => {\n    (window as any).__pc_triggerGovAnim = (id: any) => {\n      try {\n        const now = performance.now();\n        // if id is slot key like '1.aussen.2'\n        if (typeof id === 'string' && id.indexOf('.') >= 0) {\n          govSpriteStateRef.current[id] = { started: now, frameCount: 14, frameDuration: 40 };\n          return;\n        }\n\n        // otherwise try to resolve as uid/id to a clickZone\n        const uid = id;\n        const zone = clickZonesRef.current.find(z => z.data && (z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === uid || (z.data.card.id === uid))));\n        if (!zone) {\n          console.warn('pc_triggerGovAnim: no slot found for uid', uid);\n          return;\n        }\n        const player = zone.data.player ?? 1;\n        const lane = zone.data.lane ?? (zone.data.slot && typeof zone.data.slot === 'string' ? zone.data.slot : 'aussen');\n        const index = zone.data.index ?? 0;\n        const key = `${player}.${lane}.${index}`;\n        govSpriteStateRef.current[key] = { started: now, frameCount: 14, frameDuration: 40 };\n      } catch (e) {\n        console.warn('pc_triggerGovAnim error', e);\n      }\n    };\n    // expose easy alias\n    try { (window as any).pc_triggerGovAnim = (window as any).__pc_triggerGovAnim; } catch (e) {}\n    return () => { delete (window as any).__pc_triggerGovAnim; };\n  }, []);\n\n  // Expose debug trigger for hit animation (key: '1.aussen.0' or uid)\n  useEffect(() => {\n    (window as any).__pc_triggerHitAnim = (id: any) => {\n      try {\n        const now = performance.now();\n        // if id is slot key like '1.aussen.2'\n        if (typeof id === 'string' && id.indexOf('.') >= 0) {\n          hitSpriteStateRef.current[id] = { started: now, frameCount: 25, frameDuration: 30 };\n          return;\n        }\n\n        // otherwise try to resolve as uid/id to a clickZone\n        const uid = id;\n        const zone = clickZonesRef.current.find(z => z.data && (z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === uid || (z.data.card.id === uid))));\n        if (!zone) {\n          console.warn('pc_triggerHitAnim: no slot found for uid', uid);\n          return;\n        }\n        const player = zone.data.player ?? 1;\n        const lane = zone.data.lane ?? (zone.data.slot && typeof zone.data.slot === 'string' ? zone.data.slot : 'aussen');\n        const index = zone.data.index ?? 0;\n        const key = `${player}.${lane}.${index}`;\n        hitSpriteStateRef.current[key] = { started: now, frameCount: 25, frameDuration: 30 };\n      } catch (e) {\n        console.warn('pc_triggerHitAnim error', e);\n      }\n    };\n    try { (window as any).pc_triggerHitAnim = (window as any).__pc_triggerHitAnim; } catch (e) {}\n    return () => { delete (window as any).__pc_triggerHitAnim; };\n  }, []);\n\n  // Redraw when game state or selection changes\n  useEffect(() => {\n    requestAnimationFrame(draw);\n  }, [gameState, selectedHandIndex, draw]);\n\n  // Continuous render loop to keep canvas updated without relying on external state refs\n  useEffect(() => {\n    let frame: number;\n    const loop = () => {\n      draw();\n      frame = requestAnimationFrame(loop);\n    };\n    frame = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frame);\n  }, [draw]);\n\n  const handleCardClick = useCallback((data: any) => {\n    // Corruption target selection: intercept board card clicks for opponent government\n    if (corruptionSelectActorRef.current && data && data.type === 'board_card') {\n      try {\n        const actor = corruptionSelectActorRef.current as Player;\n        const victim = actor === 1 ? 2 : 1;\n        if (data.player === victim && (data.lane === 'aussen' || data.lane === 'government')) {\n          const uid = data.card?.uid ?? data.card?.id;\n          if (uid != null) {\n            corruptionSelectActorRef.current = null;\n            try { window.dispatchEvent(new CustomEvent('pc:corruption_target_selected', { detail: { player: actor, targetUid: uid } })); } catch (e) {}\n            return; // do not propagate\n          }\n        }\n      } catch (e) {}\n    }\n    // Hand-Klick\n    if (data.type === 'hand_p1') {\n      const uid = data.card?.uid ?? data.card?.id;\n      const stateHand = gameState.hands?.[1] || [];\n      const idxInState = stateHand.findIndex((c: any) => (c.uid ?? c.id) === uid);\n      onCardClick(data);\n      return;\n    }\n\n    // Slot-Klick\n    if (data.type === 'row_slot') {\n      const lane: 'public' | 'government' = data.lane;\n      const cap = getLaneCapacity(lane);\n\n      // Hole aktuelle Row-L√§nge aus gameState\n      const rowCards = lane === 'public'\n        ? gameState.board?.[1]?.innen ?? []\n        : gameState.board?.[1]?.aussen ?? [];\n\n      if (rowCards.length >= cap) {\n        // Optional: UI Feedback\n        console.warn(`Row ${lane} is full (${rowCards.length}/${cap})`);\n        return;\n      }\n\n      onCardClick(data);\n      return;\n    }\n\n    // Andere Klicks (empty_slot, board_card, etc.)\n    onCardClick(data);\n  }, [gameState, onCardClick]);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    const mx = (e.clientX - rect.left - offsetX) / scale;\n    const my = (e.clientY - rect.top - offsetY) / scale;\n\n    const hit = clickZonesRef.current.find(z => mx >= z.x && mx <= z.x + z.w && my >= z.y && my <= z.y + z.h);\n    if (hit) {\n      console.debug('[CanvasClick] mx,my,hit:', mx, my, hit.data);\n      try {\n        // If user clicked a drawn card in an instant slot, normalize to activate_instant\n        const d = hit.data || {};\n        if (d.type === 'slot_card' && d.slot === 'instant') {\n          handleCardClick({ type: 'activate_instant', player: d.player || 1, card: d.card });\n          return;\n        }\n        // Fallback: if there's an explicit activate_instant zone, pass through\n        if (d.type === 'activate_instant') {\n          handleCardClick(d);\n          return;\n        }\n      } catch (err) {}\n      handleCardClickInternal(hit.data);\n    }\n  }, [handleCardClick]);\n\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    const mx = (e.clientX - rect.left - offsetX) / scale;\n    const my = (e.clientY - rect.top - offsetY) / scale;\n\n    const hit = clickZonesRef.current.find(z => mx >= z.x && mx <= z.x + z.w && my >= z.y && my <= z.y + z.h);\n    if (hit) {\n      console.log('[hover]', hit.data.type, hit.data.card?.name);\n      onCardHover({ ...hit.data, x: e.clientX, y: e.clientY });\n    } else {\n      onCardHover(null);\n    }\n  }, [onCardHover]);\n\n  const handleWheel = useCallback((e: React.WheelEvent<HTMLCanvasElement>) => {\n    // only enable when player1 has more slots than visible\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    const zone = getZone('hand.player');\n    if (!zone) return;\n    if (handLen <= 5) return; // nothing to scroll\n\n    // Prevent page scrolling when over canvas\n    e.preventDefault();\n\n    // accumulate target offset (invert so wheel down moves cards up)\n    // Each wheel step moves by 48px per delta unit\n    const delta = Math.sign(e.deltaY) * 48;\n    // compute slot height more robustly\n    const slots = computeSlotRects(zone);\n    const slotH = slots && slots.length > 0 ? slots[0].h : zone.rectPx[3] / 5;\n    const visible = 5;\n    const maxOffset = -(Math.max(0, handLen - visible) * slotH);\n    handScrollTargetRef.current = Math.max(Math.min(handScrollTargetRef.current - delta, 0), maxOffset);\n  }, [gameState.hands]);\n\n  const handleTouchStart = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    if (!e.touches || e.touches.length === 0) return;\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    if (handLen <= 5) return;\n    isTouchingRef.current = true;\n    const y = e.touches[0].clientY;\n    touchStartYRef.current = y;\n    lastTouchYRef.current = y;\n    e.preventDefault();\n  }, [gameState.hands]);\n\n  const handleTouchMove = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    if (!isTouchingRef.current) return;\n    if (!e.touches || e.touches.length === 0) return;\n    const y = e.touches[0].clientY;\n    const last = lastTouchYRef.current ?? y;\n    const dy = y - last; // positive when moving down\n    lastTouchYRef.current = y;\n\n    // invert so dragging up moves cards up\n    const delta = -dy;\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    const zone = getZone('hand.player');\n    if (!zone) return;\n    const slots = computeSlotRects(zone);\n    const slotH = slots && slots.length > 0 ? slots[0].h : zone.rectPx[3] / 5;\n    const visible = 5;\n    const maxOffset = -(Math.max(0, handLen - visible) * slotH);\n    handScrollTargetRef.current = Math.max(Math.min(handScrollTargetRef.current + delta, 0), maxOffset);\n    e.preventDefault();\n  }, [gameState.hands]);\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    isTouchingRef.current = false;\n    touchStartYRef.current = null;\n    lastTouchYRef.current = null;\n  }, []);\n\n\n\n  // Expose debug trigger to manually start instant sprite animation by slot-key or uid\n  useEffect(() => {\n    (window as any).__pc_triggerInstantAnim = (key: any) => {\n      const now = performance.now();\n      instantSpriteStateRef.current[key || '1.instant.0'] = { started: now, frameCount: 14, frameDuration: 40 };\n    };\n    // alias\n    try { (window as any).pc_triggerInstantAnim = (window as any).__pc_triggerInstantAnim; } catch (e) {}\n    return () => { delete (window as any).__pc_triggerGovAnim; delete (window as any).__pc_triggerInstantAnim; };\n  }, []);\n\n  // Click handler wrapper for corruption selection\n  const handleCardClickInternal = useCallback((data: any) => {\n    const sel: any = (gameState as any).pendingAbilitySelect;\n    if (sel && sel.type === 'corruption_steal') {\n      // Accept clicks on either actual card sprites (with uid) or on empty row_slot hitboxes.\n      if (data.player !== sel.actorPlayer && data.lane === 'aussen') {\n        let targetUid = (data as any).uid;\n\n        // If we got a row_slot hit (no uid), map index‚Üíuid from board state\n        if (!targetUid && data.type === 'row_slot') {\n          try {\n            const p = data.player;\n            const idx = data.index;\n            const card = (gameState as any).board?.[p]?.aussen?.[idx];\n            targetUid = card?.uid;\n          } catch(e) {}\n        }\n\n        if (targetUid) {\n          try {\n            console.debug('[CORR] forwarding uid', targetUid, 'actorPlayer=', sel.actorPlayer);\n            window.dispatchEvent(new CustomEvent('pc:corruption_pick_target', { detail: { player: sel.actorPlayer, targetUid } }));\n            // Also open small confirmation overlay via DOM event for modal convenience\n            try { window.dispatchEvent(new CustomEvent('pc:corruption_target_selected', { detail: { player: sel.actorPlayer, targetUid } })); } catch(e) {}\n          } catch(e) {}\n          return; // consume click\n        }\n      }\n    }\n    onCardClick(data);\n  }, [gameState, onCardClick]);\n\n  useEffect(() => {\n    const onDiceResult = () => {\n      // remove corruption modal if exists\n      const el = document.getElementById('pc-corruption-modal');\n      if (el) el.remove();\n      corruptionSelectActorRef.current = null;\n    };\n    window.addEventListener('pc:dice_result', onDiceResult as EventListener);\n    return () => window.removeEventListener('pc:dice_result', onDiceResult as EventListener);\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={1920}\n      height={1080}\n      style={{\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        imageRendering: 'auto',\n      }}\n      onClick={handleClick}\n      onMouseMove={handleMouseMove}\n      onWheel={handleWheel}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    />\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}