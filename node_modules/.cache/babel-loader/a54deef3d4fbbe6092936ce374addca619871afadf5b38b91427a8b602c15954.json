{"ast":null,"code":"import _objectSpread from\"C:/Users/skank/Videos/Cards/Milchcards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{logger}from'./debug/logger';import{GameCanvas}from'./components/GameCanvas';import{DeckBuilder}from'./components/DeckBuilder';import{GameInfoModal}from'./components/GameInfoModal';import{EventLogModal}from'./components/EventLogModal';import{HandCardModal}from'./components/HandCardModal';import{GameLogModal}from'./components/GameLogModal';import UILayoutEditor from'./components/UILayoutEditor';import CardEffectTestSuite from'./test/CardEffectTestSuite';import{useGameState}from'./hooks/useGameState';import{PRESET_DECKS}from'./data/gameData';import{buildDeckFromEntries}from'./utils/gameUtils';import{copyDebugSnapshotToClipboard,downloadDebugSnapshot}from'./utils/debugExport';import{GameProvider}from'./context/GameContext';import{VisualEffectsProvider}from'./context/VisualEffectsContext';import{CardHoverInfoPanel}from'./components/CardHoverInfoPanel';import Dice3D from'./components/Dice3D';// Temporarily disabled for build\n// import { hasAnyZeroApPlay } from './utils/ap';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AppContent(){// Old image atlas/background removed; cards load their own images per file mapping\nconst[deckBuilderOpen,setDeckBuilderOpen]=useState(true);const[gameInfoModalOpen,setGameInfoModalOpen]=useState(true);const[eventLogModalOpen,setEventLogModalOpen]=useState(false);const[handCardModalOpen,setHandCardModalOpen]=useState(false);const[gameLogModalOpen,setGameLogModalOpen]=useState(false);const[hoveredCard,setHoveredCard]=useState(null);// 🔧 DEV MODE: Toggle für lokales Testing ohne KI\nconst[devMode,setDevMode]=useState(false);// UI Layout Editor Route\nconst[currentRoute,setCurrentRoute]=useState('game');const{gameState,selectedHandIndex,log,startMatchWithDecks,startMatchVsAI,playCard,activateInstantInitiative,runAITurn,selectHandCard,passTurn,nextTurn}=useGameState();// No global image preloading required\n// Keyboard shortcuts\nuseEffect(()=>{const handleKeyDown=event=>{if(event.key==='i'||event.key==='I'){setGameInfoModalOpen(!gameInfoModalOpen);}if(event.key==='l'||event.key==='L'){setEventLogModalOpen(!eventLogModalOpen);}if(event.key==='g'||event.key==='G'){setGameLogModalOpen(!gameLogModalOpen);}// 🔧 DEV MODE: Toggle mit 'M' Taste (M für Manual-Mode)\nif(event.key==='m'||event.key==='M'){const newDevMode=!devMode;setDevMode(newDevMode);log(\"\\uD83D\\uDD27 DEV MODE \".concat(newDevMode?'AKTIVIERT':'DEAKTIVIERT',\" - KI ist \").concat(newDevMode?'AUS':'AN'));}// 🔧 DEV MODE: Zusätzliche Controls für manuelles Testen\nif(devMode){// 'P' für Pass (aktueller Spieler)\nif(event.key==='p'||event.key==='P'){passTurn(gameState.current);log(\"\\u23ED\\uFE0F Player \".concat(gameState.current,\" passt\"));}// 'E' für Zug beenden (aktueller Spieler)\nif(event.key==='e'||event.key==='E'){nextTurn();log(\"\\u23ED\\uFE0F Player \".concat(gameState.current,\" beendet Zug\"));}// 'A' für Sofort-Initiative aktivieren (aktueller Spieler)\nif(event.key==='a'||event.key==='A'){activateInstantInitiative(gameState.current);log(\"\\uD83C\\uDFAF Player \".concat(gameState.current,\" aktiviert Sofort-Initiative\"));}}// UI Layout Editor Toggle mit 'U' Taste\nif(event.key==='u'||event.key==='U'){setCurrentRoute(currentRoute==='game'?'ui-editor':'game');}// Test Suite Toggle mit 'T' Taste\nif(event.key==='t'||event.key==='T'){setCurrentRoute(currentRoute==='game'?'test-suite':'game');}// Debug snapshot: Ctrl+D copies to clipboard, Shift+D downloads file\nif((event.key==='d'||event.key==='D')&&event.ctrlKey){copyDebugSnapshotToClipboard(gameState).then(()=>{logger.info('Debug snapshot copied to clipboard');}).catch(()=>{});}if((event.key==='d'||event.key==='D')&&event.shiftKey){downloadDebugSnapshot(gameState);}};window.addEventListener('keydown',handleKeyDown);return()=>window.removeEventListener('keydown',handleKeyDown);},[gameInfoModalOpen,eventLogModalOpen,gameLogModalOpen,devMode,log,gameState,passTurn,nextTurn,currentRoute,activateInstantInitiative]);const handleCardClick=useCallback(data=>{logger.info('🔧 DEBUG: handleCardClick called with:',data);if(!data)return;// Handle game control buttons\nif(data.type==='button_pass_turn'){const currentPlayer=gameState.current;logger.info(\"\\uD83D\\uDD27 DEBUG: button_pass_turn clicked - currentPlayer: \".concat(currentPlayer));log(\"\\uD83C\\uDFAF UI: Passen-Button geklickt - Spieler \".concat(currentPlayer,\" passt\"));log(\"\\uD83D\\uDCCA FLOW: UI \\u2192 passTurn(\".concat(currentPlayer,\") | Button click | Data: { type: \\\"button_pass_turn\\\", current: \").concat(currentPlayer,\" }\"));passTurn(currentPlayer);return;}if(data.type==='button_end_turn'){const currentPlayer=gameState.current;logger.info(\"\\uD83D\\uDD27 DEBUG: button_end_turn clicked - currentPlayer: \".concat(currentPlayer));log(\"\\uD83C\\uDFAF UI: Zug-beenden-Button geklickt - Spieler \".concat(currentPlayer,\" beendet Zug\"));log(\"\\uD83D\\uDCCA FLOW: UI \\u2192 nextTurn() | Button click | Data: { type: \\\"button_end_turn\\\", current: \".concat(currentPlayer,\" }\"));nextTurn();return;}if(data.type==='hand_p1'){if(gameState.current!==1){log('❌ ERROR: Handkarte geklickt aber nicht Spieler-Zug - Current: '+gameState.current);return;}const same=selectedHandIndex===data.index;log('🎯 UI: Handkarte geklickt - '+data.card.name+' (Index: '+data.index+', Selected: '+selectedHandIndex+')');log('📊 FLOW: UI → handleCardClick | Card selection | Data: { card: \"'+data.card.name+'\", index: '+data.index+', same: '+same+' }');if(!same){// Single click → Modal öffnen\nlog('🎯 UI: Handkarte einfach geklickt → öffne Modal - '+data.card.name);setHandCardModalOpen(true);selectHandCard(data.index);}else{// Double click → Karte direkt spielen (Auto-Platzierung)\nconst card=data.card;const currentPlayer=gameState.current;const targetLane=card.kind==='pol'?['Staatsoberhaupt','Regierungschef','Diplomat'].includes(card.tag)?'aussen':'aussen':'innen';log('🎯 UI: Handkarte doppelgeklickt → direkt spielen - '+card.name+' in '+targetLane);playCard(currentPlayer,data.index,targetLane);selectHandCard(null);}return;}// 🔧 DEV MODE: Player 2 Hand Clicks\nif(data.type==='hand_p2'){if(gameState.current!==2){log('❌ ERROR: P2 Handkarte geklickt aber nicht P2-Zug - Current: '+gameState.current);return;}const same=selectedHandIndex===data.index;log('🎯 UI: P2 Handkarte geklickt - '+data.card.name+' (Index: '+data.index+', Selected: '+selectedHandIndex+')');log('📊 FLOW: UI → handleCardClick | P2 Card selection | Data: { card: \"'+data.card.name+'\", index: '+data.index+', same: '+same+' }');if(same){// Double-click to open modal for P2\nlog('🎯 UI: P2 Handkarte doppelgeklickt - '+data.card.name);log('📊 FLOW: UI → setHandCardModalOpen(true) | P2 Double click | Data: { card: \"'+data.card.name+'\" }');setHandCardModalOpen(true);}else{var _data$card$uid,_data$card,_data$card2,_gameState$hands;// Fallback: UI index may not match authoritative state. Prefer UID lookup for P2.\nconst uid=(_data$card$uid=(_data$card=data.card)===null||_data$card===void 0?void 0:_data$card.uid)!==null&&_data$card$uid!==void 0?_data$card$uid:(_data$card2=data.card)===null||_data$card2===void 0?void 0:_data$card2.id;const stateHand=((_gameState$hands=gameState.hands)===null||_gameState$hands===void 0?void 0:_gameState$hands[2])||[];let idxInState=stateHand.findIndex(c=>{var _c$uid;return((_c$uid=c.uid)!==null&&_c$uid!==void 0?_c$uid:c.id)===uid;});if(idxInState===-1){console.warn('[DIAG] P2 hand click: card uid not found in state.hands[2]',{uid,data});log('❌ ERROR: P2 Karte nicht in Hand gefunden - UID: '+uid);window.__politicardDebug=_objectSpread(_objectSpread({},window.__politicardDebug),{},{lastClickMismatch:{ts:Date.now(),uid,data,player:2}});return;}log('🎯 UI: P2 Handkarte ausgewählt - '+data.card.name+' (Index: '+idxInState+')');log('📊 FLOW: UI → selectHandCard('+idxInState+') | P2 Card selection | Data: { card: \"'+data.card.name+'\", stateIndex: '+idxInState+' }');selectHandCard(idxInState);}return;}if(data.type==='row_slot'){var _gameState$hands2;const currentPlayer=gameState.current;if(selectedHandIndex===null){console.log('❌ ERROR: Slot geklickt aber keine Karte ausgewählt');return;}const playerHand=(_gameState$hands2=gameState.hands)===null||_gameState$hands2===void 0?void 0:_gameState$hands2[currentPlayer];if(!playerHand||selectedHandIndex<0||selectedHandIndex>=playerHand.length){console.log('❌ ERROR: Ungültige Hand oder Index - Index: '+selectedHandIndex+', Player: '+currentPlayer+', Hand-Größe: '+((playerHand===null||playerHand===void 0?void 0:playerHand.length)||0));return;}const card=playerHand[selectedHandIndex];if(!card){console.log('❌ ERROR: Ausgewählte Karte nicht gefunden - Index: '+selectedHandIndex+', Player: '+currentPlayer);return;}const lane=data.lane;console.log('🎯 UI: Karte auf Slot gespielt - '+card.name+' nach '+(lane==='aussen'?'Regierungsreihe':'Öffentlichkeitsreihe')+' (Slot '+(data.index+1)+') für Player '+currentPlayer);console.log('📊 FLOW: UI → playCard('+currentPlayer+', '+selectedHandIndex+', \"'+lane+'\") | Card placement | Data: { card: \"'+card.name+'\", lane: \"'+lane+'\", slot: '+(data.index+1)+', player: '+currentPlayer+' }');playCard(currentPlayer,selectedHandIndex,lane);selectHandCard(null);return;}if(data.type==='empty_slot'){var _gameState$hands3;const currentPlayer=gameState.current;const clickedSlotType=data.slot;// Spezielle Behandlung für leere Instant-Slots\nif(clickedSlotType==='instant'){if(selectedHandIndex===null){console.log('ℹ️ INFO: Leerer Sofort-Initiative-Slot geklickt - wähle eine Sofort-Initiative aus der Hand aus');return;}// Fall durch zur normalen Slot-Logik\n}else if(selectedHandIndex===null){console.log('❌ ERROR: Leerer Slot geklickt aber keine Karte ausgewählt');return;}const playerHand=(_gameState$hands3=gameState.hands)===null||_gameState$hands3===void 0?void 0:_gameState$hands3[currentPlayer];if(!playerHand||selectedHandIndex<0||selectedHandIndex>=playerHand.length){console.log('❌ ERROR: Ungültige Hand oder Index - Index: '+selectedHandIndex+', Player: '+currentPlayer+', Hand-Größe: '+((playerHand===null||playerHand===void 0?void 0:playerHand.length)||0));return;}const card=playerHand[selectedHandIndex];if(!card||card.kind!=='spec'){console.log('❌ ERROR: Ausgewählte Karte ist keine Spezialkarte - Kind: '+((card===null||card===void 0?void 0:card.kind)||'null')+', Player: '+currentPlayer);return;}const specCard=card;// Cast to access type property\nconst slotType=data.slot;console.log('🎯 UI: Leerer Slot geklickt - '+card.name+' auf '+slotType);console.log('📊 FLOW: UI → handleCardClick | Empty slot click | Data: { card: \"'+card.name+'\", type: \"'+specCard.type+'\", slot: \"'+slotType+'\" }');// Check if card type matches slot\nif(slotType==='permanent_government'&&specCard.type==='Dauerhaft-Initiative'){// Place permanent initiative in government slot\nconsole.log('🎯 UI: Dauerhafte Initiative in Regierungs-Slot gelegt - '+card.name+' für Player '+currentPlayer);console.log('📊 FLOW: UI → playCard('+currentPlayer+', '+selectedHandIndex+') | Permanent initiative | Data: { card: \"'+card.name+'\", slot: \"government\", player: '+currentPlayer+' }');playCard(currentPlayer,selectedHandIndex);selectHandCard(null);return;}if(slotType==='permanent_public'&&specCard.type==='Dauerhaft-Initiative'){// Place permanent initiative in public slot\nconsole.log('🎯 UI: Dauerhafte Initiative in Öffentlichkeits-Slot gelegt - '+card.name+' für Player '+currentPlayer);console.log('📊 FLOW: UI → playCard('+currentPlayer+', '+selectedHandIndex+') | Permanent initiative | Data: { card: \"'+card.name+'\", slot: \"public\", player: '+currentPlayer+' }');playCard(currentPlayer,selectedHandIndex);selectHandCard(null);return;}if(slotType==='instant'&&specCard.type==='Sofort-Initiative'){// Place instant initiative in sofort slot\nconsole.log('🎯 UI: Sofort-Initiative in Slot gelegt - '+card.name+' für Player '+currentPlayer);console.log('📊 FLOW: UI → playCard('+currentPlayer+', '+selectedHandIndex+') | Instant initiative | Data: { card: \"'+card.name+'\", type: \"Sofort-Initiative\", player: '+currentPlayer+' }');playCard(currentPlayer,selectedHandIndex);selectHandCard(null);return;}console.log('❌ ERROR: Karten-Typ passt nicht zum Slot - Card: '+specCard.type+', Slot: '+slotType);return;}// 🔧 NEU: Sofort-Initiative aus dem Slot aktivieren\nif(data.type==='activate_instant'){const player=data.player;const card=data.card;console.log('🎯 UI: Sofort-Initiative aus Slot aktiviert - '+card.name+' für Player '+player);activateInstantInitiative(player);// trigger canvas instant sprite animation (slot-key pattern)\ntry{const trig=window.__pc_triggerInstantAnim||window.pc_triggerInstantAnim;if(typeof trig==='function')trig(\"\".concat(player,\".instant.0\"));}catch(e){}return;}},[gameState,selectedHandIndex,playCard,selectHandCard,passTurn,nextTurn,log]);const handleCardHover=useCallback(data=>{setHoveredCard(data);},[]);const handleApplyDeck=useCallback(deck=>{const cardDeck=buildDeckFromEntries(deck);console.log('Applied deck:',cardDeck);},[]);const handleStartMatch=useCallback((p1Deck,p2Deck)=>{if(p1Deck&&p1Deck.length>0&&p2Deck&&p2Deck.length>0){startMatchWithDecks(p1Deck,p2Deck);}else if(p1Deck&&p1Deck.length>0){if(devMode){// Dev Mode: Beide Spieler manuell steuern - nutze preset für P2 aber ohne KI\nconst defaultP2Deck=PRESET_DECKS.AUTORITAERER_REALIST;startMatchWithDecks(p1Deck,defaultP2Deck);log('🔧 DEV MODE: Spiel gestartet ohne KI - beide Spieler manuell steuerbar');}else{// Versus AI with a default preset if only P1 provided\nstartMatchVsAI(p1Deck,'AUTORITAERER_REALIST');log('🤖 KI-Spiel gestartet');}}else{// Use default preset decks if no decks are provided\nconst defaultP1Deck=PRESET_DECKS.NEOLIBERAL_TECHNOKRAT;const defaultP2Deck=PRESET_DECKS.AUTORITAERER_REALIST;startMatchWithDecks(defaultP1Deck,defaultP2Deck);log('🎮 Spiel gestartet mit Standard-Decks');}},[startMatchWithDecks,startMatchVsAI,devMode,log]);const handlePlayCardFromModal=useCallback((index,targetSlot)=>{var _gameState$hands4;console.log('🔧 DEBUG: handlePlayCardFromModal called with:',index,targetSlot);const currentPlayer=gameState.current;const playerHand=(_gameState$hands4=gameState.hands)===null||_gameState$hands4===void 0?void 0:_gameState$hands4[currentPlayer];if(!playerHand||index<0||index>=playerHand.length){console.log('❌ DEBUG: Invalid hand or index:',index,'for player:',currentPlayer,'hand size:',(playerHand===null||playerHand===void 0?void 0:playerHand.length)||0);return;}const card=playerHand[index];if(!card){console.log('❌ DEBUG: No card found at index:',index,'for player:',currentPlayer);return;}// effectKey sicherstellen (Legacy-Namen → Keys)\ntry{const{resolveEffectKey}=require('./effects/resolveEffectKey');const k=resolveEffectKey(card.name,card.effectKey);if(k)card.effectKey=k;}catch(_unused){}console.log('🔧 DEBUG: Card found:',card.name,'for player:',currentPlayer);if(targetSlot==='aussen'||targetSlot==='innen'){console.log('🔧 DEBUG: Calling playCard with lane:',targetSlot);playCard(currentPlayer,index,targetSlot);}else{// Handle special slots\nconsole.log('🔧 DEBUG: Calling playCard without lane');log(\"\\uD83C\\uDCCF Player \".concat(currentPlayer,\": \").concat(card.name,\" gespielt in \").concat(targetSlot));// TODO: Implement special slot placement\nplayCard(currentPlayer,index);}selectHandCard(null);// nextTurn() wird jetzt automatisch in playCard aufgerufen wenn nötig\n},[gameState,playCard,selectHandCard,log]);// Auto-run AI turn whenever it's AI's turn (nur wenn nicht im Dev Mode)\nuseEffect(()=>{var _gameState$aiEnabled,_gameState$passed,_gameState$passed2;// Debug: Log auto-AI trigger checks\nif(gameState.current===2){console.log('🔍 AUTO_AI_CHECK: current=2, aiEnabled=',gameState.aiEnabled);}if(gameState.current===2&&!devMode&&(_gameState$aiEnabled=gameState.aiEnabled)!==null&&_gameState$aiEnabled!==void 0&&_gameState$aiEnabled[2]&&!((_gameState$passed=gameState.passed)!==null&&_gameState$passed!==void 0&&_gameState$passed[2])){console.log('🔔 AUTO_AI_RUN scheduled');const t=setTimeout(()=>{console.log('🔔 AUTO_AI_RUN executing runAITurn');runAITurn();},120);return()=>clearTimeout(t);}// If AI already passed, advance the turn (avoid AI stuck loop)\nif(gameState.current===2&&(_gameState$passed2=gameState.passed)!==null&&_gameState$passed2!==void 0&&_gameState$passed2[2]){const t2=setTimeout(()=>{console.log('🔔 AUTO: AI passed - advancing turn');nextTurn();},120);return()=>clearTimeout(t2);}},[gameState,runAITurn,devMode]);// Old renderTooltip removed; using CardHoverInfoPanel component instead.\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{margin:0,padding:0,background:'#0b0f14',color:'#e8f0f8',fontFamily:'ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, \"Apple Color Emoji\", \"Segoe UI Emoji\"',height:'100vh',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'10px',left:'10px',zIndex:1001,display:'flex',gap:'8px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentRoute('game'),style:{background:currentRoute==='game'?'#3b82f6':'#374151',color:'white',border:'none',padding:'8px 12px',borderRadius:'6px',fontSize:'12px',fontWeight:600,cursor:'pointer'},children:\"\\uD83C\\uDFAE Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// Start a quick match vs AI using default presets\ntry{startMatchVsAI(PRESET_DECKS.NEOLIBERAL_TECHNOKRAT);log('🤖 Schnellstart: Spiel vs KI gestartet');}catch(e){console.error('Start vs AI failed',e);log('❌ Fehler: KI-Start fehlgeschlagen');}},style:{background:'#10b981',color:'white',border:'none',padding:'8px 12px',borderRadius:'6px',fontSize:'12px',fontWeight:600,cursor:'pointer'},children:\"\\uD83E\\uDD16 Start vs KI\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentRoute('ui-editor'),style:{background:currentRoute==='ui-editor'?'#3b82f6':'#374151',color:'white',border:'none',padding:'8px 12px',borderRadius:'6px',fontSize:'12px',fontWeight:600,cursor:'pointer'},children:\"\\uD83C\\uDFA8 UI Editor\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentRoute('test-suite'),style:{background:currentRoute==='test-suite'?'#3b82f6':'#374151',color:'white',border:'none',padding:'8px 12px',borderRadius:'6px',fontSize:'12px',fontWeight:600,cursor:'pointer'},children:\"\\uD83E\\uDDEA Test Suite\"})]}),currentRoute==='ui-editor'?/*#__PURE__*/_jsx(UILayoutEditor,{}):currentRoute==='test-suite'?/*#__PURE__*/_jsx(CardEffectTestSuite,{}):/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',inset:0,display:'grid',gridTemplateRows:'1fr',gap:0,padding:0},children:/*#__PURE__*/_jsx(VisualEffectsProvider,{children:/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative',overflow:'hidden',background:'#0e141b'},children:[/*#__PURE__*/_jsx(GameCanvas,{gameState:gameState,selectedHandIndex:selectedHandIndex,onCardClick:handleCardClick,onCardHover:handleCardHover,devMode:devMode}),/*#__PURE__*/_jsx(DeckBuilder,{isOpen:deckBuilderOpen,onClose:()=>setDeckBuilderOpen(false),onApplyDeck:handleApplyDeck,onStartMatch:handleStartMatch}),!deckBuilderOpen&&/*#__PURE__*/_jsx(GameInfoModal,{gameState:gameState,isVisible:gameInfoModalOpen,onToggle:()=>setGameInfoModalOpen(!gameInfoModalOpen),onPassTurn:passTurn,onToggleLog:()=>setGameLogModalOpen(!gameLogModalOpen),onCardClick:handleCardClick,devMode:devMode}),!deckBuilderOpen&&/*#__PURE__*/_jsx(EventLogModal,{gameState:gameState,isVisible:eventLogModalOpen,onToggle:()=>setEventLogModalOpen(!eventLogModalOpen)}),!deckBuilderOpen&&/*#__PURE__*/_jsx(HandCardModal,{gameState:gameState,selectedHandIndex:selectedHandIndex,isVisible:handCardModalOpen,onClose:()=>setHandCardModalOpen(false),onPlayCard:handlePlayCardFromModal}),!deckBuilderOpen&&/*#__PURE__*/_jsx(GameLogModal,{gameState:gameState,isVisible:gameLogModalOpen,onToggle:()=>setGameLogModalOpen(!gameLogModalOpen)}),/*#__PURE__*/_jsx(CardHoverInfoPanel,{hovered:hoveredCard}),/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',left:16,bottom:16,zIndex:1200},children:/*#__PURE__*/_jsx(Dice3D,{size:120,duration:900,onRoll:f=>{console.log('Dice rolled',f);try{window.dispatchEvent(new CustomEvent('pc:dice_roll',{detail:{face:f}}));}catch(e){}}})}),devMode&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:'10px',right:'10px',background:'#ff6b35',color:'white',padding:'8px 12px',borderRadius:'6px',fontSize:'12px',fontWeight:600,boxShadow:'0 2px 8px rgba(0, 0, 0, 0.3)',zIndex:1000},children:\"\\uD83D\\uDD27 DEV MODE - KI AUS\"}),devMode&&/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'60px',right:'10px',background:gameState.current===1?'#4ade80':'#ef4444',color:'white',padding:'12px 16px',borderRadius:'8px',fontSize:'16px',fontWeight:700,boxShadow:'0 2px 8px rgba(0, 0, 0, 0.3)',zIndex:1000,border:'2px solid rgba(255, 255, 255, 0.3)'},children:[\"\\uD83C\\uDFAE Player \",gameState.current,\" am Zug\",/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'11px',fontWeight:400,opacity:0.9,marginTop:'4px'},children:[\"AP: \",gameState.actionPoints[gameState.current]]})]})]})})})]});}function App(){return/*#__PURE__*/_jsx(GameProvider,{children:/*#__PURE__*/_jsx(AppContent,{})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","logger","GameCanvas","DeckBuilder","GameInfoModal","EventLogModal","HandCardModal","GameLogModal","UILayoutEditor","CardEffectTestSuite","useGameState","PRESET_DECKS","buildDeckFromEntries","copyDebugSnapshotToClipboard","downloadDebugSnapshot","GameProvider","VisualEffectsProvider","CardHoverInfoPanel","Dice3D","jsx","_jsx","jsxs","_jsxs","AppContent","deckBuilderOpen","setDeckBuilderOpen","gameInfoModalOpen","setGameInfoModalOpen","eventLogModalOpen","setEventLogModalOpen","handCardModalOpen","setHandCardModalOpen","gameLogModalOpen","setGameLogModalOpen","hoveredCard","setHoveredCard","devMode","setDevMode","currentRoute","setCurrentRoute","gameState","selectedHandIndex","log","startMatchWithDecks","startMatchVsAI","playCard","activateInstantInitiative","runAITurn","selectHandCard","passTurn","nextTurn","handleKeyDown","event","key","newDevMode","concat","current","ctrlKey","then","info","catch","shiftKey","window","addEventListener","removeEventListener","handleCardClick","data","type","currentPlayer","same","index","card","name","targetLane","kind","includes","tag","_data$card$uid","_data$card","_data$card2","_gameState$hands","uid","id","stateHand","hands","idxInState","findIndex","c","_c$uid","console","warn","__politicardDebug","_objectSpread","lastClickMismatch","ts","Date","now","player","_gameState$hands2","playerHand","length","lane","_gameState$hands3","clickedSlotType","slot","specCard","slotType","trig","__pc_triggerInstantAnim","pc_triggerInstantAnim","e","handleCardHover","handleApplyDeck","deck","cardDeck","handleStartMatch","p1Deck","p2Deck","defaultP2Deck","AUTORITAERER_REALIST","defaultP1Deck","NEOLIBERAL_TECHNOKRAT","handlePlayCardFromModal","targetSlot","_gameState$hands4","resolveEffectKey","require","k","effectKey","_unused","_gameState$aiEnabled","_gameState$passed","_gameState$passed2","aiEnabled","passed","t","setTimeout","clearTimeout","t2","style","margin","padding","background","color","fontFamily","height","overflow","children","position","top","left","zIndex","display","gap","onClick","border","borderRadius","fontSize","fontWeight","cursor","error","inset","gridTemplateRows","onCardClick","onCardHover","isOpen","onClose","onApplyDeck","onStartMatch","isVisible","onToggle","onPassTurn","onToggleLog","onPlayCard","hovered","bottom","size","duration","onRoll","f","dispatchEvent","CustomEvent","detail","face","right","boxShadow","opacity","marginTop","actionPoints","App"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { logger } from './debug/logger';\nimport { GameCanvas } from './components/GameCanvas';\nimport { DeckBuilder } from './components/DeckBuilder';\nimport { GameInfoModal } from './components/GameInfoModal';\nimport { EventLogModal } from './components/EventLogModal';\nimport { HandCardModal } from './components/HandCardModal';\nimport { GameLogModal } from './components/GameLogModal';\nimport UILayoutEditor from './components/UILayoutEditor';\nimport CardEffectTestSuite from './test/CardEffectTestSuite';\nimport { useGameState } from './hooks/useGameState';\nimport { BuilderEntry, PoliticianCard, Player } from './types/game';\nimport { Specials, PRESET_DECKS, Pols } from './data/gameData';\nimport { buildDeckFromEntries } from './utils/gameUtils';\nimport { copyDebugSnapshotToClipboard, downloadDebugSnapshot } from './utils/debugExport';\nimport { GameProvider } from './context/GameContext';\nimport { VisualEffectsProvider } from './context/VisualEffectsContext';\nimport { getCardDetails } from './data/cardDetails';\nimport { CardHoverInfoPanel } from './components/CardHoverInfoPanel';\nimport Dice3D, { Dice3DHandle } from './components/Dice3D';\n// Temporarily disabled for build\n// import { hasAnyZeroApPlay } from './utils/ap';\n\nfunction AppContent() {\n  // Old image atlas/background removed; cards load their own images per file mapping\n\n  const [deckBuilderOpen, setDeckBuilderOpen] = useState(true);\n  const [gameInfoModalOpen, setGameInfoModalOpen] = useState(true);\n  const [eventLogModalOpen, setEventLogModalOpen] = useState(false);\n  const [handCardModalOpen, setHandCardModalOpen] = useState(false);\n  const [gameLogModalOpen, setGameLogModalOpen] = useState(false);\n  const [hoveredCard, setHoveredCard] = useState<any>(null);\n\n  // 🔧 DEV MODE: Toggle für lokales Testing ohne KI\n  const [devMode, setDevMode] = useState(false);\n\n  // UI Layout Editor Route\n  const [currentRoute, setCurrentRoute] = useState<'game' | 'ui-editor' | 'test-suite'>('game');\n\n  const {\n    gameState,\n    selectedHandIndex,\n    log,\n    startMatchWithDecks,\n    startMatchVsAI,\n    playCard,\n    activateInstantInitiative,\n    runAITurn,\n    selectHandCard,\n    passTurn,\n    nextTurn,\n  } = useGameState();\n\n  // No global image preloading required\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'i' || event.key === 'I') {\n        setGameInfoModalOpen(!gameInfoModalOpen);\n      }\n      if (event.key === 'l' || event.key === 'L') {\n        setEventLogModalOpen(!eventLogModalOpen);\n      }\n      if (event.key === 'g' || event.key === 'G') {\n        setGameLogModalOpen(!gameLogModalOpen);\n      }\n      // 🔧 DEV MODE: Toggle mit 'M' Taste (M für Manual-Mode)\n      if (event.key === 'm' || event.key === 'M') {\n        const newDevMode = !devMode;\n        setDevMode(newDevMode);\n        log(`🔧 DEV MODE ${newDevMode ? 'AKTIVIERT' : 'DEAKTIVIERT'} - KI ist ${newDevMode ? 'AUS' : 'AN'}`);\n      }\n      // 🔧 DEV MODE: Zusätzliche Controls für manuelles Testen\n      if (devMode) {\n        // 'P' für Pass (aktueller Spieler)\n        if (event.key === 'p' || event.key === 'P') {\n          passTurn(gameState.current);\n          log(`⏭️ Player ${gameState.current} passt`);\n        }\n\n        // 'E' für Zug beenden (aktueller Spieler)\n        if (event.key === 'e' || event.key === 'E') {\n          nextTurn();\n          log(`⏭️ Player ${gameState.current} beendet Zug`);\n        }\n\n        // 'A' für Sofort-Initiative aktivieren (aktueller Spieler)\n        if (event.key === 'a' || event.key === 'A') {\n          activateInstantInitiative(gameState.current);\n          log(`🎯 Player ${gameState.current} aktiviert Sofort-Initiative`);\n        }\n      }\n\n      // UI Layout Editor Toggle mit 'U' Taste\n      if (event.key === 'u' || event.key === 'U') {\n        setCurrentRoute(currentRoute === 'game' ? 'ui-editor' : 'game');\n      }\n\n      // Test Suite Toggle mit 'T' Taste\n      if (event.key === 't' || event.key === 'T') {\n        setCurrentRoute(currentRoute === 'game' ? 'test-suite' : 'game');\n      }\n\n      // Debug snapshot: Ctrl+D copies to clipboard, Shift+D downloads file\n      if ((event.key === 'd' || event.key === 'D') && event.ctrlKey) {\n        copyDebugSnapshotToClipboard(gameState).then(() => {\n          logger.info('Debug snapshot copied to clipboard');\n        }).catch(() => {});\n      }\n      if ((event.key === 'd' || event.key === 'D') && event.shiftKey) {\n        downloadDebugSnapshot(gameState);\n      }\n\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [gameInfoModalOpen, eventLogModalOpen, gameLogModalOpen, devMode, log, gameState, passTurn, nextTurn, currentRoute, activateInstantInitiative]);\n\n  const handleCardClick = useCallback((data: any) => {\n    logger.info('🔧 DEBUG: handleCardClick called with:', data);\n    if (!data) return;\n\n    // Handle game control buttons\n\n\n    if (data.type === 'button_pass_turn') {\n      const currentPlayer = gameState.current;\n      logger.info(`🔧 DEBUG: button_pass_turn clicked - currentPlayer: ${currentPlayer}`);\n      log(`🎯 UI: Passen-Button geklickt - Spieler ${currentPlayer} passt`);\n      log(`📊 FLOW: UI → passTurn(${currentPlayer}) | Button click | Data: { type: \"button_pass_turn\", current: ${currentPlayer} }`);\n      passTurn(currentPlayer);\n      return;\n    }\n\n    if (data.type === 'button_end_turn') {\n      const currentPlayer = gameState.current;\n      logger.info(`🔧 DEBUG: button_end_turn clicked - currentPlayer: ${currentPlayer}`);\n      log(`🎯 UI: Zug-beenden-Button geklickt - Spieler ${currentPlayer} beendet Zug`);\n      log(`📊 FLOW: UI → nextTurn() | Button click | Data: { type: \"button_end_turn\", current: ${currentPlayer} }`);\n      nextTurn();\n      return;\n    }\n\n\n\n    if (data.type === 'hand_p1') {\n      if (gameState.current !== 1) {\n        log('❌ ERROR: Handkarte geklickt aber nicht Spieler-Zug - Current: ' + gameState.current);\n        return;\n      }\n\n      const same = selectedHandIndex === data.index;\n      log('🎯 UI: Handkarte geklickt - ' + data.card.name + ' (Index: ' + data.index + ', Selected: ' + selectedHandIndex + ')');\n      log('📊 FLOW: UI → handleCardClick | Card selection | Data: { card: \"' + data.card.name + '\", index: ' + data.index + ', same: ' + same + ' }');\n\n      if (!same) {\n        // Single click → Modal öffnen\n        log('🎯 UI: Handkarte einfach geklickt → öffne Modal - ' + data.card.name);\n        setHandCardModalOpen(true);\n        selectHandCard(data.index);\n      } else {\n        // Double click → Karte direkt spielen (Auto-Platzierung)\n        const card: any = data.card;\n        const currentPlayer = gameState.current;\n        const targetLane = card.kind === 'pol' ? (['Staatsoberhaupt','Regierungschef','Diplomat'].includes(card.tag) ? 'aussen' : 'aussen') : 'innen';\n        log('🎯 UI: Handkarte doppelgeklickt → direkt spielen - ' + card.name + ' in ' + targetLane);\n        playCard(currentPlayer, data.index, targetLane);\n        selectHandCard(null);\n      }\n      return;\n    }\n\n    // 🔧 DEV MODE: Player 2 Hand Clicks\n    if (data.type === 'hand_p2') {\n      if (gameState.current !== 2) {\n        log('❌ ERROR: P2 Handkarte geklickt aber nicht P2-Zug - Current: ' + gameState.current);\n        return;\n      }\n\n      const same = selectedHandIndex === data.index;\n      log('🎯 UI: P2 Handkarte geklickt - ' + data.card.name + ' (Index: ' + data.index + ', Selected: ' + selectedHandIndex + ')');\n      log('📊 FLOW: UI → handleCardClick | P2 Card selection | Data: { card: \"' + data.card.name + '\", index: ' + data.index + ', same: ' + same + ' }');\n\n      if (same) {\n        // Double-click to open modal for P2\n        log('🎯 UI: P2 Handkarte doppelgeklickt - ' + data.card.name);\n        log('📊 FLOW: UI → setHandCardModalOpen(true) | P2 Double click | Data: { card: \"' + data.card.name + '\" }');\n        setHandCardModalOpen(true);\n      } else {\n        // Fallback: UI index may not match authoritative state. Prefer UID lookup for P2.\n        const uid = data.card?.uid ?? data.card?.id;\n        const stateHand = gameState.hands?.[2] || [];\n        let idxInState = stateHand.findIndex((c: any) => (c.uid ?? c.id) === uid);\n\n        if (idxInState === -1) {\n          console.warn('[DIAG] P2 hand click: card uid not found in state.hands[2]', { uid, data });\n          log('❌ ERROR: P2 Karte nicht in Hand gefunden - UID: ' + uid);\n          (window as any).__politicardDebug = {\n            ...(window as any).__politicardDebug,\n            lastClickMismatch: { ts: Date.now(), uid, data, player: 2 }\n          };\n          return;\n        }\n\n        log('🎯 UI: P2 Handkarte ausgewählt - ' + data.card.name + ' (Index: ' + idxInState + ')');\n        log('📊 FLOW: UI → selectHandCard(' + idxInState + ') | P2 Card selection | Data: { card: \"' + data.card.name + '\", stateIndex: ' + idxInState + ' }');\n        selectHandCard(idxInState);\n      }\n      return;\n    }\n\n    if (data.type === 'row_slot') {\n      const currentPlayer = gameState.current;\n      if (selectedHandIndex === null) {\n        console.log('❌ ERROR: Slot geklickt aber keine Karte ausgewählt');\n        return;\n      }\n\n      const playerHand = gameState.hands?.[currentPlayer];\n      if (!playerHand || selectedHandIndex < 0 || selectedHandIndex >= playerHand.length) {\n        console.log('❌ ERROR: Ungültige Hand oder Index - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer + ', Hand-Größe: ' + (playerHand?.length || 0));\n        return;\n      }\n\n      const card = playerHand[selectedHandIndex];\n      if (!card) {\n        console.log('❌ ERROR: Ausgewählte Karte nicht gefunden - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer);\n        return;\n      }\n\n      const lane = data.lane;\n      console.log('🎯 UI: Karte auf Slot gespielt - ' + card.name + ' nach ' + (lane === 'aussen' ? 'Regierungsreihe' : 'Öffentlichkeitsreihe') + ' (Slot ' + (data.index + 1) + ') für Player ' + currentPlayer);\n      console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ', \"' + lane + '\") | Card placement | Data: { card: \"' + card.name + '\", lane: \"' + lane + '\", slot: ' + (data.index + 1) + ', player: ' + currentPlayer + ' }');\n      playCard(currentPlayer, selectedHandIndex, lane);\n      selectHandCard(null);\n      return;\n    }\n\n    if (data.type === 'empty_slot') {\n      const currentPlayer = gameState.current;\n      const clickedSlotType = data.slot;\n\n      // Spezielle Behandlung für leere Instant-Slots\n      if (clickedSlotType === 'instant') {\n        if (selectedHandIndex === null) {\n          console.log('ℹ️ INFO: Leerer Sofort-Initiative-Slot geklickt - wähle eine Sofort-Initiative aus der Hand aus');\n          return;\n        }\n        // Fall durch zur normalen Slot-Logik\n      } else if (selectedHandIndex === null) {\n        console.log('❌ ERROR: Leerer Slot geklickt aber keine Karte ausgewählt');\n        return;\n      }\n\n      const playerHand = gameState.hands?.[currentPlayer];\n      if (!playerHand || selectedHandIndex < 0 || selectedHandIndex >= playerHand.length) {\n        console.log('❌ ERROR: Ungültige Hand oder Index - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer + ', Hand-Größe: ' + (playerHand?.length || 0));\n        return;\n      }\n\n      const card = playerHand[selectedHandIndex];\n      if (!card || card.kind !== 'spec') {\n        console.log('❌ ERROR: Ausgewählte Karte ist keine Spezialkarte - Kind: ' + (card?.kind || 'null') + ', Player: ' + currentPlayer);\n        return;\n      }\n\n      const specCard = card as any; // Cast to access type property\n      const slotType = data.slot;\n\n      console.log('🎯 UI: Leerer Slot geklickt - ' + card.name + ' auf ' + slotType);\n      console.log('📊 FLOW: UI → handleCardClick | Empty slot click | Data: { card: \"' + card.name + '\", type: \"' + specCard.type + '\", slot: \"' + slotType + '\" }');\n\n      // Check if card type matches slot\n      if (slotType === 'permanent_government' && specCard.type === 'Dauerhaft-Initiative') {\n        // Place permanent initiative in government slot\n        console.log('🎯 UI: Dauerhafte Initiative in Regierungs-Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Permanent initiative | Data: { card: \"' + card.name + '\", slot: \"government\", player: ' + currentPlayer + ' }');\n        playCard(currentPlayer, selectedHandIndex);\n        selectHandCard(null);\n        return;\n      }\n\n      if (slotType === 'permanent_public' && specCard.type === 'Dauerhaft-Initiative') {\n        // Place permanent initiative in public slot\n        console.log('🎯 UI: Dauerhafte Initiative in Öffentlichkeits-Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Permanent initiative | Data: { card: \"' + card.name + '\", slot: \"public\", player: ' + currentPlayer + ' }');\n        playCard(currentPlayer, selectedHandIndex);\n        selectHandCard(null);\n        return;\n      }\n\n      if (slotType === 'instant' && specCard.type === 'Sofort-Initiative') {\n        // Place instant initiative in sofort slot\n        console.log('🎯 UI: Sofort-Initiative in Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Instant initiative | Data: { card: \"' + card.name + '\", type: \"Sofort-Initiative\", player: ' + currentPlayer + ' }');\n        playCard(currentPlayer, selectedHandIndex);\n        selectHandCard(null);\n        return;\n      }\n\n      console.log('❌ ERROR: Karten-Typ passt nicht zum Slot - Card: ' + specCard.type + ', Slot: ' + slotType);\n      return;\n    }\n\n    // 🔧 NEU: Sofort-Initiative aus dem Slot aktivieren\n    if (data.type === 'activate_instant') {\n      const player = data.player as Player;\n      const card = data.card;\n      console.log('🎯 UI: Sofort-Initiative aus Slot aktiviert - ' + card.name + ' für Player ' + player);\n      activateInstantInitiative(player);\n      // trigger canvas instant sprite animation (slot-key pattern)\n      try {\n        const trig = (window as any).__pc_triggerInstantAnim || (window as any).pc_triggerInstantAnim;\n        if (typeof trig === 'function') trig(`${player}.instant.0`);\n      } catch (e) {}\n      return;\n    }\n  }, [gameState, selectedHandIndex, playCard, selectHandCard, passTurn, nextTurn, log]);\n\n  const handleCardHover = useCallback((data: any) => {\n    setHoveredCard(data);\n  }, []);\n\n  const handleApplyDeck = useCallback((deck: BuilderEntry[]) => {\n    const cardDeck = buildDeckFromEntries(deck);\n    console.log('Applied deck:', cardDeck);\n  }, []);\n\n  const handleStartMatch = useCallback((p1Deck: BuilderEntry[], p2Deck: BuilderEntry[]) => {\n    if (p1Deck && p1Deck.length > 0 && p2Deck && p2Deck.length > 0) {\n      startMatchWithDecks(p1Deck, p2Deck);\n    } else if (p1Deck && p1Deck.length > 0) {\n      if (devMode) {\n        // Dev Mode: Beide Spieler manuell steuern - nutze preset für P2 aber ohne KI\n        const defaultP2Deck = PRESET_DECKS.AUTORITAERER_REALIST as BuilderEntry[];\n        startMatchWithDecks(p1Deck, defaultP2Deck);\n        log('🔧 DEV MODE: Spiel gestartet ohne KI - beide Spieler manuell steuerbar');\n      } else {\n        // Versus AI with a default preset if only P1 provided\n        startMatchVsAI(p1Deck, 'AUTORITAERER_REALIST');\n        log('🤖 KI-Spiel gestartet');\n      }\n    } else {\n      // Use default preset decks if no decks are provided\n      const defaultP1Deck = PRESET_DECKS.NEOLIBERAL_TECHNOKRAT as BuilderEntry[];\n      const defaultP2Deck = PRESET_DECKS.AUTORITAERER_REALIST as BuilderEntry[];\n      startMatchWithDecks(defaultP1Deck, defaultP2Deck);\n      log('🎮 Spiel gestartet mit Standard-Decks');\n    }\n  }, [startMatchWithDecks, startMatchVsAI, devMode, log]);\n\n  const handlePlayCardFromModal = useCallback((index: number, targetSlot?: string) => {\n    console.log('🔧 DEBUG: handlePlayCardFromModal called with:', index, targetSlot);\n    const currentPlayer = gameState.current;\n    const playerHand = gameState.hands?.[currentPlayer];\n    if (!playerHand || index < 0 || index >= playerHand.length) {\n      console.log('❌ DEBUG: Invalid hand or index:', index, 'for player:', currentPlayer, 'hand size:', (playerHand?.length || 0));\n      return;\n    }\n\n    const card = playerHand[index];\n    if (!card) {\n      console.log('❌ DEBUG: No card found at index:', index, 'for player:', currentPlayer);\n      return;\n    }\n\n    // effectKey sicherstellen (Legacy-Namen → Keys)\n    try {\n      const { resolveEffectKey } = require('./effects/resolveEffectKey');\n      const k = resolveEffectKey(card.name, (card as any).effectKey);\n      if (k) (card as any).effectKey = k;\n    } catch {}\n\n    console.log('🔧 DEBUG: Card found:', card.name, 'for player:', currentPlayer);\n\n    if (targetSlot === 'aussen' || targetSlot === 'innen') {\n      console.log('🔧 DEBUG: Calling playCard with lane:', targetSlot);\n      playCard(currentPlayer, index, targetSlot as any);\n    } else {\n      // Handle special slots\n      console.log('🔧 DEBUG: Calling playCard without lane');\n      log(`🃏 Player ${currentPlayer}: ${card.name} gespielt in ${targetSlot}`);\n      // TODO: Implement special slot placement\n      playCard(currentPlayer, index);\n    }\n\n    selectHandCard(null);\n    // nextTurn() wird jetzt automatisch in playCard aufgerufen wenn nötig\n  }, [gameState, playCard, selectHandCard, log]);\n\n  // Auto-run AI turn whenever it's AI's turn (nur wenn nicht im Dev Mode)\n  useEffect(() => {\n    // Debug: Log auto-AI trigger checks\n    if (gameState.current === 2) {\n      console.log('🔍 AUTO_AI_CHECK: current=2, aiEnabled=', gameState.aiEnabled);\n    }\n    if (gameState.current === 2 && !devMode && gameState.aiEnabled?.[2] && !gameState.passed?.[2]) {\n      console.log('🔔 AUTO_AI_RUN scheduled');\n      const t = setTimeout(() => {\n        console.log('🔔 AUTO_AI_RUN executing runAITurn');\n        runAITurn();\n      }, 120);\n      return () => clearTimeout(t);\n    }\n\n    // If AI already passed, advance the turn (avoid AI stuck loop)\n    if (gameState.current === 2 && gameState.passed?.[2]) {\n      const t2 = setTimeout(() => {\n        console.log('🔔 AUTO: AI passed - advancing turn');\n        nextTurn();\n      }, 120);\n      return () => clearTimeout(t2);\n    }\n  }, [gameState, runAITurn, devMode]);\n\n\n\n  // Old renderTooltip removed; using CardHoverInfoPanel component instead.\n\n  return (\n    <div style={{\n      margin: 0,\n      padding: 0,\n      background: '#0b0f14',\n      color: '#e8f0f8',\n      fontFamily: 'ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, \"Apple Color Emoji\", \"Segoe UI Emoji\"',\n      height: '100vh',\n      overflow: 'hidden',\n    }}>\n      {/* Route Navigation */}\n      <div style={{\n        position: 'fixed',\n        top: '10px',\n        left: '10px',\n        zIndex: 1001,\n        display: 'flex',\n        gap: '8px',\n      }}>\n        <button\n          onClick={() => setCurrentRoute('game')}\n          style={{\n            background: currentRoute === 'game' ? '#3b82f6' : '#374151',\n            color: 'white',\n            border: 'none',\n            padding: '8px 12px',\n            borderRadius: '6px',\n            fontSize: '12px',\n            fontWeight: 600,\n            cursor: 'pointer',\n          }}\n        >\n          🎮 Game\n        </button>\n        <button\n          onClick={() => {\n            // Start a quick match vs AI using default presets\n            try {\n              startMatchVsAI(PRESET_DECKS.NEOLIBERAL_TECHNOKRAT as any);\n              log('🤖 Schnellstart: Spiel vs KI gestartet');\n            } catch (e) {\n              console.error('Start vs AI failed', e);\n              log('❌ Fehler: KI-Start fehlgeschlagen');\n            }\n          }}\n          style={{\n            background: '#10b981',\n            color: 'white',\n            border: 'none',\n            padding: '8px 12px',\n            borderRadius: '6px',\n            fontSize: '12px',\n            fontWeight: 600,\n            cursor: 'pointer',\n          }}\n        >\n          🤖 Start vs KI\n        </button>\n        <button\n          onClick={() => setCurrentRoute('ui-editor')}\n          style={{\n            background: currentRoute === 'ui-editor' ? '#3b82f6' : '#374151',\n            color: 'white',\n            border: 'none',\n            padding: '8px 12px',\n            borderRadius: '6px',\n            fontSize: '12px',\n            fontWeight: 600,\n            cursor: 'pointer',\n          }}\n        >\n          🎨 UI Editor\n        </button>\n        <button\n          onClick={() => setCurrentRoute('test-suite')}\n          style={{\n            background: currentRoute === 'test-suite' ? '#3b82f6' : '#374151',\n            color: 'white',\n            border: 'none',\n            padding: '8px 12px',\n            borderRadius: '6px',\n            fontSize: '12px',\n            fontWeight: 600,\n            cursor: 'pointer',\n          }}\n        >\n          🧪 Test Suite\n        </button>\n      </div>\n\n      {currentRoute === 'ui-editor' ? (\n        <UILayoutEditor />\n      ) : currentRoute === 'test-suite' ? (\n        <CardEffectTestSuite />\n      ) : (\n        <div style={{\n          position: 'fixed',\n          inset: 0,\n          display: 'grid',\n          gridTemplateRows: '1fr',\n          gap: 0,\n          padding: 0,\n        }}>\n          <VisualEffectsProvider>\n            <div style={{\n              position: 'relative',\n              overflow: 'hidden',\n              background: '#0e141b',\n            }}>\n              <GameCanvas\n                gameState={gameState}\n                selectedHandIndex={selectedHandIndex}\n                onCardClick={handleCardClick}\n                onCardHover={handleCardHover}\n                devMode={devMode}\n              />\n\n              <DeckBuilder\n                isOpen={deckBuilderOpen}\n                onClose={() => setDeckBuilderOpen(false)}\n                onApplyDeck={handleApplyDeck}\n                onStartMatch={handleStartMatch}\n              />\n\n              {!deckBuilderOpen && (\n                <GameInfoModal\n                  gameState={gameState}\n                  isVisible={gameInfoModalOpen}\n                  onToggle={() => setGameInfoModalOpen(!gameInfoModalOpen)}\n                  onPassTurn={passTurn}\n                  onToggleLog={() => setGameLogModalOpen(!gameLogModalOpen)}\n                  onCardClick={handleCardClick}\n                  devMode={devMode}\n                />\n              )}\n\n              {!deckBuilderOpen && (\n                <EventLogModal\n                  gameState={gameState}\n                  isVisible={eventLogModalOpen}\n                  onToggle={() => setEventLogModalOpen(!eventLogModalOpen)}\n                />\n              )}\n\n              {!deckBuilderOpen && (\n                <HandCardModal\n                  gameState={gameState}\n                  selectedHandIndex={selectedHandIndex}\n                  isVisible={handCardModalOpen}\n                  onClose={() => setHandCardModalOpen(false)}\n                  onPlayCard={handlePlayCardFromModal}\n                />\n              )}\n\n              {!deckBuilderOpen && (\n                <GameLogModal\n                  gameState={gameState}\n                  isVisible={gameLogModalOpen}\n                  onToggle={() => setGameLogModalOpen(!gameLogModalOpen)}\n                />\n              )}\n\n              <CardHoverInfoPanel hovered={hoveredCard} />\n\n              {/* Dice 3D - Dev utility */}\n              <div style={{ position: 'fixed', left: 16, bottom: 16, zIndex: 1200 }}>\n                {/* use a stable ref declared at top-level of AppContent if you need to control it */}\n                <Dice3D\n                  size={120}\n                  duration={900}\n                  onRoll={(f) => {\n                    console.log('Dice rolled', f);\n                    try { window.dispatchEvent(new CustomEvent('pc:dice_roll', { detail: { face: f } })); } catch (e) {}\n                  }}\n                />\n              </div>\n\n              {/* 🔧 DEV MODE Indikator */}\n              {devMode && (\n                <div style={{\n                  position: 'fixed',\n                  top: '10px',\n                  right: '10px',\n                  background: '#ff6b35',\n                  color: 'white',\n                  padding: '8px 12px',\n                  borderRadius: '6px',\n                  fontSize: '12px',\n                  fontWeight: 600,\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',\n                  zIndex: 1000,\n                }}>\n                  🔧 DEV MODE - KI AUS\n                </div>\n              )}\n\n              {/* 🎯 Current Player Indicator (immer sichtbar im Dev Mode) */}\n              {devMode && (\n                <div style={{\n                  position: 'fixed',\n                  top: '60px',\n                  right: '10px',\n                  background: gameState.current === 1 ? '#4ade80' : '#ef4444',\n                  color: 'white',\n                  padding: '12px 16px',\n                  borderRadius: '8px',\n                  fontSize: '16px',\n                  fontWeight: 700,\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',\n                  zIndex: 1000,\n                  border: '2px solid rgba(255, 255, 255, 0.3)',\n                }}>\n                  🎮 Player {gameState.current} am Zug\n                  <div style={{\n                    fontSize: '11px',\n                    fontWeight: 400,\n                    opacity: 0.9,\n                    marginTop: '4px',\n                  }}>\n                    AP: {gameState.actionPoints[gameState.current]}\n                  </div>\n                </div>\n              )}\n            </div>\n          </VisualEffectsProvider>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <GameProvider>\n      <AppContent />\n    </GameProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}