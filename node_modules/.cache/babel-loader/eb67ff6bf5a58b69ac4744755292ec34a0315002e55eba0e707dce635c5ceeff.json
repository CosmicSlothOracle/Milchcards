{"ast":null,"code":"import _objectSpread from\"C:/Users/skank/Videos/Cards/Milchcards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useRef,useEffect,useCallback}from'react';import{useVisualEffectsSafe}from'../context/VisualEffectsContext';import{LAYOUT,getZone,computeSlotRects,getUiTransform,getLaneCapacity,getPublicRects,getGovernmentRects}from'../ui/layout';import{sortHandCards}from'../utils/gameUtils';import{getCardImagePath}from'../data/gameData';import influenceIconUrl from'../assets/icons/influence.svg';import publicSymbolUrl from'../assets/icons/public_symbol.png';import sofortSymbolUrl from'../assets/icons/sofort_initiative_symbol.png';import dauerhaftSymbolUrl from'../assets/icons/dauerhaft_initative.png';import governmentSymbolUrl from'../assets/icons/government_symbol.png';import interventionSymbolUrl from'../assets/icons/intervention_symbol.png';import{jsx as _jsx}from\"react/jsx-runtime\";export const GameCanvas=_ref=>{let{gameState,selectedHandIndex,onCardClick,onCardHover,devMode=false}=_ref;const canvasRef=useRef(null);const visualEffects=useVisualEffectsSafe();const clickZonesRef=useRef([]);// Smooth vertical scroll for P1 hand when it has more than visible slots\nconst handScrollTargetRef=useRef(0);const handScrollCurrentRef=useRef(0);const handScrollEnabledRef=useRef(true);// Touch handling refs\nconst touchStartYRef=useRef(null);const lastTouchYRef=useRef(null);const isTouchingRef=useRef(false);const backgroundImageRef=useRef(null);const imageCacheRef=useRef(new Map());const influenceImgRef=useRef(null);// Animation state for visual influence changes: Map<uid, Array<Anim>>\nconst influenceAnimRef=useRef(new Map());// Previous per-card influence snapshot to detect increases\nconst prevInfluencesRef=useRef({});// Slot symbol images\nconst slotSymbolImgsRef=useRef(new Map());// Helper: draw slot icons with uniform pulsing opacity and a light reflection\nconst drawSlotIconWithPulse=useCallback(function(ctx,img,x,y,w,h){let phase=arguments.length>6&&arguments[6]!==undefined?arguments[6]:0;if(!img||!img.complete)return;try{const now=performance.now();const base=0.10;// base opacity\nconst pulseRange=0.08;// pulse amplitude (-> up to base + pulseRange)\nconst period=700;// ms\nconst pulse=base+pulseRange*(0.5+0.5*Math.sin(now/period+phase));// draw icon with pulsing alpha\nctx.save();ctx.globalAlpha=pulse;ctx.drawImage(img,x,y,w,h);// subtle reflection: gradient overlay on top half\nconst grad=ctx.createLinearGradient(x,y,x,y+h*0.5);grad.addColorStop(0,\"rgba(255,255,255,\".concat(0.18*pulse,\")\"));grad.addColorStop(1,\"rgba(255,255,255,0)\");ctx.globalCompositeOperation='lighter';ctx.fillStyle=grad;ctx.fillRect(x,y,w,h*0.5);ctx.restore();}catch(e){// silent fallback\n}},[]);// Load influence icon once\nuseEffect(()=>{const img=new Image();img.src=influenceIconUrl;influenceImgRef.current=img;},[]);const drawCardAt=useCallback(function(ctx,card,x,y,size){var _shield;let selected=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;let showAPCost=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;let player=arguments.length>7?arguments[7]:undefined;// Apply per-card fade-in if a play animation is active for this uid\nlet extraAlpha=1;try{var _uid;const uid=(_uid=card.uid)!==null&&_uid!==void 0?_uid:card.id;const list=visualEffects&&visualEffects.playAnimsRef&&visualEffects.playAnimsRef.current||window.__pc_play_anims||[];const anim=list.find(a=>a.uid===uid);if(anim){const p=Math.min(1,Math.max(0,(performance.now()-anim.started)/anim.duration));// ease-out\nextraAlpha=Math.pow(p,2);}}catch(e){}let dx=x,dy=y,s=size;if(selected){s=Math.floor(size*1.05);dx=x-Math.floor((s-size)/2);dy=y-Math.floor((s-size)/2);}// Note: pulse overlay is drawn at top layer after all cards are rendered\n// Draw card image with caching to prevent flicker in continuous loop\nconst src=getCardImagePath(card,'ui');const cached=imageCacheRef.current.get(src);ctx.save();ctx.globalAlpha=extraAlpha;if(cached&&cached.complete){ctx.drawImage(cached,dx,dy,s,s);}else{const img=new Image();img.onload=()=>{imageCacheRef.current.set(src,img);// Note: onload happens async; draw will occur on next frame\n// don't draw here into stale ctx\n};img.src=src;imageCacheRef.current.set(src,img);}ctx.restore();// Status-Indikatoren (für alle Board-Karten)\n// Einfluss-Wert dauerhaft anzeigen (oben links) – nur für Regierungskarten\nif(card.kind==='pol'){var _influence;const barH=Math.max(20,Math.floor(s*0.12)+6);ctx.fillStyle='rgba(0,0,0,0.6)';ctx.fillRect(dx,dy+s-barH,s,barH);ctx.fillStyle='#ffffff';const fontSize=Math.floor(s*0.12);ctx.font=\"bold \".concat(fontSize,\"px sans-serif\");ctx.textAlign='left';ctx.textBaseline='middle';ctx.fillText(\"\".concat((_influence=card.influence)!==null&&_influence!==void 0?_influence:0),dx+8,dy+s-barH/2);}// Schutz-Status (blauer Punkt)\nif(card.protected||((_shield=card.shield)!==null&&_shield!==void 0?_shield:0)>0){ctx.fillStyle='#1da1f2';ctx.fillRect(dx+s-22,dy+6,16,16);}// Deaktiviert-Status (roter Punkt)\nif(card.deactivated){ctx.fillStyle='#b63838';ctx.fillRect(dx+s-22,dy+26,16,16);}// Einfluss-Badge für Handkarten oben rechts (nur Regierungskarten)\nif(showAPCost&&player&&card.kind==='pol'){var _influence2;const badgeHeight=Math.max(16,Math.floor(s*0.12));const badgeWidth=badgeHeight*2;const badgeX=dx+s-badgeWidth-6;const badgeY=dy+6;// Semi-transparent dunkler Hintergrund\nctx.fillStyle='rgba(0,0,0,0.6)';ctx.beginPath();ctx.roundRect(badgeX,badgeY,badgeWidth,badgeHeight,badgeHeight/2);ctx.fill();// Influence icon (90% opacity) links im Badge\nif(influenceImgRef.current&&influenceImgRef.current.complete){ctx.globalAlpha=0.9;ctx.drawImage(influenceImgRef.current,badgeX+2,badgeY+2,badgeHeight-4,badgeHeight-4);ctx.globalAlpha=1;}// Influence number rechts im Badge\nctx.fillStyle='#ffffff';ctx.font=\"bold \".concat(Math.floor(badgeHeight*0.5),\"px sans-serif\");ctx.textAlign='right';ctx.textBaseline='middle';ctx.fillText(\"\".concat((_influence2=card.influence)!==null&&_influence2!==void 0?_influence2:0),badgeX+badgeWidth-4,badgeY+badgeHeight/2);// Reset align\nctx.textAlign='start';ctx.textBaseline='alphabetic';}// NOTE: influence overlays (pulse + labels) are drawn in a separate pass\n// Auswahl-Rahmen\nif(selected){ctx.strokeStyle='#61dafb';ctx.lineWidth=3;ctx.strokeRect(dx+1,dy+1,s-2,s-2);ctx.lineWidth=1;}// Return exact 256x256 click zone over the card\n// Since all cards are 256x256, the click zone should match exactly\nreturn{x:dx,y:dy,w:256,h:256};},[gameState]);// Slot-Benennungs-Funktion basierend auf Glossar\nconst getSlotDisplayName=useCallback((zoneId,index,player)=>{const slotNumber=index+1;if(zoneId.includes('government')){if(zoneId.includes('player')){return\"Regierungsreihe Slot \".concat(slotNumber);}else{return\"Gegner Regierung Slot \".concat(slotNumber);}}else if(zoneId.includes('public')){if(zoneId.includes('player')){return\"\\xD6ffentlichkeitsreihe Slot \".concat(slotNumber);}else{return\"Gegner \\xD6ffentlichkeit Slot \".concat(slotNumber);}}else if(zoneId.includes('permanent.government')){if(zoneId.includes('player')){return'Regierung Spezial-Slot';}else{return'Gegner Regierung Spezial-Slot';}}else if(zoneId.includes('permanent.public')){if(zoneId.includes('player')){return'Öffentlichkeit Spezial-Slot';}else{return'Gegner Öffentlichkeit Spezial-Slot';}}else if(zoneId.includes('instant')){if(zoneId.includes('player')){return'Sofort-Slot';}else{return'Gegner Sofort-Slot';}}else if(zoneId.includes('hand')){return'Hand';}else if(zoneId.includes('interventions')){return'Interventionen';}return\"Slot \".concat(slotNumber);},[]);const drawLane=useCallback((ctx,zoneId,player,lane,clickable)=>{const zone=getZone(zoneId);if(!zone)return;const slots=computeSlotRects(zone);const arr=gameState.board[player][lane];slots.forEach((s,idx)=>{const card=arr[idx];// Hintergrundfarbe nach Kategorie\nlet bgColor='rgba(0,0,0,0.1)';// Standard\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';// Hellgelb für Regierung\n}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';// Hellgrün für Öffentlichkeit\n}ctx.fillStyle=bgColor;ctx.fillRect(s.x,s.y,s.w,s.h);// Slot-Rahmen\nctx.strokeStyle='rgba(255,255,255,0.06)';ctx.strokeRect(s.x+0.5,s.y+0.5,s.w-1,s.h-1);if(card){const isSelected=player===1&&selectedHandIndex!==null&&gameState.hands[1][selectedHandIndex]===card;const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,isSelected,false);// Kartenname unter dem Slot anzeigen\nctx.fillStyle='rgba(255,255,255,0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';const textY=s.y+s.h+16;ctx.fillText(card.name,s.x+s.w/2,textY);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'board_card',player,lane,index:idx,card}}));}else if(clickable&&gameState.current===player){// Slot-Benennung anzeigen (für den aktuellen Spieler)\nconst slotName=getSlotDisplayName(zoneId,idx,player);ctx.fillStyle='rgba(255,255,255,0.6)';ctx.font='11px sans-serif';ctx.textAlign='center';const textY=s.y+s.h/2;ctx.fillText(slotName,s.x+s.w/2,textY);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',lane,index:idx}});}});},[gameState,selectedHandIndex,drawCardAt,getSlotDisplayName]);const drawHandP1=useCallback(ctx=>{const hand=sortHandCards(gameState.hands[1]);const zone=getZone('hand.player');if(!zone)return;const slots=computeSlotRects(zone);// Apply smooth offset (lerp towards target)\nconst target=handScrollTargetRef.current;handScrollCurrentRef.current+=(target-handScrollCurrentRef.current)*0.15;// easing\nconst offsetY=Math.round(handScrollCurrentRef.current);slots.forEach((s,i)=>{const card=hand[i];if(!card)return;// Find original index in unsorted hand for click handling\nconst originalIndex=gameState.hands[1].findIndex(c=>c.uid===card.uid);const isSel=selectedHandIndex===originalIndex;// apply vertical offset\nconst sx=s.x;const sy=s.y+offsetY;const clickZone=drawCardAt(ctx,card,sx,sy,s.w,isSel,true,1);// Show AP cost for player 1 hand\nclickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'hand_p1',index:originalIndex,card}}));});},[gameState.hands,selectedHandIndex,drawCardAt]);// 🔧 DEV MODE: Player 2 Hand (rechts unten, kompakter)\nconst drawHandP2=useCallback(ctx=>{const hand=sortHandCards(gameState.hands[2]);const zone=getZone('hand.opponent');if(!zone)return;const slots=computeSlotRects(zone);// Hintergrund für P2 Hand\nconst[x,y,w,h]=zone.rectPx;ctx.fillStyle='rgba(255, 100, 100, 0.15)';// Rötlicher Hintergrund für P2\nctx.fillRect(x,y,w,h);ctx.strokeStyle='rgba(255, 100, 100, 0.3)';ctx.strokeRect(x+0.5,y+0.5,w-1,h-1);// Label für P2 Hand\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='bold 14px sans-serif';ctx.textAlign='center';ctx.fillText('Player 2 Hand',x+w/2,y-8);slots.forEach((s,i)=>{const card=hand[i];if(!card)return;// Find original index in unsorted hand for click handling\nconst originalIndex=gameState.hands[2].findIndex(c=>c.uid===card.uid);const isSel=gameState.current===2&&selectedHandIndex===originalIndex;const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,isSel,true,2);// Show AP cost for player 2 hand\nclickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'hand_p2',index:originalIndex,card}}));});},[gameState,selectedHandIndex,drawCardAt]);// Interventions strip (player traps)\nconst drawInterventionsP1=useCallback(ctx=>{const traps=gameState.traps[1]||[];const zone=getZone('interventions.player');if(!zone)return;// Single intervention slot\nconst[zx,zy,zw,zh]=zone.rectPx;const card=traps[0];// Only first trap\n// Hintergrund für Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.15)';// Lavendelfarben für Interventionen\nctx.fillRect(zx,zy,zw,zh);ctx.strokeStyle='rgba(200, 160, 255, 0.3)';ctx.strokeRect(zx+0.5,zy+0.5,zw-1,zh-1);// Slot-Benennung für Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.8)';ctx.font='11px sans-serif';ctx.textAlign='left';ctx.fillText('Intervention',zx+8,zy+zh-6);if(card){const clickZone=drawCardAt(ctx,card,zx,zy,zw,false,false);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'trap_p1',index:0,card}}));}},[gameState.traps,drawCardAt]);// Interventions strip (opponent traps)\nconst drawInterventionsP2=useCallback(ctx=>{const traps=gameState.traps[2]||[];const zone=getZone('interventions.opponent');if(!zone)return;// Single intervention slot\nconst[zx,zy,zw,zh]=zone.rectPx;const card=traps[0];// Only first trap\n// Hintergrund für Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.15)';// Lavendelfarben für Interventionen\nctx.fillRect(zx,zy,zw,zh);ctx.strokeStyle='rgba(200, 160, 255, 0.3)';ctx.strokeRect(zx+0.5,zy+0.5,zw-1,zh-1);// Slot-Benennung für Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.8)';ctx.font='11px sans-serif';ctx.textAlign='left';ctx.fillText('Intervention',zx+8,zy+zh-6);if(card){const clickZone=drawCardAt(ctx,card,zx,zy,zw,false,false);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'trap_p2',index:0,card}}));}},[gameState.traps,drawCardAt]);// Single slot drawing function\nconst drawSingleSlot=useCallback((ctx,zoneId,card,clickType,player)=>{const zone=getZone(zoneId);if(!zone)return;const[x,y,w,h]=zone.rectPx;// Hintergrundfarbe nach Kategorie\nlet bgColor='rgba(0,0,0,0.1)';// Standard\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';// Hellgelb für Regierung\n}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';// Hellgrün für Öffentlichkeit\n}else if(zoneId.includes('instant')){bgColor='rgba(127, 116, 91, 0.15)';// Neutral für Sofort-Slots\n}else if(zoneId.includes('permanent')){// Unterscheide zwischen government und public permanent slots\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';}}ctx.fillStyle=bgColor;ctx.fillRect(x,y,w,h);// Draw slot border\nctx.strokeStyle='rgba(255,255,255,0.06)';ctx.strokeRect(x+0.5,y+0.5,w-1,h-1);if(card){const isSelected=player===1&&selectedHandIndex!==null&&gameState.hands[1][selectedHandIndex]===card;const clickZone=drawCardAt(ctx,card,x,y,w,isSelected,false);// Kartenname unter dem Slot anzeigen\nctx.fillStyle='rgba(255,255,255,0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';const textY=y+h+16;ctx.fillText(card.name,x+w/2,textY);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'slot_card',slot:clickType,card}}));// 🔧 NEU: Sofort-Initiative-Slots sind klickbar für Aktivierung\nif(clickType==='instant'&&gameState.current===player){clickZonesRef.current.push({x,y,w,h,data:{type:'activate_instant',player,card}});}}else if(gameState.current===player){// Slot-Benennung für leere Slots anzeigen (für den aktuellen Spieler)\nconst slotName=getSlotDisplayName(zoneId,0,player);ctx.fillStyle='rgba(255,255,255,0.6)';ctx.font='11px sans-serif';ctx.textAlign='center';const textY=y+h/2;ctx.fillText(slotName,x+w/2,textY);clickZonesRef.current.push({x,y,w,h,data:{type:'empty_slot',slot:clickType}});}},[selectedHandIndex,gameState,drawCardAt,getSlotDisplayName]);// Draw permanent slots for player\nconst drawPermanentSlotsP1=useCallback(ctx=>{drawSingleSlot(ctx,'slot.permanent.government.player',gameState.permanentSlots[1].government,'permanent_government',1);drawSingleSlot(ctx,'slot.permanent.public.player',gameState.permanentSlots[1].public,'permanent_public',1);},[gameState.permanentSlots,drawSingleSlot]);// Draw permanent slots for opponent\nconst drawPermanentSlotsP2=useCallback(ctx=>{drawSingleSlot(ctx,'slot.permanent.government.opponent',gameState.permanentSlots[2].government,'permanent_government',2);drawSingleSlot(ctx,'slot.permanent.public.opponent',gameState.permanentSlots[2].public,'permanent_public',2);},[gameState.permanentSlots,drawSingleSlot]);// Draw instant slots\nconst drawInstantSlots=useCallback(ctx=>{// Sofort-Initiative-Slots aus dem Board zeichnen\nconst sofortPlayerCard=gameState.board[1].sofort[0];const sofortOppCard=gameState.board[2].sofort[0];drawSingleSlot(ctx,'slot.instant.player',sofortPlayerCard,'instant',1);drawSingleSlot(ctx,'slot.instant.opponent',sofortOppCard,'instant',2);},[gameState.board,drawSingleSlot]);// Aktive Schlüsselwörter und Unterkategorien ermitteln\nconst getActiveKeywordsAndSubcategories=useCallback(player=>{const board=gameState.board[player];const permanentSlots=gameState.permanentSlots[player];const allCards=[...board.innen,...board.aussen,permanentSlots.government,permanentSlots.public].filter(c=>c&&c.kind==='pol');const keywords=new Set();const subcategories=new Set();allCards.forEach(card=>{if(!card.deactivated){// Regierungskarten-Schlüsselwörter\nif(card.tag==='Leadership'){keywords.add('Leadership');}if(card.tag==='Diplomat'){keywords.add('Diplomat');}// Öffentlichkeits-Unterkategorien (für Karten in Öffentlichkeitsreihe)\nif(board.innen.includes(card)){const publicCard=card;if(publicCard.tag){// Oligarch\nconst oligarchNames=['Elon Musk','Bill Gates','George Soros','Warren Buffett','Mukesh Ambani','Jeff Bezos','Alisher Usmanov','Gautam Adani','Jack Ma','Zhang Yiming','Roman Abramovich'];if(oligarchNames.includes(publicCard.name)){subcategories.add('Oligarch');}// Plattform\nconst platformNames=['Mark Zuckerberg','Tim Cook','Sam Altman','Jack Ma'];if(platformNames.includes(publicCard.name)){subcategories.add('Plattform');}// Bewegung\nconst movementNames=['Greta Thunberg','Malala Yousafzai','Ai Weiwei','Alexei Navalny'];if(movementNames.includes(publicCard.name)){subcategories.add('Bewegung');}// NGO/Think-Tank\nconst ngoNames=['Bill Gates','George Soros','Jennifer Doudna','Noam Chomsky','Anthony Fauci'];if(ngoNames.includes(publicCard.name)){subcategories.add('NGO/Think-Tank');}// Intelligenz\nconst intelligenceNames=['Jennifer Doudna','Noam Chomsky','Edward Snowden','Julian Assange','Yuval Noah Harari','Ai Weiwei','Alexei Navalny','Anthony Fauci'];if(intelligenceNames.includes(publicCard.name)){subcategories.add('Intelligenz');}// Medien\nconst mediaNames=['Oprah Winfrey'];if(mediaNames.includes(publicCard.name)){subcategories.add('Medien');}}}}});return{keywords:Array.from(keywords),subcategories:Array.from(subcategories)};},[gameState]);// Info-Panels zeichnen\nconst drawInfoPanels=useCallback(ctx=>{const{keywords,subcategories}=getActiveKeywordsAndSubcategories(1);// Panel für Regierungsschlüsselwörter (rechts neben Regierungsslots)\nconst govPanelX=1640+256+20;// Nach dem letzten permanenten Slot\nconst govPanelY=300;// Auf Höhe der Regierungsslots\nconst govPanelW=120;const govPanelH=256;// Regierungspanel Hintergrund\nctx.fillStyle='rgba(255, 197, 0, 0.15)';ctx.fillRect(govPanelX,govPanelY,govPanelW,govPanelH);ctx.strokeStyle='rgba(255, 197, 0, 0.3)';ctx.strokeRect(govPanelX+0.5,govPanelY+0.5,govPanelW-1,govPanelH-1);// Regierungspanel Titel\nctx.fillStyle='rgba(255, 197, 0, 0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';ctx.fillText('Regierung',govPanelX+govPanelW/2,govPanelY+16);// Schlüsselwörter auflisten\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='11px sans-serif';ctx.textAlign='left';if(keywords.length>0){keywords.forEach((keyword,idx)=>{ctx.fillText(\"\\u2022 \".concat(keyword),govPanelX+8,govPanelY+36+idx*16);});}else{ctx.fillStyle='rgba(255, 255, 255, 0.5)';ctx.fillText('Keine aktiven',govPanelX+8,govPanelY+36);ctx.fillText('Schlüsselwörter',govPanelX+8,govPanelY+52);}// Panel für Öffentlichkeits-Unterkategorien (rechts neben Öffentlichkeitsslots)\nconst pubPanelX=1640+256+20;const pubPanelY=580;// Auf Höhe der Öffentlichkeitsslots\nconst pubPanelW=120;const pubPanelH=256;// Öffentlichkeitspanel Hintergrund\nctx.fillStyle='rgba(0, 255, 0, 0.15)';ctx.fillRect(pubPanelX,pubPanelY,pubPanelW,pubPanelH);ctx.strokeStyle='rgba(0, 255, 0, 0.3)';ctx.strokeRect(pubPanelX+0.5,pubPanelY+0.5,pubPanelW-1,pubPanelH-1);// Öffentlichkeitspanel Titel\nctx.fillStyle='rgba(0, 255, 0, 0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';ctx.fillText('Öffentlichkeit',pubPanelX+pubPanelW/2,pubPanelY+16);// Unterkategorien auflisten\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='11px sans-serif';ctx.textAlign='left';if(subcategories.length>0){subcategories.forEach((subcategory,idx)=>{const displayName=subcategory.length>12?subcategory.substring(0,10)+'...':subcategory;ctx.fillText(\"\\u2022 \".concat(displayName),pubPanelX+8,pubPanelY+36+idx*16);});}else{ctx.fillStyle='rgba(255, 255, 255, 0.5)';ctx.fillText('Keine aktiven',pubPanelX+8,pubPanelY+36);ctx.fillText('Unterkategorien',pubPanelX+8,pubPanelY+52);}},[getActiveKeywordsAndSubcategories]);// Move diagnostics to draw callback to ensure they run after canvas is actually rendered\nconst runDiagnostics=useCallback(()=>{try{const handZones=clickZonesRef.current.filter(z=>z.data&&z.data.type==='hand_p1');const uiUIDs=handZones.map(z=>{var _z$data$card$uid;return z.data.card&&((_z$data$card$uid=z.data.card.uid)!==null&&_z$data$card$uid!==void 0?_z$data$card$uid:z.data.card.id);}).filter(Boolean);const stateHand=gameState.hands&&gameState.hands[1]?gameState.hands[1]:[];const stateUIDs=stateHand.map(c=>{var _c$uid;return(_c$uid=c.uid)!==null&&_c$uid!==void 0?_c$uid:c.id;}).filter(Boolean);const missingInState=uiUIDs.filter(u=>!stateUIDs.includes(u));const missingInUI=stateUIDs.filter(u=>!uiUIDs.includes(u));// Only warn if there are cards in UI that don't exist in state (real error)\n// Don't warn about missing UI cards due to limited slot capacity\nif(missingInState.length>0){var _politicardDebug;const mismatch={ts:Date.now(),uiCount:uiUIDs.length,stateCount:stateUIDs.length,uiUIDs,stateUIDs,missingInState,missingInUI,stack:new Error('mismatch-stack').stack};window.__politicardDebug=_objectSpread(_objectSpread({},window.__politicardDebug),{},{mismatch:[...(((_politicardDebug=window.__politicardDebug)===null||_politicardDebug===void 0?void 0:_politicardDebug.mismatch)||[])].slice(-19).concat([mismatch])});// Clear, then log to console so user can copy/paste trace\nconsole.warn('POLITICARD DIAGNOSTIC: hand mismatch detected',mismatch);}}catch(e){// swallow diagnostic errors to avoid breaking rendering\nconsole.error('Diagnostic error',e);}},[gameState.hands]);const draw=useCallback(()=>{var _LAYOUT$background,_LAYOUT$background2;const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Detect influence increases and start animations\ntry{const currSnapshot={};const collect=c=>{var _c$uid2,_c$influence;if(!c)return;if(c.kind!=='pol')return;const uid=(_c$uid2=c.uid)!==null&&_c$uid2!==void 0?_c$uid2:c.id!=null?String(c.id):null;if(!uid)return;currSnapshot[uid]=(_c$influence=c.influence)!==null&&_c$influence!==void 0?_c$influence:0;};// board rows\n(gameState.board[1].aussen||[]).forEach(collect);(gameState.board[2].aussen||[]).forEach(collect);(gameState.board[1].innen||[]).forEach(collect);(gameState.board[2].innen||[]).forEach(collect);// permanent slots\ncollect(gameState.permanentSlots[1].government);collect(gameState.permanentSlots[2].government);collect(gameState.permanentSlots[1].public);collect(gameState.permanentSlots[2].public);const now=performance.now();Object.keys(currSnapshot).forEach(uid=>{var _currSnapshot$uid,_prevInfluencesRef$cu;const curr=(_currSnapshot$uid=currSnapshot[uid])!==null&&_currSnapshot$uid!==void 0?_currSnapshot$uid:0;const prev=(_prevInfluencesRef$cu=prevInfluencesRef.current[uid])!==null&&_prevInfluencesRef$cu!==void 0?_prevInfluencesRef$cu:curr;if(curr>prev){const delta=curr-prev;const list=influenceAnimRef.current.get(uid)||[];list.push({start:now,duration:900,amount:delta});influenceAnimRef.current.set(uid,list);}prevInfluencesRef.current[uid]=curr;});}catch(e){// ignore\n}// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);// Clear click zones\nclickZonesRef.current=[];// Background: prefer PNG if configured\nif((_LAYOUT$background=LAYOUT.background)!==null&&_LAYOUT$background!==void 0&&_LAYOUT$background.enabled&&(_LAYOUT$background2=LAYOUT.background)!==null&&_LAYOUT$background2!==void 0&&_LAYOUT$background2.src){if(backgroundImageRef.current){ctx.drawImage(backgroundImageRef.current,0,0,canvas.width,canvas.height);}else{ctx.fillStyle='#0c131b';ctx.fillRect(0,0,canvas.width,canvas.height);}}else{ctx.fillStyle='#0c131b';ctx.fillRect(0,0,canvas.width,canvas.height);}// Apply UI transform (new signature)\nconst{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);ctx.save();ctx.translate(offsetX,offsetY);ctx.scale(scale,scale);// Draw opponent board (top rows) - clickable im Dev Mode\n// Draw opponent board using new layout system\nconst opponentPublicRects=getPublicRects('opponent');const opponentGovRects=getGovernmentRects('opponent');// Draw opponent public slots\nopponentPublicRects.forEach((s,idx)=>{const card=gameState.board[2].innen[idx];if(card){drawCardAt(ctx,card,s.x,s.y,s.w,false,false,2);}else{// draw placeholder symbol for empty public slot\nconst img=slotSymbolImgsRef.current.get('public');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.4);}});// Draw opponent government slots\nopponentGovRects.forEach((s,idx)=>{const card=gameState.board[2].aussen[idx];if(card){drawCardAt(ctx,card,s.x,s.y,s.w,false,false,2);}else{const img=slotSymbolImgsRef.current.get('government');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.1);}});// Draw opponent permanent slots (show icons even when not current)\ntry{const permGovZoneOpp=getZone('slot.permanent.government.opponent');if(permGovZoneOpp){const card=gameState.permanentSlots[2].government;const[ox,oy,ow,oh]=permGovZoneOpp.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.government.opponent',card,'permanent_government',2);}else{const img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,ox,oy,ow,oh,0.3);}}}catch(e){}try{const permPubZoneOpp=getZone('slot.permanent.public.opponent');if(permPubZoneOpp){const card=gameState.permanentSlots[2].public;const[ox2,oy2,ow2,oh2]=permPubZoneOpp.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.public.opponent',card,'permanent_public',2);}else{const img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,ox2,oy2,ow2,oh2,0.7);}}}catch(e){}// Draw player board (middle rows)\n// Draw player board using new layout system\nconst playerPublicRects=getPublicRects('player');const playerGovRects=getGovernmentRects('player');// Draw player public slots\nplayerPublicRects.forEach((s,idx)=>{const card=gameState.board[1].innen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,1);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'row_slot',player:1,lane:'innen',index:idx}}));}else{// Empty slot click zone and draw public symbol\n// Draw unified pulsing icon for empty public slot\nconst img=slotSymbolImgsRef.current.get('public');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.4);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:1,lane:'innen',index:idx}});}});// Draw player government slots\nplayerGovRects.forEach((s,idx)=>{const card=gameState.board[1].aussen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,1);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'row_slot',player:1,lane:'aussen',index:idx}}));}else{// Empty slot click zone and draw government symbol\nconst img=slotSymbolImgsRef.current.get('government');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.1);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:1,lane:'aussen',index:idx}});}});// Draw player permanent slots (draw symbols if empty)\n// permanent government\nconst permGovZone=getZone('slot.permanent.government.player');if(permGovZone){const card=gameState.permanentSlots[1].government;const[x,y,w,h]=permGovZone.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.government.player',card,'permanent_government',1);}else{// Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent gov slot)\nconst img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,x,y,w,h,0.2);}}// permanent public\nconst permPubZone=getZone('slot.permanent.public.player');if(permPubZone){const card=gameState.permanentSlots[1].public;const[x2,y2,w2,h2]=permPubZone.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.public.player',card,'permanent_public',1);}else{// Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent public slot)\nconst img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,x2,y2,w2,h2,0.9);}}// Draw instant slots (both players) and placeholder if empty\nconst instantPlayerZone=getZone('slot.instant.player');if(instantPlayerZone){const card=gameState.board[1].sofort[0];const[x,y,w,h]=instantPlayerZone.rectPx;if(card)drawSingleSlot(ctx,'slot.instant.player',card,'instant',1);else{// Use unified icon draw helper for instant slot\nconst img=slotSymbolImgsRef.current.get('sofort');drawSlotIconWithPulse(ctx,img,x,y,w,h,0.0);}}// Draw interventions strip (player)\n// We draw symbol if empty\nconst interventionsZone=getZone('interventions.player');if(interventionsZone){const[zx,zy,zw,zh]=interventionsZone.rectPx;const card=gameState.traps[1]&&gameState.traps[1][0];if(card)drawInterventionsP1(ctx);else{const img=slotSymbolImgsRef.current.get('intervention');drawSlotIconWithPulse(ctx,img,zx,zy,zw,zh,0.6);}}// Draw interventions strip (opponent) - nur im Dev Mode\nif(devMode){drawInterventionsP2(ctx);}// Draw hand (P1)\ndrawHandP1(ctx);// 🔧 DEV MODE: Draw hand (P2) - nur im Dev Mode\nif(devMode){drawHandP2(ctx);}// Draw info panels\ndrawInfoPanels(ctx);// --- VISUAL EFFECTS: Particle bursts, card pop scale, initiative ripple & AP pop ---\ntry{const now=performance.now();const{particlesRef,popsRef,ripplesRef,apLabelsRef,reducedMotion}=visualEffects||{};const parts=particlesRef.current||[];if(!reducedMotion){for(let i=parts.length-1;i>=0;i--){const p=parts[i];const age=now-p.start;if(age>p.life){parts.splice(i,1);continue;}p.vy+=p.gravity||0.09;p.x+=p.vx;p.y+=p.vy;const t=1-age/p.life;ctx.save();ctx.globalAlpha=Math.max(0,Math.min(1,t));ctx.fillStyle=p.color||'#ffd166';ctx.beginPath();ctx.arc(p.x,p.y,(p.size||4)*t,0,Math.PI*2);ctx.fill();ctx.restore();}particlesRef.current=parts;const pops=popsRef.current||[];pops.forEach(pop=>{const p=Math.min(1,Math.max(0,(now-pop.started)/pop.duration));const eased=1+0.12*(1-Math.pow(1-p,3));const zone=clickZonesRef.current.find(z=>{var _z$data$card$uid2;return z.data&&z.data.card&&((_z$data$card$uid2=z.data.card.uid)!==null&&_z$data$card$uid2!==void 0?_z$data$card$uid2:String(z.data.card.id))===pop.uid;});if(!zone)return;ctx.save();ctx.translate(zone.x+zone.w/2,zone.y+zone.h/2);ctx.scale(eased,eased);ctx.globalAlpha=0.12*(1-p);ctx.fillStyle='#ffffff';ctx.fillRect(-zone.w/2,-zone.h/2,zone.w,zone.h);ctx.restore();});const ripples=ripplesRef.current||[];for(let i=ripples.length-1;i>=0;i--){const r=ripples[i];const p=Math.min(1,Math.max(0,(now-r.started)/r.duration));if(p>=1){ripples.splice(i,1);continue;}const radius=r.radius*(0.8+1.8*p);ctx.save();const g=ctx.createRadialGradient(r.cx,r.cy,radius*0.1,r.cx,r.cy,radius);g.addColorStop(0,\"rgba(255,255,255,\".concat(0.12*(1-p),\")\"));g.addColorStop(1,\"rgba(255,255,255,0)\");ctx.fillStyle=g;ctx.beginPath();ctx.arc(r.cx,r.cy,radius,0,Math.PI*2);ctx.fill();ctx.restore();if(r.showAp&&!r._apSpawned){apLabelsRef.current=apLabelsRef.current||[];apLabelsRef.current.push({x:r.apX,y:r.apY,started:now,duration:800,text:'+1'});r._apSpawned=true;}}ripplesRef.current=ripples;const apl=apLabelsRef.current||[];for(let i=apl.length-1;i>=0;i--){const l=apl[i];const p=Math.min(1,Math.max(0,(now-l.started)/l.duration));if(p>=1){apl.splice(i,1);continue;}ctx.save();ctx.globalAlpha=1-p;ctx.fillStyle='#ffdd57';ctx.font='bold 22px sans-serif';ctx.textAlign='center';ctx.fillText(l.text,l.x,l.y-20*p);ctx.restore();}apLabelsRef.current=apl;}else{const apl=apLabelsRef.current||[];for(let i=apl.length-1;i>=0;i--){const l=apl[i];const p=Math.min(1,Math.max(0,(now-l.started)/l.duration));if(p>=1){apl.splice(i,1);continue;}ctx.save();ctx.globalAlpha=1-p;ctx.fillStyle='#ffdd57';ctx.font='bold 18px sans-serif';ctx.textAlign='center';ctx.fillText(l.text,l.x,l.y-10*p);ctx.restore();}apLabelsRef.current=apl;}}catch(e){}// --- Overlay pass: draw influence pulse ring and +N labels on top of all cards ---\ntry{const now=performance.now();// iterate over stored anims\ninfluenceAnimRef.current.forEach((anims,uid)=>{// find card position by scanning clickZones\nconst zone=clickZonesRef.current.find(z=>{var _z$data$card$uid3;return z.data&&(z.data.card&&((_z$data$card$uid3=z.data.card.uid)!==null&&_z$data$card$uid3!==void 0?_z$data$card$uid3:String(z.data.card.id))===uid||z.data.card&&z.data.card.uid===uid);});if(!zone)return;const cx=zone.x+zone.w/2;const cy=zone.y+zone.h/2;// calculate aggregate pulse for this uid\nlet maxPulse=0;let totalAmount=0;const remaining=[];anims.forEach(a=>{const p=Math.min(1,Math.max(0,(now-a.start)/a.duration));const pulse=Math.pow(Math.max(0,1-p),2);if(pulse>maxPulse)maxPulse=pulse;if(p<1){remaining.push(a);totalAmount+=a.amount;}});// update list\nif(remaining.length>0)influenceAnimRef.current.set(uid,remaining);else influenceAnimRef.current.delete(uid);if(maxPulse>0.001){// draw a soft ring to the right-bottom of influence number\nconst ringRadius=Math.max(8,zone.w*0.08)*(1+maxPulse*0.6);const ringX=zone.x+zone.w-28;// near bottom-right where influence text lives\nconst ringY=zone.y+zone.h-20;ctx.save();ctx.beginPath();ctx.strokeStyle=\"rgba(46, 204, 113, \".concat(0.9*maxPulse,\")\");ctx.lineWidth=Math.max(2,Math.ceil(6*maxPulse));ctx.arc(ringX,ringY,ringRadius,0,Math.PI*2);ctx.stroke();ctx.restore();}if(totalAmount>0){// floating +N to the right of influence number\nconst labelX=zone.x+zone.w-12;const labelY=zone.y+zone.h-32-Math.random()*6;// slight jitter\nctx.save();ctx.fillStyle='#2ecc71';ctx.font='bold 16px sans-serif';ctx.textAlign='left';ctx.textBaseline='middle';ctx.fillText(\"+\".concat(totalAmount),labelX,labelY);ctx.restore();}});}catch(e){// ignore overlay errors\n}// --- Outline pass: draw a subtle, slightly pulsing 257x257 square around 256x256 slots ---\ntry{const now2=performance.now();clickZonesRef.current.forEach((z,i)=>{if(!z)return;const w=z.w||0;const h=z.h||0;// only target 256x256 slot-sized zones (covers the icons)\nif(Math.abs(w-256)>0.1||Math.abs(h-256)>0.1)return;const x=z.x;const y=z.y;// Color palette (rgb)\nconst rgbTeal='20,184,166';const rgbBurg='127,29,29';const rgbPurple='139,92,246';const rgbYellow='250,204,21';const rgbOrange='251,146,60';// Determine slot semantic\nlet slotType='default';try{const dt=z.data||{};if(dt.slot&&typeof dt.slot==='string'){if(dt.slot.includes('government'))slotType='government';else if(dt.slot.includes('public'))slotType='public';else if(dt.slot.includes('permanent'))slotType='permanent';else if(dt.slot.includes('instant'))slotType='instant';}if(dt.type==='row_slot'&&dt.lane==='aussen')slotType='government';if(dt.type==='row_slot'&&dt.lane==='innen')slotType='public';if(dt.type==='trap_p1'||dt.type==='trap_p2'||dt.card&&dt.card.kind==='trap')slotType='intervention';if(dt.type==='activate_instant'||dt.slot==='instant')slotType='instant';if(dt.slot==='permanent_government'||dt.slot==='permanent_public'||dt.slot==='permanent')slotType='permanent';}catch(e){}const pulse=0.5+0.5*Math.sin(now2/350+i);const alpha=0.06+0.12*pulse;// subtle alpha\nconst lw=1+2*pulse;// line width between 1 and 3\n// Create gradient based on slot type\nlet grad=null;try{grad=ctx.createLinearGradient(x,y,x+w,y+h);if(slotType==='government'){grad.addColorStop(0,\"rgba(\".concat(rgbTeal,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbBurg,\",1)\"));}else if(slotType==='public'){grad.addColorStop(0,\"rgba(\".concat(rgbBurg,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbTeal,\",1)\"));}else if(slotType==='permanent'){grad.addColorStop(0,\"rgba(\".concat(rgbPurple,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbPurple,\",1)\"));}else if(slotType==='instant'){grad.addColorStop(0,\"rgba(\".concat(rgbYellow,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbYellow,\",1)\"));}else if(slotType==='intervention'){grad.addColorStop(0,\"rgba(\".concat(rgbOrange,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbOrange,\",1)\"));}else{grad.addColorStop(0,\"rgba(255,255,255,1)\");grad.addColorStop(1,\"rgba(255,255,255,1)\");}}catch(e){grad=null;}ctx.save();if(grad)ctx.strokeStyle=grad;else ctx.strokeStyle=\"rgba(255,255,255,\".concat(alpha.toFixed(3),\")\");ctx.globalAlpha=alpha;ctx.lineWidth=lw;// draw 257x257 centered so that it encloses the 256 slot\nctx.strokeRect(x-0.5,y-0.5,w+1,h+1);ctx.restore();});}catch(e){// ignore outline errors\n}ctx.restore();// expose zones for debug snapshot\nwindow.__politicardDebug={uiTransform:getUiTransform(canvas.width,canvas.height),canvasSize:{width:canvas.width,height:canvas.height},zones:LAYOUT.zones,clickZones:clickZonesRef.current.slice(0,1000)};// Run diagnostics after canvas is fully rendered\nrunDiagnostics();},[drawLane,drawHandP1,drawHandP2,drawInterventionsP1,drawInterventionsP2,drawPermanentSlotsP1,drawPermanentSlotsP2,drawInstantSlots,drawInfoPanels,devMode,runDiagnostics]);const DRAW_LAYOUT_OVERLAY=false;// force off per new layout system\n// Load slot symbol images once\nuseEffect(()=>{const load=(key,src)=>{const img=new Image();img.onload=()=>{slotSymbolImgsRef.current.set(key,img);};img.onerror=()=>{console.warn('Failed to load slot icon',src);};img.src=src;};// load all slot icons\nload('public',publicSymbolUrl);load('sofort',sofortSymbolUrl);load('dauerhaft',dauerhaftSymbolUrl);load('government',governmentSymbolUrl);load('intervention',interventionSymbolUrl);// ensure first draw\nrequestAnimationFrame(draw);},[draw]);// Redraw when game state or selection changes\nuseEffect(()=>{requestAnimationFrame(draw);},[gameState,selectedHandIndex,draw]);// Continuous render loop to keep canvas updated without relying on external state refs\nuseEffect(()=>{let frame;const loop=()=>{draw();frame=requestAnimationFrame(loop);};frame=requestAnimationFrame(loop);return()=>cancelAnimationFrame(frame);},[draw]);const handleCardClick=useCallback(data=>{// Hand-Klick\nif(data.type==='hand_p1'){var _data$card$uid,_data$card,_data$card2,_gameState$hands;const uid=(_data$card$uid=(_data$card=data.card)===null||_data$card===void 0?void 0:_data$card.uid)!==null&&_data$card$uid!==void 0?_data$card$uid:(_data$card2=data.card)===null||_data$card2===void 0?void 0:_data$card2.id;const stateHand=((_gameState$hands=gameState.hands)===null||_gameState$hands===void 0?void 0:_gameState$hands[1])||[];const idxInState=stateHand.findIndex(c=>{var _c$uid3;return((_c$uid3=c.uid)!==null&&_c$uid3!==void 0?_c$uid3:c.id)===uid;});onCardClick(data);return;}// Slot-Klick\nif(data.type==='row_slot'){var _gameState$board$1$in,_gameState$board,_gameState$board$,_gameState$board$1$au,_gameState$board2,_gameState$board2$;const lane=data.lane;const cap=getLaneCapacity(lane);// Hole aktuelle Row-Länge aus gameState\nconst rowCards=lane==='public'?(_gameState$board$1$in=(_gameState$board=gameState.board)===null||_gameState$board===void 0?void 0:(_gameState$board$=_gameState$board[1])===null||_gameState$board$===void 0?void 0:_gameState$board$.innen)!==null&&_gameState$board$1$in!==void 0?_gameState$board$1$in:[]:(_gameState$board$1$au=(_gameState$board2=gameState.board)===null||_gameState$board2===void 0?void 0:(_gameState$board2$=_gameState$board2[1])===null||_gameState$board2$===void 0?void 0:_gameState$board2$.aussen)!==null&&_gameState$board$1$au!==void 0?_gameState$board$1$au:[];if(rowCards.length>=cap){// Optional: UI Feedback\nconsole.warn(\"Row \".concat(lane,\" is full (\").concat(rowCards.length,\"/\").concat(cap,\")\"));return;}onCardClick(data);return;}// Andere Klicks (empty_slot, board_card, etc.)\nonCardClick(data);},[gameState,onCardClick]);const handleClick=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);const mx=(e.clientX-rect.left-offsetX)/scale;const my=(e.clientY-rect.top-offsetY)/scale;const hit=clickZonesRef.current.find(z=>mx>=z.x&&mx<=z.x+z.w&&my>=z.y&&my<=z.y+z.h);if(hit)handleCardClick(hit.data);},[handleCardClick]);const handleMouseMove=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);const mx=(e.clientX-rect.left-offsetX)/scale;const my=(e.clientY-rect.top-offsetY)/scale;const hit=clickZonesRef.current.find(z=>mx>=z.x&&mx<=z.x+z.w&&my>=z.y&&my<=z.y+z.h);if(hit){var _hit$data$card;console.log('[hover]',hit.data.type,(_hit$data$card=hit.data.card)===null||_hit$data$card===void 0?void 0:_hit$data$card.name);onCardHover(_objectSpread(_objectSpread({},hit.data),{},{x:e.clientX,y:e.clientY}));}else{onCardHover(null);}},[onCardHover]);const handleWheel=useCallback(e=>{// only enable when player1 has more slots than visible\nconst handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;const zone=getZone('hand.player');if(!zone)return;if(handLen<=5)return;// nothing to scroll\n// Prevent page scrolling when over canvas\ne.preventDefault();// accumulate target offset (invert so wheel down moves cards up)\n// Each wheel step moves by 48px per delta unit\nconst delta=Math.sign(e.deltaY)*48;// compute slot height more robustly\nconst slots=computeSlotRects(zone);const slotH=slots&&slots.length>0?slots[0].h:zone.rectPx[3]/5;const visible=5;const maxOffset=-(Math.max(0,handLen-visible)*slotH);handScrollTargetRef.current=Math.max(Math.min(handScrollTargetRef.current-delta,0),maxOffset);},[gameState.hands]);const handleTouchStart=useCallback(e=>{if(!e.touches||e.touches.length===0)return;const handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;if(handLen<=5)return;isTouchingRef.current=true;const y=e.touches[0].clientY;touchStartYRef.current=y;lastTouchYRef.current=y;e.preventDefault();},[gameState.hands]);const handleTouchMove=useCallback(e=>{var _lastTouchYRef$curren;if(!isTouchingRef.current)return;if(!e.touches||e.touches.length===0)return;const y=e.touches[0].clientY;const last=(_lastTouchYRef$curren=lastTouchYRef.current)!==null&&_lastTouchYRef$curren!==void 0?_lastTouchYRef$curren:y;const dy=y-last;// positive when moving down\nlastTouchYRef.current=y;// invert so dragging up moves cards up\nconst delta=-dy;const handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;const zone=getZone('hand.player');if(!zone)return;const slots=computeSlotRects(zone);const slotH=slots&&slots.length>0?slots[0].h:zone.rectPx[3]/5;const visible=5;const maxOffset=-(Math.max(0,handLen-visible)*slotH);handScrollTargetRef.current=Math.max(Math.min(handScrollTargetRef.current+delta,0),maxOffset);e.preventDefault();},[gameState.hands]);const handleTouchEnd=useCallback(e=>{isTouchingRef.current=false;touchStartYRef.current=null;lastTouchYRef.current=null;},[]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:1920,height:1080,style:{display:'block',width:'100%',height:'100%',imageRendering:'auto'},onClick:handleClick,onMouseMove:handleMouseMove,onWheel:handleWheel,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd});};","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useVisualEffectsSafe","LAYOUT","getZone","computeSlotRects","getUiTransform","getLaneCapacity","getPublicRects","getGovernmentRects","sortHandCards","getCardImagePath","influenceIconUrl","publicSymbolUrl","sofortSymbolUrl","dauerhaftSymbolUrl","governmentSymbolUrl","interventionSymbolUrl","jsx","_jsx","GameCanvas","_ref","gameState","selectedHandIndex","onCardClick","onCardHover","devMode","canvasRef","visualEffects","clickZonesRef","handScrollTargetRef","handScrollCurrentRef","handScrollEnabledRef","touchStartYRef","lastTouchYRef","isTouchingRef","backgroundImageRef","imageCacheRef","Map","influenceImgRef","influenceAnimRef","prevInfluencesRef","slotSymbolImgsRef","drawSlotIconWithPulse","ctx","img","x","y","w","h","phase","arguments","length","undefined","complete","now","performance","base","pulseRange","period","pulse","Math","sin","save","globalAlpha","drawImage","grad","createLinearGradient","addColorStop","concat","globalCompositeOperation","fillStyle","fillRect","restore","e","Image","src","current","drawCardAt","card","size","_shield","selected","showAPCost","player","extraAlpha","_uid","uid","id","list","playAnimsRef","window","__pc_play_anims","anim","find","a","p","min","max","started","duration","pow","dx","dy","s","floor","cached","get","onload","set","kind","_influence","barH","fontSize","font","textAlign","textBaseline","fillText","influence","protected","shield","deactivated","_influence2","badgeHeight","badgeWidth","badgeX","badgeY","beginPath","roundRect","fill","strokeStyle","lineWidth","strokeRect","getSlotDisplayName","zoneId","index","slotNumber","includes","drawLane","lane","clickable","zone","slots","arr","board","forEach","idx","bgColor","isSelected","hands","clickZone","textY","name","push","_objectSpread","data","type","slotName","drawHandP1","hand","target","offsetY","round","i","originalIndex","findIndex","c","isSel","sx","sy","drawHandP2","rectPx","drawInterventionsP1","traps","zx","zy","zw","zh","drawInterventionsP2","drawSingleSlot","clickType","slot","drawPermanentSlotsP1","permanentSlots","government","public","drawPermanentSlotsP2","drawInstantSlots","sofortPlayerCard","sofort","sofortOppCard","getActiveKeywordsAndSubcategories","allCards","innen","aussen","filter","keywords","Set","subcategories","tag","add","publicCard","oligarchNames","platformNames","movementNames","ngoNames","intelligenceNames","mediaNames","Array","from","drawInfoPanels","govPanelX","govPanelY","govPanelW","govPanelH","keyword","pubPanelX","pubPanelY","pubPanelW","pubPanelH","subcategory","displayName","substring","runDiagnostics","handZones","z","uiUIDs","map","_z$data$card$uid","Boolean","stateHand","stateUIDs","_c$uid","missingInState","u","missingInUI","_politicardDebug","mismatch","ts","Date","uiCount","stateCount","stack","Error","__politicardDebug","slice","console","warn","error","draw","_LAYOUT$background","_LAYOUT$background2","canvas","getContext","currSnapshot","collect","_c$uid2","_c$influence","String","Object","keys","_currSnapshot$uid","_prevInfluencesRef$cu","curr","prev","delta","start","amount","clearRect","width","height","background","enabled","scale","offsetX","translate","opponentPublicRects","opponentGovRects","permGovZoneOpp","ox","oy","ow","oh","permPubZoneOpp","ox2","oy2","ow2","oh2","playerPublicRects","playerGovRects","permGovZone","permPubZone","x2","y2","w2","h2","instantPlayerZone","interventionsZone","particlesRef","popsRef","ripplesRef","apLabelsRef","reducedMotion","parts","age","life","splice","vy","gravity","vx","t","color","arc","PI","pops","pop","eased","_z$data$card$uid2","ripples","r","radius","g","createRadialGradient","cx","cy","showAp","_apSpawned","apX","apY","text","apl","l","anims","_z$data$card$uid3","maxPulse","totalAmount","remaining","delete","ringRadius","ringX","ringY","ceil","stroke","labelX","labelY","random","now2","abs","rgbTeal","rgbBurg","rgbPurple","rgbYellow","rgbOrange","slotType","dt","alpha","lw","toFixed","uiTransform","canvasSize","zones","clickZones","DRAW_LAYOUT_OVERLAY","load","key","onerror","requestAnimationFrame","frame","loop","cancelAnimationFrame","handleCardClick","_data$card$uid","_data$card","_data$card2","_gameState$hands","idxInState","_c$uid3","_gameState$board$1$in","_gameState$board","_gameState$board$","_gameState$board$1$au","_gameState$board2","_gameState$board2$","cap","rowCards","handleClick","rect","getBoundingClientRect","mx","clientX","left","my","clientY","top","hit","handleMouseMove","_hit$data$card","log","handleWheel","handLen","preventDefault","sign","deltaY","slotH","visible","maxOffset","handleTouchStart","touches","handleTouchMove","_lastTouchYRef$curren","last","handleTouchEnd","ref","style","display","imageRendering","onClick","onMouseMove","onWheel","onTouchStart","onTouchMove","onTouchEnd"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/GameCanvas.tsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { useVisualEffects, useVisualEffectsSafe } from '../context/VisualEffectsContext';\nimport { GameState, Card, PoliticianCard, Player, Lane } from '../types/game';\nimport { LAYOUT, getZone, computeSlotRects, getUiTransform, getLaneCapacity, getPublicRects, getGovernmentRects, getSofortRect } from '../ui/layout';\nimport { drawCardImage, sortHandCards } from '../utils/gameUtils';\nimport { getNetApCost } from '../utils/ap';\nimport { getCardImagePath } from '../data/gameData';\nimport influenceIconUrl from '../assets/icons/influence.svg';\nimport publicSymbolUrl from '../assets/icons/public_symbol.png';\nimport sofortSymbolUrl from '../assets/icons/sofort_initiative_symbol.png';\nimport dauerhaftSymbolUrl from '../assets/icons/dauerhaft_initative.png';\nimport governmentSymbolUrl from '../assets/icons/government_symbol.png';\nimport interventionSymbolUrl from '../assets/icons/intervention_symbol.png';\n\ninterface GameCanvasProps {\n  gameState: GameState;\n  selectedHandIndex: number | null;\n  onCardClick: (data: any) => void;\n  onCardHover: (data: any) => void;\n  devMode?: boolean; // 🔧 DEV MODE: Show P2 hand when true\n}\n\n\n\nexport const GameCanvas: React.FC<GameCanvasProps> = ({\n  gameState,\n  selectedHandIndex,\n  onCardClick,\n  onCardHover,\n  devMode = false,\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const visualEffects = useVisualEffectsSafe();\n  const clickZonesRef = useRef<Array<{ x: number; y: number; w: number; h: number; data: any }>>([]);\n  // Smooth vertical scroll for P1 hand when it has more than visible slots\n  const handScrollTargetRef = useRef<number>(0);\n  const handScrollCurrentRef = useRef<number>(0);\n  const handScrollEnabledRef = useRef<boolean>(true);\n  // Touch handling refs\n  const touchStartYRef = useRef<number | null>(null);\n  const lastTouchYRef = useRef<number | null>(null);\n  const isTouchingRef = useRef<boolean>(false);\n  const backgroundImageRef = useRef<HTMLImageElement | null>(null);\n  const imageCacheRef = useRef<Map<string, HTMLImageElement>>(new Map());\n  const influenceImgRef = useRef<HTMLImageElement | null>(null);\n  // Animation state for visual influence changes: Map<uid, Array<Anim>>\n  const influenceAnimRef = useRef<Map<string, Array<{ start: number; duration: number; amount: number }>>>(new Map());\n  // Previous per-card influence snapshot to detect increases\n  const prevInfluencesRef = useRef<Record<string, number>>({});\n  // Slot symbol images\n  const slotSymbolImgsRef = useRef<Map<string, HTMLImageElement>>(new Map());\n\n  // Helper: draw slot icons with uniform pulsing opacity and a light reflection\n  const drawSlotIconWithPulse = useCallback((ctx: CanvasRenderingContext2D, img: HTMLImageElement | undefined, x: number, y: number, w: number, h: number, phase = 0) => {\n    if (!img || !img.complete) return;\n    try {\n      const now = performance.now();\n      const base = 0.10; // base opacity\n      const pulseRange = 0.08; // pulse amplitude (-> up to base + pulseRange)\n      const period = 700; // ms\n      const pulse = base + pulseRange * (0.5 + 0.5 * Math.sin(now / period + phase));\n\n      // draw icon with pulsing alpha\n      ctx.save();\n      ctx.globalAlpha = pulse;\n      ctx.drawImage(img, x, y, w, h);\n\n      // subtle reflection: gradient overlay on top half\n      const grad = ctx.createLinearGradient(x, y, x, y + h * 0.5);\n      grad.addColorStop(0, `rgba(255,255,255,${0.18 * pulse})`);\n      grad.addColorStop(1, `rgba(255,255,255,0)`);\n      ctx.globalCompositeOperation = 'lighter';\n      ctx.fillStyle = grad as any;\n      ctx.fillRect(x, y, w, h * 0.5);\n\n      ctx.restore();\n    } catch (e) {\n      // silent fallback\n    }\n  }, []);\n\n  // Load influence icon once\n  useEffect(() => {\n    const img = new Image();\n    img.src = influenceIconUrl;\n    influenceImgRef.current = img;\n  }, []);\n\n\n  const drawCardAt = useCallback((\n    ctx: CanvasRenderingContext2D,\n    card: Card,\n    x: number,\n    y: number,\n    size: number,\n    selected: boolean = false,\n    showAPCost: boolean = false,\n    player?: Player\n  ) => {\n    // Apply per-card fade-in if a play animation is active for this uid\n    let extraAlpha = 1;\n    try {\n      const uid = (card as any).uid ?? (card as any).id;\n      const list = (visualEffects && visualEffects.playAnimsRef && visualEffects.playAnimsRef.current) || (window as any).__pc_play_anims || [];\n      const anim = list.find((a: any) => a.uid === uid);\n      if (anim) {\n        const p = Math.min(1, Math.max(0, (performance.now() - anim.started) / anim.duration));\n        // ease-out\n        extraAlpha = Math.pow(p, 2);\n      }\n    } catch (e) {}\n    let dx = x, dy = y, s = size;\n    if (selected) {\n      s = Math.floor(size * 1.05);\n      dx = x - Math.floor((s - size) / 2);\n      dy = y - Math.floor((s - size) / 2);\n    }\n\n    // Note: pulse overlay is drawn at top layer after all cards are rendered\n\n    // Draw card image with caching to prevent flicker in continuous loop\n    const src = getCardImagePath(card, 'ui');\n    const cached = imageCacheRef.current.get(src);\n    ctx.save();\n    ctx.globalAlpha = extraAlpha;\n    if (cached && cached.complete) {\n      ctx.drawImage(cached, dx, dy, s, s);\n    } else {\n      const img = new Image();\n      img.onload = () => {\n        imageCacheRef.current.set(src, img);\n        // Note: onload happens async; draw will occur on next frame\n        // don't draw here into stale ctx\n      };\n      img.src = src;\n      imageCacheRef.current.set(src, img);\n    }\n\n    ctx.restore();\n\n    // Status-Indikatoren (für alle Board-Karten)\n    // Einfluss-Wert dauerhaft anzeigen (oben links) – nur für Regierungskarten\n    if ((card as any).kind === 'pol') {\n      const barH = Math.max(20, Math.floor(s * 0.12) + 6);\n      ctx.fillStyle = 'rgba(0,0,0,0.6)';\n      ctx.fillRect(dx, dy + s - barH, s, barH);\n\n      ctx.fillStyle = '#ffffff';\n      const fontSize = Math.floor(s * 0.12);\n      ctx.font = `bold ${fontSize}px sans-serif`;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${(card as any).influence ?? 0}`, dx + 8, dy + s - barH / 2);\n    }\n    // Schutz-Status (blauer Punkt)\n    if ((card as any).protected || ((card as any).shield ?? 0) > 0) {\n      ctx.fillStyle = '#1da1f2';\n      ctx.fillRect(dx + s - 22, dy + 6, 16, 16);\n    }\n    // Deaktiviert-Status (roter Punkt)\n    if ((card as any).deactivated) {\n      ctx.fillStyle = '#b63838';\n      ctx.fillRect(dx + s - 22, dy + 26, 16, 16);\n    }\n\n    // Einfluss-Badge für Handkarten oben rechts (nur Regierungskarten)\n    if (showAPCost && player && (card as any).kind === 'pol') {\n      const badgeHeight = Math.max(16, Math.floor(s * 0.12));\n      const badgeWidth = badgeHeight * 2;\n      const badgeX = dx + s - badgeWidth - 6;\n      const badgeY = dy + 6;\n\n      // Semi-transparent dunkler Hintergrund\n      ctx.fillStyle = 'rgba(0,0,0,0.6)';\n      ctx.beginPath();\n      ctx.roundRect(badgeX, badgeY, badgeWidth, badgeHeight, badgeHeight / 2);\n      ctx.fill();\n\n      // Influence icon (90% opacity) links im Badge\n      if (influenceImgRef.current && influenceImgRef.current.complete) {\n        ctx.globalAlpha = 0.9;\n        ctx.drawImage(influenceImgRef.current, badgeX + 2, badgeY + 2, badgeHeight - 4, badgeHeight - 4);\n        ctx.globalAlpha = 1;\n      }\n\n      // Influence number rechts im Badge\n      ctx.fillStyle = '#ffffff';\n      ctx.font = `bold ${Math.floor(badgeHeight * 0.5)}px sans-serif`;\n      ctx.textAlign = 'right';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${(card as any).influence ?? 0}`, badgeX + badgeWidth - 4, badgeY + badgeHeight / 2);\n\n      // Reset align\n      ctx.textAlign = 'start';\n      ctx.textBaseline = 'alphabetic';\n    }\n\n    // NOTE: influence overlays (pulse + labels) are drawn in a separate pass\n\n    // Auswahl-Rahmen\n    if (selected) {\n      ctx.strokeStyle = '#61dafb';\n      ctx.lineWidth = 3;\n      ctx.strokeRect(dx + 1, dy + 1, s - 2, s - 2);\n      ctx.lineWidth = 1;\n    }\n\n    // Return exact 256x256 click zone over the card\n    // Since all cards are 256x256, the click zone should match exactly\n    return { x: dx, y: dy, w: 256, h: 256 };\n  }, [gameState]);\n\n\n\n\n\n\n\n  // Slot-Benennungs-Funktion basierend auf Glossar\n  const getSlotDisplayName = useCallback((zoneId: string, index: number, player: Player): string => {\n    const slotNumber = index + 1;\n\n    if (zoneId.includes('government')) {\n      if (zoneId.includes('player')) {\n        return `Regierungsreihe Slot ${slotNumber}`;\n      } else {\n        return `Gegner Regierung Slot ${slotNumber}`;\n      }\n    } else if (zoneId.includes('public')) {\n      if (zoneId.includes('player')) {\n        return `Öffentlichkeitsreihe Slot ${slotNumber}`;\n      } else {\n        return `Gegner Öffentlichkeit Slot ${slotNumber}`;\n      }\n    } else if (zoneId.includes('permanent.government')) {\n      if (zoneId.includes('player')) {\n        return 'Regierung Spezial-Slot';\n      } else {\n        return 'Gegner Regierung Spezial-Slot';\n      }\n    } else if (zoneId.includes('permanent.public')) {\n      if (zoneId.includes('player')) {\n        return 'Öffentlichkeit Spezial-Slot';\n      } else {\n        return 'Gegner Öffentlichkeit Spezial-Slot';\n      }\n    } else if (zoneId.includes('instant')) {\n      if (zoneId.includes('player')) {\n        return 'Sofort-Slot';\n      } else {\n        return 'Gegner Sofort-Slot';\n      }\n    } else if (zoneId.includes('hand')) {\n      return 'Hand';\n    } else if (zoneId.includes('interventions')) {\n      return 'Interventionen';\n    }\n\n    return `Slot ${slotNumber}`;\n  }, []);\n\n  const drawLane = useCallback((\n    ctx: CanvasRenderingContext2D,\n    zoneId: string,\n    player: Player,\n    lane: Lane,\n    clickable: boolean\n  ) => {\n    const zone = getZone(zoneId);\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n    const arr = gameState.board[player][lane];\n\n    slots.forEach((s, idx) => {\n      const card = arr[idx];\n\n      // Hintergrundfarbe nach Kategorie\n      let bgColor = 'rgba(0,0,0,0.1)'; // Standard\n      if (zoneId.includes('government')) {\n        bgColor = 'rgba(255, 197, 0, 0.15)'; // Hellgelb für Regierung\n      } else if (zoneId.includes('public')) {\n        bgColor = 'rgba(0, 255, 0, 0.15)'; // Hellgrün für Öffentlichkeit\n      }\n\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(s.x, s.y, s.w, s.h);\n\n      // Slot-Rahmen\n      ctx.strokeStyle = 'rgba(255,255,255,0.06)';\n      ctx.strokeRect(s.x + 0.5, s.y + 0.5, s.w - 1, s.h - 1);\n\n      if (card) {\n        const isSelected = player === 1 && selectedHandIndex !== null && gameState.hands[1][selectedHandIndex] === card;\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, isSelected, false);\n\n        // Kartenname unter dem Slot anzeigen\n        ctx.fillStyle = 'rgba(255,255,255,0.9)';\n        ctx.font = 'bold 12px sans-serif';\n        ctx.textAlign = 'center';\n        const textY = s.y + s.h + 16;\n        ctx.fillText(card.name, s.x + s.w/2, textY);\n\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'board_card', player, lane, index: idx, card }\n        });\n      } else if (clickable && gameState.current === player) {\n        // Slot-Benennung anzeigen (für den aktuellen Spieler)\n        const slotName = getSlotDisplayName(zoneId, idx, player);\n        ctx.fillStyle = 'rgba(255,255,255,0.6)';\n        ctx.font = '11px sans-serif';\n        ctx.textAlign = 'center';\n        const textY = s.y + s.h/2;\n        ctx.fillText(slotName, s.x + s.w/2, textY);\n\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', lane, index: idx }\n        });\n      }\n    });\n  }, [gameState, selectedHandIndex, drawCardAt, getSlotDisplayName]);\n\n  const drawHandP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const hand = sortHandCards(gameState.hands[1]);\n    const zone = getZone('hand.player');\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n    // Apply smooth offset (lerp towards target)\n    const target = handScrollTargetRef.current;\n    handScrollCurrentRef.current += (target - handScrollCurrentRef.current) * 0.15; // easing\n    const offsetY = Math.round(handScrollCurrentRef.current);\n    slots.forEach((s: { x: number; y: number; w: number; h: number }, i: number) => {\n      const card = hand[i];\n      if (!card) return;\n      // Find original index in unsorted hand for click handling\n      const originalIndex = gameState.hands[1].findIndex(c => c.uid === card.uid);\n      const isSel = selectedHandIndex === originalIndex;\n      // apply vertical offset\n      const sx = s.x;\n      const sy = s.y + offsetY;\n      const clickZone = drawCardAt(ctx, card, sx, sy, s.w, isSel, true, 1); // Show AP cost for player 1 hand\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'hand_p1', index: originalIndex, card } });\n    });\n  }, [gameState.hands, selectedHandIndex, drawCardAt]);\n\n      // 🔧 DEV MODE: Player 2 Hand (rechts unten, kompakter)\n  const drawHandP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const hand = sortHandCards(gameState.hands[2]);\n    const zone = getZone('hand.opponent');\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n\n    // Hintergrund für P2 Hand\n    const [x, y, w, h] = zone.rectPx;\n    ctx.fillStyle = 'rgba(255, 100, 100, 0.15)'; // Rötlicher Hintergrund für P2\n    ctx.fillRect(x, y, w, h);\n    ctx.strokeStyle = 'rgba(255, 100, 100, 0.3)';\n    ctx.strokeRect(x + 0.5, y + 0.5, w - 1, h - 1);\n\n    // Label für P2 Hand\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = 'bold 14px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Player 2 Hand', x + w/2, y - 8);\n\n    slots.forEach((s: { x: number; y: number; w: number; h: number }, i: number) => {\n      const card = hand[i];\n      if (!card) return;\n      // Find original index in unsorted hand for click handling\n      const originalIndex = gameState.hands[2].findIndex(c => c.uid === card.uid);\n      const isSel = gameState.current === 2 && selectedHandIndex === originalIndex;\n      const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, isSel, true, 2); // Show AP cost for player 2 hand\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'hand_p2', index: originalIndex, card } });\n    });\n  }, [gameState, selectedHandIndex, drawCardAt]);\n  // Interventions strip (player traps)\n  const drawInterventionsP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const traps = gameState.traps[1] || [];\n    const zone = getZone('interventions.player');\n    if (!zone) return;\n\n    // Single intervention slot\n    const [zx, zy, zw, zh] = zone.rectPx;\n    const card = traps[0]; // Only first trap\n\n    // Hintergrund für Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.15)'; // Lavendelfarben für Interventionen\n    ctx.fillRect(zx, zy, zw, zh);\n    ctx.strokeStyle = 'rgba(200, 160, 255, 0.3)';\n    ctx.strokeRect(zx + 0.5, zy + 0.5, zw - 1, zh - 1);\n\n    // Slot-Benennung für Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.8)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Intervention', zx + 8, zy + zh - 6);\n\n    if (card) {\n      const clickZone = drawCardAt(ctx, card, zx, zy, zw, false, false);\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'trap_p1', index: 0, card } });\n    }\n  }, [gameState.traps, drawCardAt]);\n\n  // Interventions strip (opponent traps)\n  const drawInterventionsP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const traps = gameState.traps[2] || [];\n    const zone = getZone('interventions.opponent');\n    if (!zone) return;\n\n    // Single intervention slot\n    const [zx, zy, zw, zh] = zone.rectPx;\n    const card = traps[0]; // Only first trap\n\n    // Hintergrund für Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.15)'; // Lavendelfarben für Interventionen\n    ctx.fillRect(zx, zy, zw, zh);\n    ctx.strokeStyle = 'rgba(200, 160, 255, 0.3)';\n    ctx.strokeRect(zx + 0.5, zy + 0.5, zw - 1, zh - 1);\n\n    // Slot-Benennung für Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.8)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Intervention', zx + 8, zy + zh - 6);\n\n    if (card) {\n      const clickZone = drawCardAt(ctx, card, zx, zy, zw, false, false);\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'trap_p2', index: 0, card } });\n    }\n  }, [gameState.traps, drawCardAt]);\n\n  // Single slot drawing function\n  const drawSingleSlot = useCallback((\n    ctx: CanvasRenderingContext2D,\n    zoneId: string,\n    card: Card | null,\n    clickType: string,\n    player: Player\n  ) => {\n    const zone = getZone(zoneId);\n    if (!zone) return;\n    const [x, y, w, h] = zone.rectPx;\n\n    // Hintergrundfarbe nach Kategorie\n    let bgColor = 'rgba(0,0,0,0.1)'; // Standard\n    if (zoneId.includes('government')) {\n      bgColor = 'rgba(255, 197, 0, 0.15)'; // Hellgelb für Regierung\n    } else if (zoneId.includes('public')) {\n      bgColor = 'rgba(0, 255, 0, 0.15)'; // Hellgrün für Öffentlichkeit\n    } else if (zoneId.includes('instant')) {\n      bgColor = 'rgba(127, 116, 91, 0.15)'; // Neutral für Sofort-Slots\n    } else if (zoneId.includes('permanent')) {\n      // Unterscheide zwischen government und public permanent slots\n      if (zoneId.includes('government')) {\n        bgColor = 'rgba(255, 197, 0, 0.15)';\n      } else if (zoneId.includes('public')) {\n        bgColor = 'rgba(0, 255, 0, 0.15)';\n      }\n    }\n\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(x, y, w, h);\n\n    // Draw slot border\n    ctx.strokeStyle = 'rgba(255,255,255,0.06)';\n    ctx.strokeRect(x + 0.5, y + 0.5, w - 1, h - 1);\n\n    if (card) {\n      const isSelected = player === 1 && selectedHandIndex !== null && gameState.hands[1][selectedHandIndex] === card;\n      const clickZone = drawCardAt(ctx, card, x, y, w, isSelected, false);\n\n      // Kartenname unter dem Slot anzeigen\n      ctx.fillStyle = 'rgba(255,255,255,0.9)';\n      ctx.font = 'bold 12px sans-serif';\n      ctx.textAlign = 'center';\n      const textY = y + h + 16;\n      ctx.fillText(card.name, x + w/2, textY);\n\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'slot_card', slot: clickType, card } });\n\n      // 🔧 NEU: Sofort-Initiative-Slots sind klickbar für Aktivierung\n      if (clickType === 'instant' && gameState.current === player) {\n        clickZonesRef.current.push({\n          x, y, w, h,\n          data: { type: 'activate_instant', player, card }\n        });\n      }\n    } else if (gameState.current === player) {\n      // Slot-Benennung für leere Slots anzeigen (für den aktuellen Spieler)\n      const slotName = getSlotDisplayName(zoneId, 0, player);\n      ctx.fillStyle = 'rgba(255,255,255,0.6)';\n      ctx.font = '11px sans-serif';\n      ctx.textAlign = 'center';\n      const textY = y + h/2;\n      ctx.fillText(slotName, x + w/2, textY);\n\n      clickZonesRef.current.push({ x, y, w, h, data: { type: 'empty_slot', slot: clickType } });\n    }\n  }, [selectedHandIndex, gameState, drawCardAt, getSlotDisplayName]);\n\n  // Draw permanent slots for player\n  const drawPermanentSlotsP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    drawSingleSlot(ctx, 'slot.permanent.government.player', gameState.permanentSlots[1].government, 'permanent_government', 1);\n    drawSingleSlot(ctx, 'slot.permanent.public.player', gameState.permanentSlots[1].public, 'permanent_public', 1);\n  }, [gameState.permanentSlots, drawSingleSlot]);\n\n  // Draw permanent slots for opponent\n  const drawPermanentSlotsP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    drawSingleSlot(ctx, 'slot.permanent.government.opponent', gameState.permanentSlots[2].government, 'permanent_government', 2);\n    drawSingleSlot(ctx, 'slot.permanent.public.opponent', gameState.permanentSlots[2].public, 'permanent_public', 2);\n  }, [gameState.permanentSlots, drawSingleSlot]);\n\n  // Draw instant slots\n  const drawInstantSlots = useCallback((ctx: CanvasRenderingContext2D) => {\n    // Sofort-Initiative-Slots aus dem Board zeichnen\n    const sofortPlayerCard = gameState.board[1].sofort[0];\n    const sofortOppCard = gameState.board[2].sofort[0];\n\n    drawSingleSlot(ctx, 'slot.instant.player', sofortPlayerCard, 'instant', 1);\n    drawSingleSlot(ctx, 'slot.instant.opponent', sofortOppCard, 'instant', 2);\n  }, [gameState.board, drawSingleSlot]);\n\n  // Aktive Schlüsselwörter und Unterkategorien ermitteln\n  const getActiveKeywordsAndSubcategories = useCallback((player: Player) => {\n    const board = gameState.board[player];\n    const permanentSlots = gameState.permanentSlots[player];\n    const allCards = [\n      ...board.innen,\n      ...board.aussen,\n      permanentSlots.government,\n      permanentSlots.public\n    ].filter(c => c && c.kind === 'pol') as PoliticianCard[];\n\n    const keywords = new Set<string>();\n    const subcategories = new Set<string>();\n\n    allCards.forEach(card => {\n      if (!card.deactivated) {\n        // Regierungskarten-Schlüsselwörter\n        if (card.tag === 'Leadership') {\n          keywords.add('Leadership');\n        }\n        if (card.tag === 'Diplomat') {\n          keywords.add('Diplomat');\n        }\n\n        // Öffentlichkeits-Unterkategorien (für Karten in Öffentlichkeitsreihe)\n        if (board.innen.includes(card)) {\n          const publicCard = card as any;\n          if (publicCard.tag) {\n            // Oligarch\n            const oligarchNames = ['Elon Musk', 'Bill Gates', 'George Soros', 'Warren Buffett', 'Mukesh Ambani', 'Jeff Bezos', 'Alisher Usmanov', 'Gautam Adani', 'Jack Ma', 'Zhang Yiming', 'Roman Abramovich'];\n            if (oligarchNames.includes(publicCard.name)) {\n              subcategories.add('Oligarch');\n            }\n\n            // Plattform\n            const platformNames = ['Mark Zuckerberg', 'Tim Cook', 'Sam Altman', 'Jack Ma'];\n            if (platformNames.includes(publicCard.name)) {\n              subcategories.add('Plattform');\n            }\n\n            // Bewegung\n            const movementNames = ['Greta Thunberg', 'Malala Yousafzai', 'Ai Weiwei', 'Alexei Navalny'];\n            if (movementNames.includes(publicCard.name)) {\n              subcategories.add('Bewegung');\n            }\n\n            // NGO/Think-Tank\n            const ngoNames = ['Bill Gates', 'George Soros', 'Jennifer Doudna', 'Noam Chomsky', 'Anthony Fauci'];\n            if (ngoNames.includes(publicCard.name)) {\n              subcategories.add('NGO/Think-Tank');\n            }\n\n            // Intelligenz\n            const intelligenceNames = ['Jennifer Doudna', 'Noam Chomsky', 'Edward Snowden', 'Julian Assange', 'Yuval Noah Harari', 'Ai Weiwei', 'Alexei Navalny', 'Anthony Fauci'];\n            if (intelligenceNames.includes(publicCard.name)) {\n              subcategories.add('Intelligenz');\n            }\n\n            // Medien\n            const mediaNames = ['Oprah Winfrey'];\n            if (mediaNames.includes(publicCard.name)) {\n              subcategories.add('Medien');\n            }\n          }\n        }\n      }\n    });\n\n    return {\n      keywords: Array.from(keywords),\n      subcategories: Array.from(subcategories)\n    };\n  }, [gameState]);\n\n  // Info-Panels zeichnen\n  const drawInfoPanels = useCallback((ctx: CanvasRenderingContext2D) => {\n    const { keywords, subcategories } = getActiveKeywordsAndSubcategories(1);\n\n    // Panel für Regierungsschlüsselwörter (rechts neben Regierungsslots)\n    const govPanelX = 1640 + 256 + 20; // Nach dem letzten permanenten Slot\n    const govPanelY = 300; // Auf Höhe der Regierungsslots\n    const govPanelW = 120;\n    const govPanelH = 256;\n\n    // Regierungspanel Hintergrund\n    ctx.fillStyle = 'rgba(255, 197, 0, 0.15)';\n    ctx.fillRect(govPanelX, govPanelY, govPanelW, govPanelH);\n    ctx.strokeStyle = 'rgba(255, 197, 0, 0.3)';\n    ctx.strokeRect(govPanelX + 0.5, govPanelY + 0.5, govPanelW - 1, govPanelH - 1);\n\n    // Regierungspanel Titel\n    ctx.fillStyle = 'rgba(255, 197, 0, 0.9)';\n    ctx.font = 'bold 12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Regierung', govPanelX + govPanelW/2, govPanelY + 16);\n\n    // Schlüsselwörter auflisten\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    if (keywords.length > 0) {\n      keywords.forEach((keyword, idx) => {\n        ctx.fillText(`• ${keyword}`, govPanelX + 8, govPanelY + 36 + idx * 16);\n      });\n    } else {\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.fillText('Keine aktiven', govPanelX + 8, govPanelY + 36);\n      ctx.fillText('Schlüsselwörter', govPanelX + 8, govPanelY + 52);\n    }\n\n    // Panel für Öffentlichkeits-Unterkategorien (rechts neben Öffentlichkeitsslots)\n    const pubPanelX = 1640 + 256 + 20;\n    const pubPanelY = 580; // Auf Höhe der Öffentlichkeitsslots\n    const pubPanelW = 120;\n    const pubPanelH = 256;\n\n    // Öffentlichkeitspanel Hintergrund\n    ctx.fillStyle = 'rgba(0, 255, 0, 0.15)';\n    ctx.fillRect(pubPanelX, pubPanelY, pubPanelW, pubPanelH);\n    ctx.strokeStyle = 'rgba(0, 255, 0, 0.3)';\n    ctx.strokeRect(pubPanelX + 0.5, pubPanelY + 0.5, pubPanelW - 1, pubPanelH - 1);\n\n    // Öffentlichkeitspanel Titel\n    ctx.fillStyle = 'rgba(0, 255, 0, 0.9)';\n    ctx.font = 'bold 12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Öffentlichkeit', pubPanelX + pubPanelW/2, pubPanelY + 16);\n\n    // Unterkategorien auflisten\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    if (subcategories.length > 0) {\n      subcategories.forEach((subcategory, idx) => {\n        const displayName = subcategory.length > 12 ? subcategory.substring(0, 10) + '...' : subcategory;\n        ctx.fillText(`• ${displayName}`, pubPanelX + 8, pubPanelY + 36 + idx * 16);\n      });\n    } else {\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.fillText('Keine aktiven', pubPanelX + 8, pubPanelY + 36);\n      ctx.fillText('Unterkategorien', pubPanelX + 8, pubPanelY + 52);\n    }\n  }, [getActiveKeywordsAndSubcategories]);\n\n  // Move diagnostics to draw callback to ensure they run after canvas is actually rendered\n  const runDiagnostics = useCallback(() => {\n    try {\n      const handZones = clickZonesRef.current.filter(z => z.data && z.data.type === 'hand_p1');\n      const uiUIDs = handZones.map(z => (z.data.card && (z.data.card.uid ?? z.data.card.id)) ).filter(Boolean);\n      const stateHand = gameState.hands && gameState.hands[1] ? gameState.hands[1] : [];\n      const stateUIDs = stateHand.map((c: any) => c.uid ?? c.id).filter(Boolean);\n\n      const missingInState = uiUIDs.filter((u: any) => !stateUIDs.includes(u));\n      const missingInUI = stateUIDs.filter((u: any) => !uiUIDs.includes(u));\n\n      // Only warn if there are cards in UI that don't exist in state (real error)\n      // Don't warn about missing UI cards due to limited slot capacity\n      if (missingInState.length > 0) {\n        const mismatch = {\n          ts: Date.now(),\n          uiCount: uiUIDs.length,\n          stateCount: stateUIDs.length,\n          uiUIDs,\n          stateUIDs,\n          missingInState,\n          missingInUI,\n          stack: (new Error('mismatch-stack')).stack\n        };\n        (window as any).__politicardDebug = {\n          ...(window as any).__politicardDebug,\n          mismatch: [ ...(window as any).__politicardDebug?.mismatch || [] ].slice(-19).concat([mismatch])\n        };\n        // Clear, then log to console so user can copy/paste trace\n        console.warn('POLITICARD DIAGNOSTIC: hand mismatch detected', mismatch);\n      }\n    } catch (e) {\n      // swallow diagnostic errors to avoid breaking rendering\n      console.error('Diagnostic error', e);\n    }\n  }, [gameState.hands]);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Detect influence increases and start animations\n    try {\n      const currSnapshot: Record<string, number> = {};\n      const collect = (c: any) => {\n        if (!c) return;\n        if ((c as any).kind !== 'pol') return;\n        const uid = c.uid ?? (c.id != null ? String(c.id) : null);\n        if (!uid) return;\n        currSnapshot[uid] = (c.influence ?? 0) as number;\n      };\n      // board rows\n      (gameState.board[1].aussen || []).forEach(collect);\n      (gameState.board[2].aussen || []).forEach(collect);\n      (gameState.board[1].innen || []).forEach(collect);\n      (gameState.board[2].innen || []).forEach(collect);\n      // permanent slots\n      collect(gameState.permanentSlots[1].government as any);\n      collect(gameState.permanentSlots[2].government as any);\n      collect(gameState.permanentSlots[1].public as any);\n      collect(gameState.permanentSlots[2].public as any);\n\n      const now = performance.now();\n      Object.keys(currSnapshot).forEach(uid => {\n        const curr = currSnapshot[uid] ?? 0;\n        const prev = prevInfluencesRef.current[uid] ?? curr;\n        if (curr > prev) {\n          const delta = curr - prev;\n          const list = influenceAnimRef.current.get(uid) || [];\n          list.push({ start: now, duration: 900, amount: delta });\n          influenceAnimRef.current.set(uid, list);\n        }\n        prevInfluencesRef.current[uid] = curr;\n      });\n    } catch (e) {\n      // ignore\n    }\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Clear click zones\n    clickZonesRef.current = [];\n\n    // Background: prefer PNG if configured\n    if (LAYOUT.background?.enabled && LAYOUT.background?.src) {\n      if (backgroundImageRef.current) {\n        ctx.drawImage(backgroundImageRef.current, 0, 0, canvas.width, canvas.height);\n      } else {\n        ctx.fillStyle = '#0c131b';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n    } else {\n      ctx.fillStyle = '#0c131b';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // Apply UI transform (new signature)\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    ctx.save();\n    ctx.translate(offsetX, offsetY);\n    ctx.scale(scale, scale);\n\n    // Draw opponent board (top rows) - clickable im Dev Mode\n    // Draw opponent board using new layout system\n    const opponentPublicRects = getPublicRects('opponent');\n    const opponentGovRects = getGovernmentRects('opponent');\n\n    // Draw opponent public slots\n    opponentPublicRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[2].innen[idx];\n      if (card) {\n        drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 2);\n      }\n      else {\n        // draw placeholder symbol for empty public slot\n        const img = slotSymbolImgsRef.current.get('public');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.4);\n      }\n    });\n\n    // Draw opponent government slots\n    opponentGovRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[2].aussen[idx];\n      if (card) {\n        drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 2);\n      }\n      else {\n        const img = slotSymbolImgsRef.current.get('government');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.1);\n      }\n    });\n\n    // Draw opponent permanent slots (show icons even when not current)\n    try {\n      const permGovZoneOpp = getZone('slot.permanent.government.opponent');\n      if (permGovZoneOpp) {\n        const card = gameState.permanentSlots[2].government;\n        const [ox, oy, ow, oh] = permGovZoneOpp.rectPx;\n        if (card) {\n          drawSingleSlot(ctx, 'slot.permanent.government.opponent', card, 'permanent_government', 2);\n        } else {\n          const img = slotSymbolImgsRef.current.get('dauerhaft');\n          drawSlotIconWithPulse(ctx, img, ox, oy, ow, oh, 0.3);\n        }\n      }\n    } catch (e) {}\n    try {\n      const permPubZoneOpp = getZone('slot.permanent.public.opponent');\n      if (permPubZoneOpp) {\n        const card = gameState.permanentSlots[2].public;\n        const [ox2, oy2, ow2, oh2] = permPubZoneOpp.rectPx;\n        if (card) {\n          drawSingleSlot(ctx, 'slot.permanent.public.opponent', card, 'permanent_public', 2);\n        } else {\n          const img = slotSymbolImgsRef.current.get('dauerhaft');\n          drawSlotIconWithPulse(ctx, img, ox2, oy2, ow2, oh2, 0.7);\n        }\n      }\n    } catch (e) {}\n\n    // Draw player board (middle rows)\n    // Draw player board using new layout system\n    const playerPublicRects = getPublicRects('player');\n    const playerGovRects = getGovernmentRects('player');\n\n    // Draw player public slots\n    playerPublicRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[1].innen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 1);\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'row_slot', player: 1, lane: 'innen', index: idx }\n        });\n      } else {\n        // Empty slot click zone and draw public symbol\n        // Draw unified pulsing icon for empty public slot\n        const img = slotSymbolImgsRef.current.get('public');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.4);\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', player: 1, lane: 'innen', index: idx }\n        });\n      }\n    });\n\n    // Draw player government slots\n    playerGovRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[1].aussen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 1);\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'row_slot', player: 1, lane: 'aussen', index: idx }\n        });\n      } else {\n        // Empty slot click zone and draw government symbol\n        const img = slotSymbolImgsRef.current.get('government');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.1);\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', player: 1, lane: 'aussen', index: idx }\n        });\n      }\n    });\n\n    // Draw player permanent slots (draw symbols if empty)\n    // permanent government\n    const permGovZone = getZone('slot.permanent.government.player');\n    if (permGovZone) {\n      const card = gameState.permanentSlots[1].government;\n      const [x, y, w, h] = permGovZone.rectPx;\n      if (card) {\n        drawSingleSlot(ctx, 'slot.permanent.government.player', card, 'permanent_government', 1);\n      } else {\n        // Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent gov slot)\n        const img = slotSymbolImgsRef.current.get('dauerhaft');\n        drawSlotIconWithPulse(ctx, img, x, y, w, h, 0.2);\n      }\n    }\n    // permanent public\n    const permPubZone = getZone('slot.permanent.public.player');\n    if (permPubZone) {\n      const card = gameState.permanentSlots[1].public;\n      const [x2, y2, w2, h2] = permPubZone.rectPx;\n      if (card) {\n        drawSingleSlot(ctx, 'slot.permanent.public.player', card, 'permanent_public', 1);\n      } else {\n        // Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent public slot)\n        const img = slotSymbolImgsRef.current.get('dauerhaft');\n        drawSlotIconWithPulse(ctx, img, x2, y2, w2, h2, 0.9);\n      }\n    }\n\n    // Draw instant slots (both players) and placeholder if empty\n    const instantPlayerZone = getZone('slot.instant.player');\n    if (instantPlayerZone) {\n      const card = gameState.board[1].sofort[0];\n      const [x, y, w, h] = instantPlayerZone.rectPx;\n      if (card) drawSingleSlot(ctx, 'slot.instant.player', card, 'instant', 1);\n      else {\n        // Use unified icon draw helper for instant slot\n        const img = slotSymbolImgsRef.current.get('sofort');\n        drawSlotIconWithPulse(ctx, img, x, y, w, h, 0.0);\n      }\n    }\n\n    // Draw interventions strip (player)\n    // We draw symbol if empty\n    const interventionsZone = getZone('interventions.player');\n    if (interventionsZone) {\n      const [zx, zy, zw, zh] = interventionsZone.rectPx;\n      const card = gameState.traps[1] && gameState.traps[1][0];\n      if (card) drawInterventionsP1(ctx);\n      else {\n        const img = slotSymbolImgsRef.current.get('intervention');\n        drawSlotIconWithPulse(ctx, img, zx, zy, zw, zh, 0.6);\n      }\n    }\n\n    // Draw interventions strip (opponent) - nur im Dev Mode\n    if (devMode) {\n      drawInterventionsP2(ctx);\n    }\n\n    // Draw hand (P1)\n    drawHandP1(ctx);\n\n    // 🔧 DEV MODE: Draw hand (P2) - nur im Dev Mode\n    if (devMode) {\n      drawHandP2(ctx);\n    }\n\n    // Draw info panels\n    drawInfoPanels(ctx);\n\n    // --- VISUAL EFFECTS: Particle bursts, card pop scale, initiative ripple & AP pop ---\n    try {\n      const now = performance.now();\n      const { particlesRef, popsRef, ripplesRef, apLabelsRef, reducedMotion } = (visualEffects || {}) as any;\n\n      const parts: any[] = particlesRef.current || [];\n      if (!reducedMotion) {\n        for (let i = parts.length - 1; i >= 0; i--) {\n          const p = parts[i];\n          const age = now - p.start;\n          if (age > p.life) {\n            parts.splice(i, 1);\n            continue;\n          }\n          p.vy += (p.gravity || 0.09);\n          p.x += p.vx;\n          p.y += p.vy;\n          const t = 1 - age / p.life;\n          ctx.save();\n          ctx.globalAlpha = Math.max(0, Math.min(1, t));\n          ctx.fillStyle = p.color || '#ffd166';\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, (p.size || 4) * t, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n        }\n        particlesRef.current = parts;\n\n        const pops: any[] = popsRef.current || [];\n        pops.forEach((pop) => {\n          const p = Math.min(1, Math.max(0, (now - pop.started) / pop.duration));\n          const eased = 1 + 0.12 * (1 - Math.pow(1 - p, 3));\n          const zone = clickZonesRef.current.find(z => z.data && z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === pop.uid));\n          if (!zone) return;\n          ctx.save();\n          ctx.translate(zone.x + zone.w / 2, zone.y + zone.h / 2);\n          ctx.scale(eased, eased);\n          ctx.globalAlpha = 0.12 * (1 - p);\n          ctx.fillStyle = '#ffffff';\n          ctx.fillRect(-zone.w / 2, -zone.h / 2, zone.w, zone.h);\n          ctx.restore();\n        });\n\n        const ripples: any[] = ripplesRef.current || [];\n        for (let i = ripples.length - 1; i >= 0; i--) {\n          const r = ripples[i];\n          const p = Math.min(1, Math.max(0, (now - r.started) / r.duration));\n          if (p >= 1) { ripples.splice(i, 1); continue; }\n          const radius = r.radius * (0.8 + 1.8 * p);\n          ctx.save();\n          const g = ctx.createRadialGradient(r.cx, r.cy, radius * 0.1, r.cx, r.cy, radius);\n          g.addColorStop(0, `rgba(255,255,255,${0.12 * (1 - p)})`);\n          g.addColorStop(1, `rgba(255,255,255,0)`);\n          ctx.fillStyle = g as any;\n          ctx.beginPath();\n          ctx.arc(r.cx, r.cy, radius, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n\n          if (r.showAp && !r._apSpawned) {\n            apLabelsRef.current = apLabelsRef.current || [];\n            apLabelsRef.current.push({ x: r.apX, y: r.apY, started: now, duration: 800, text: '+1' });\n            r._apSpawned = true;\n          }\n        }\n        ripplesRef.current = ripples;\n\n        const apl: any[] = apLabelsRef.current || [];\n        for (let i = apl.length - 1; i >= 0; i--) {\n          const l = apl[i];\n          const p = Math.min(1, Math.max(0, (now - l.started) / l.duration));\n          if (p >= 1) { apl.splice(i, 1); continue; }\n          ctx.save();\n          ctx.globalAlpha = 1 - p;\n          ctx.fillStyle = '#ffdd57';\n          ctx.font = 'bold 22px sans-serif';\n          ctx.textAlign = 'center';\n          ctx.fillText(l.text, l.x, l.y - 20 * p);\n          ctx.restore();\n        }\n        apLabelsRef.current = apl;\n      } else {\n        const apl: any[] = apLabelsRef.current || [];\n        for (let i = apl.length - 1; i >= 0; i--) {\n          const l = apl[i];\n          const p = Math.min(1, Math.max(0, (now - l.started) / l.duration));\n          if (p >= 1) { apl.splice(i, 1); continue; }\n          ctx.save();\n          ctx.globalAlpha = 1 - p;\n          ctx.fillStyle = '#ffdd57';\n          ctx.font = 'bold 18px sans-serif';\n          ctx.textAlign = 'center';\n          ctx.fillText(l.text, l.x, l.y - 10 * p);\n          ctx.restore();\n        }\n        apLabelsRef.current = apl;\n      }\n    } catch (e) {}\n\n    // --- Overlay pass: draw influence pulse ring and +N labels on top of all cards ---\n    try {\n      const now = performance.now();\n      // iterate over stored anims\n      influenceAnimRef.current.forEach((anims, uid) => {\n        // find card position by scanning clickZones\n        const zone = clickZonesRef.current.find(z => z.data && ((z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === uid)) || (z.data.card && z.data.card.uid === uid)) );\n        if (!zone) return;\n        const cx = zone.x + zone.w / 2;\n        const cy = zone.y + zone.h / 2;\n        // calculate aggregate pulse for this uid\n        let maxPulse = 0;\n        let totalAmount = 0;\n        const remaining: Array<{ start: number; duration: number; amount: number }> = [];\n        anims.forEach(a => {\n          const p = Math.min(1, Math.max(0, (now - a.start) / a.duration));\n          const pulse = Math.pow(Math.max(0, 1 - p), 2);\n          if (pulse > maxPulse) maxPulse = pulse;\n          if (p < 1) {\n            remaining.push(a);\n            totalAmount += a.amount;\n          }\n        });\n\n        // update list\n        if (remaining.length > 0) influenceAnimRef.current.set(uid, remaining);\n        else influenceAnimRef.current.delete(uid);\n\n        if (maxPulse > 0.001) {\n          // draw a soft ring to the right-bottom of influence number\n          const ringRadius = Math.max(8, zone.w * 0.08) * (1 + maxPulse * 0.6);\n          const ringX = zone.x + zone.w - 28; // near bottom-right where influence text lives\n          const ringY = zone.y + zone.h - 20;\n\n          ctx.save();\n          ctx.beginPath();\n          ctx.strokeStyle = `rgba(46, 204, 113, ${0.9 * maxPulse})`;\n          ctx.lineWidth = Math.max(2, Math.ceil(6 * maxPulse));\n          ctx.arc(ringX, ringY, ringRadius, 0, Math.PI * 2);\n          ctx.stroke();\n          ctx.restore();\n        }\n\n        if (totalAmount > 0) {\n          // floating +N to the right of influence number\n          const labelX = zone.x + zone.w - 12;\n          const labelY = zone.y + zone.h - 32 - (Math.random() * 6); // slight jitter\n          ctx.save();\n          ctx.fillStyle = '#2ecc71';\n          ctx.font = 'bold 16px sans-serif';\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'middle';\n          ctx.fillText(`+${totalAmount}`, labelX, labelY);\n          ctx.restore();\n        }\n      });\n    } catch (e) {\n      // ignore overlay errors\n    }\n\n    // --- Outline pass: draw a subtle, slightly pulsing 257x257 square around 256x256 slots ---\n    try {\n      const now2 = performance.now();\n      clickZonesRef.current.forEach((z, i) => {\n        if (!z) return;\n        const w = z.w || 0;\n        const h = z.h || 0;\n        // only target 256x256 slot-sized zones (covers the icons)\n        if (Math.abs(w - 256) > 0.1 || Math.abs(h - 256) > 0.1) return;\n        const x = z.x;\n        const y = z.y;\n\n        // Color palette (rgb)\n        const rgbTeal = '20,184,166';\n        const rgbBurg = '127,29,29';\n        const rgbPurple = '139,92,246';\n        const rgbYellow = '250,204,21';\n        const rgbOrange = '251,146,60';\n\n        // Determine slot semantic\n        let slotType: 'government' | 'public' | 'permanent' | 'instant' | 'intervention' | 'default' = 'default';\n        try {\n          const dt = z.data || {};\n          if (dt.slot && typeof dt.slot === 'string') {\n            if (dt.slot.includes('government')) slotType = 'government';\n            else if (dt.slot.includes('public')) slotType = 'public';\n            else if (dt.slot.includes('permanent')) slotType = 'permanent';\n            else if (dt.slot.includes('instant')) slotType = 'instant';\n          }\n          if (dt.type === 'row_slot' && dt.lane === 'aussen') slotType = 'government';\n          if (dt.type === 'row_slot' && dt.lane === 'innen') slotType = 'public';\n          if (dt.type === 'trap_p1' || dt.type === 'trap_p2' || (dt.card && dt.card.kind === 'trap')) slotType = 'intervention';\n          if (dt.type === 'activate_instant' || dt.slot === 'instant') slotType = 'instant';\n          if (dt.slot === 'permanent_government' || dt.slot === 'permanent_public' || dt.slot === 'permanent') slotType = 'permanent';\n        } catch (e) {}\n\n        const pulse = 0.5 + 0.5 * Math.sin(now2 / 350 + i);\n        const alpha = 0.06 + 0.12 * pulse; // subtle alpha\n        const lw = 1 + 2 * pulse; // line width between 1 and 3\n\n        // Create gradient based on slot type\n        let grad: CanvasGradient | null = null;\n        try {\n          grad = ctx.createLinearGradient(x, y, x + w, y + h);\n          if (slotType === 'government') {\n            grad.addColorStop(0, `rgba(${rgbTeal},1)`);\n            grad.addColorStop(1, `rgba(${rgbBurg},1)`);\n          } else if (slotType === 'public') {\n            grad.addColorStop(0, `rgba(${rgbBurg},1)`);\n            grad.addColorStop(1, `rgba(${rgbTeal},1)`);\n          } else if (slotType === 'permanent') {\n            grad.addColorStop(0, `rgba(${rgbPurple},1)`);\n            grad.addColorStop(1, `rgba(${rgbPurple},1)`);\n          } else if (slotType === 'instant') {\n            grad.addColorStop(0, `rgba(${rgbYellow},1)`);\n            grad.addColorStop(1, `rgba(${rgbYellow},1)`);\n          } else if (slotType === 'intervention') {\n            grad.addColorStop(0, `rgba(${rgbOrange},1)`);\n            grad.addColorStop(1, `rgba(${rgbOrange},1)`);\n          } else {\n            grad.addColorStop(0, `rgba(255,255,255,1)`);\n            grad.addColorStop(1, `rgba(255,255,255,1)`);\n          }\n        } catch (e) {\n          grad = null;\n        }\n\n        ctx.save();\n        if (grad) ctx.strokeStyle = grad as any;\n        else ctx.strokeStyle = `rgba(255,255,255,${alpha.toFixed(3)})`;\n        ctx.globalAlpha = alpha;\n        ctx.lineWidth = lw;\n        // draw 257x257 centered so that it encloses the 256 slot\n        ctx.strokeRect(x - 0.5, y - 0.5, w + 1, h + 1);\n        ctx.restore();\n      });\n    } catch (e) {\n      // ignore outline errors\n    }\n\n    ctx.restore();\n\n    // expose zones for debug snapshot\n    (window as any).__politicardDebug = {\n      uiTransform: getUiTransform(canvas.width, canvas.height),\n      canvasSize: { width: canvas.width, height: canvas.height },\n      zones: LAYOUT.zones,\n      clickZones: clickZonesRef.current.slice(0, 1000)\n    };\n\n    // Run diagnostics after canvas is fully rendered\n    runDiagnostics();\n  }, [drawLane, drawHandP1, drawHandP2, drawInterventionsP1, drawInterventionsP2, drawPermanentSlotsP1, drawPermanentSlotsP2, drawInstantSlots, drawInfoPanels, devMode, runDiagnostics]);\n\n  const DRAW_LAYOUT_OVERLAY = false; // force off per new layout system\n\n  // Load slot symbol images once\n  useEffect(() => {\n    const load = (key: string, src: string) => {\n      const img = new Image();\n      img.onload = () => { slotSymbolImgsRef.current.set(key, img); };\n      img.onerror = () => { console.warn('Failed to load slot icon', src); };\n      img.src = src;\n    };\n    // load all slot icons\n    load('public', publicSymbolUrl);\n    load('sofort', sofortSymbolUrl);\n    load('dauerhaft', dauerhaftSymbolUrl);\n    load('government', governmentSymbolUrl);\n    load('intervention', interventionSymbolUrl);\n\n    // ensure first draw\n    requestAnimationFrame(draw);\n  }, [draw]);\n\n  // Redraw when game state or selection changes\n  useEffect(() => {\n    requestAnimationFrame(draw);\n  }, [gameState, selectedHandIndex, draw]);\n\n  // Continuous render loop to keep canvas updated without relying on external state refs\n  useEffect(() => {\n    let frame: number;\n    const loop = () => {\n      draw();\n      frame = requestAnimationFrame(loop);\n    };\n    frame = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frame);\n  }, [draw]);\n\n  const handleCardClick = useCallback((data: any) => {\n    // Hand-Klick\n    if (data.type === 'hand_p1') {\n      const uid = data.card?.uid ?? data.card?.id;\n      const stateHand = gameState.hands?.[1] || [];\n      const idxInState = stateHand.findIndex((c: any) => (c.uid ?? c.id) === uid);\n      onCardClick(data);\n      return;\n    }\n\n    // Slot-Klick\n    if (data.type === 'row_slot') {\n      const lane: 'public' | 'government' = data.lane;\n      const cap = getLaneCapacity(lane);\n\n      // Hole aktuelle Row-Länge aus gameState\n      const rowCards = lane === 'public'\n        ? gameState.board?.[1]?.innen ?? []\n        : gameState.board?.[1]?.aussen ?? [];\n\n      if (rowCards.length >= cap) {\n        // Optional: UI Feedback\n        console.warn(`Row ${lane} is full (${rowCards.length}/${cap})`);\n        return;\n      }\n\n      onCardClick(data);\n      return;\n    }\n\n    // Andere Klicks (empty_slot, board_card, etc.)\n    onCardClick(data);\n  }, [gameState, onCardClick]);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    const mx = (e.clientX - rect.left - offsetX) / scale;\n    const my = (e.clientY - rect.top - offsetY) / scale;\n\n    const hit = clickZonesRef.current.find(z => mx >= z.x && mx <= z.x + z.w && my >= z.y && my <= z.y + z.h);\n    if (hit) handleCardClick(hit.data);\n  }, [handleCardClick]);\n\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    const mx = (e.clientX - rect.left - offsetX) / scale;\n    const my = (e.clientY - rect.top - offsetY) / scale;\n\n    const hit = clickZonesRef.current.find(z => mx >= z.x && mx <= z.x + z.w && my >= z.y && my <= z.y + z.h);\n    if (hit) {\n      console.log('[hover]', hit.data.type, hit.data.card?.name);\n      onCardHover({ ...hit.data, x: e.clientX, y: e.clientY });\n    } else {\n      onCardHover(null);\n    }\n  }, [onCardHover]);\n\n  const handleWheel = useCallback((e: React.WheelEvent<HTMLCanvasElement>) => {\n    // only enable when player1 has more slots than visible\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    const zone = getZone('hand.player');\n    if (!zone) return;\n    if (handLen <= 5) return; // nothing to scroll\n\n    // Prevent page scrolling when over canvas\n    e.preventDefault();\n\n    // accumulate target offset (invert so wheel down moves cards up)\n    // Each wheel step moves by 48px per delta unit\n    const delta = Math.sign(e.deltaY) * 48;\n    // compute slot height more robustly\n    const slots = computeSlotRects(zone);\n    const slotH = slots && slots.length > 0 ? slots[0].h : zone.rectPx[3] / 5;\n    const visible = 5;\n    const maxOffset = -(Math.max(0, handLen - visible) * slotH);\n    handScrollTargetRef.current = Math.max(Math.min(handScrollTargetRef.current - delta, 0), maxOffset);\n  }, [gameState.hands]);\n\n  const handleTouchStart = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    if (!e.touches || e.touches.length === 0) return;\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    if (handLen <= 5) return;\n    isTouchingRef.current = true;\n    const y = e.touches[0].clientY;\n    touchStartYRef.current = y;\n    lastTouchYRef.current = y;\n    e.preventDefault();\n  }, [gameState.hands]);\n\n  const handleTouchMove = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    if (!isTouchingRef.current) return;\n    if (!e.touches || e.touches.length === 0) return;\n    const y = e.touches[0].clientY;\n    const last = lastTouchYRef.current ?? y;\n    const dy = y - last; // positive when moving down\n    lastTouchYRef.current = y;\n\n    // invert so dragging up moves cards up\n    const delta = -dy;\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    const zone = getZone('hand.player');\n    if (!zone) return;\n    const slots = computeSlotRects(zone);\n    const slotH = slots && slots.length > 0 ? slots[0].h : zone.rectPx[3] / 5;\n    const visible = 5;\n    const maxOffset = -(Math.max(0, handLen - visible) * slotH);\n    handScrollTargetRef.current = Math.max(Math.min(handScrollTargetRef.current + delta, 0), maxOffset);\n    e.preventDefault();\n  }, [gameState.hands]);\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    isTouchingRef.current = false;\n    touchStartYRef.current = null;\n    lastTouchYRef.current = null;\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={1920}\n      height={1080}\n      style={{\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        imageRendering: 'auto',\n      }}\n      onClick={handleClick}\n      onMouseMove={handleMouseMove}\n      onWheel={handleWheel}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    />\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}