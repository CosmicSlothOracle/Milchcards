{"ast":null,"code":"import _objectSpread from\"C:/Users/skank/Videos/Cards/Milchcards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useRef,useEffect,useCallback}from'react';import{useVisualEffectsSafe}from'../context/VisualEffectsContext';import{LAYOUT,getZone,computeSlotRects,getUiTransform,getLaneCapacity,getPublicRects,getGovernmentRects,getSofortRect}from'../ui/layout';import{sortHandCards}from'../utils/gameUtils';import{getCardImagePath}from'../data/gameData';import influenceIconUrl from'../assets/icons/influence.svg';import publicSymbolUrl from'../assets/icons/public_symbol.png';import sofortSymbolUrl from'../assets/icons/sofort_initiative_symbol.png';import dauerhaftSymbolUrl from'../assets/icons/dauerhaft_initative.png';import governmentSymbolUrl from'../assets/icons/government_symbol.png';import interventionSymbolUrl from'../assets/icons/intervention_symbol.png';import govPlaceGifUrl from'../assets/effect_gif/place_card_gov_256x256.gif';import govPlaceSpritesheetUrl from'../ui/sprites/playcard_gov_256x256_14.png';import instantSpritesheetUrl from'../ui/sprites/activate_trap_hit_target_256x256_16x2.png';import hitSpritesheetUrl from'../ui/sprites/activate_inititive_hit_target_256x256_16_2rows.png';import{jsx as _jsx}from\"react/jsx-runtime\";// Helper: is corruption target selection active\nfunction isCorruptionSelection(state,player){const sel=state.pendingAbilitySelect;return sel&&sel.type==='corruption_steal'&&sel.actorPlayer===player;}export const GameCanvas=_ref=>{let{gameState,selectedHandIndex,onCardClick,onCardHover,devMode=false}=_ref;// listen for dice roll requests from resolver and trigger Dice3D\nuseEffect(()=>{const handler=ev=>{try{var _ev$detail;const player=(_ev$detail=ev.detail)===null||_ev$detail===void 0?void 0:_ev$detail.player;// find Dice3D canvas on page and trigger click (it rolls on click)\nconst dice=document.querySelector('canvas');// better: dispatch global event so App-level Dice3D component can roll programmatically\nwindow.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll',{detail:{player}}));}catch(e){}};window.addEventListener('pc:request_dice_roll',handler);return()=>window.removeEventListener('pc:request_dice_roll',handler);},[]);const canvasRef=useRef(null);const visualEffects=useVisualEffectsSafe();const clickZonesRef=useRef([]);// Smooth vertical scroll for P1 hand when it has more than visible slots\nconst handScrollTargetRef=useRef(0);const handScrollCurrentRef=useRef(0);const handScrollEnabledRef=useRef(true);// Touch handling refs\nconst touchStartYRef=useRef(null);const lastTouchYRef=useRef(null);const isTouchingRef=useRef(false);const backgroundImageRef=useRef(null);const imageCacheRef=useRef(new Map());const influenceImgRef=useRef(null);// Animation state for visual influence changes: Map<uid, Array<Anim>>\nconst influenceAnimRef=useRef(new Map());// Previous per-card influence snapshot to detect increases\nconst prevInfluencesRef=useRef({});// Slot symbol images\nconst slotSymbolImgsRef=useRef(new Map());// Map of canonical slot positions for animations: key -> {x,y,w,h,cx,cy}\nconst slotPositionsRef=useRef({});// Temporary test GIF for government slots\nconst govGifRef=useRef(null);const govSpritesRef=useRef(null);// hit (target) spritesheet (25 frames)\nconst hitSpritesRef=useRef(null);// sprite animation state keyed by slot-key (player.lane.index)\nconst govSpriteStateRef=useRef({});const instantSpritesRef=useRef(null);const instantSpriteStateRef=useRef({});const hitSpriteStateRef=useRef({});// Corruption (Bestechungsskandal) target selection mode\nconst corruptionSelectActorRef=useRef(null);useEffect(()=>{const onEnterCorruptionSelect=ev=>{try{var _ev$detail2;const actor=(_ev$detail2=ev.detail)===null||_ev$detail2===void 0?void 0:_ev$detail2.player;console.log('ðŸ”¥ GAMECANVAS RECEIVED pc:corruption_select_target - Actor:',actor);corruptionSelectActorRef.current=actor!==null&&actor!==void 0?actor:null;console.log('ðŸ”¥ SET corruptionSelectActorRef.current:',corruptionSelectActorRef.current);}catch(e){console.error('ðŸ”¥ ERROR in corruption select handler:',e);}};window.addEventListener('pc:corruption_select_target',onEnterCorruptionSelect);return()=>window.removeEventListener('pc:corruption_select_target',onEnterCorruptionSelect);},[]);// Helper: draw slot icons with uniform pulsing opacity and a light reflection\nconst drawSlotIconWithPulse=useCallback(function(ctx,img,x,y,w,h){let phase=arguments.length>6&&arguments[6]!==undefined?arguments[6]:0;if(!img||!img.complete)return;try{const now=performance.now();const base=0.10;// base opacity\nconst pulseRange=0.08;// pulse amplitude (-> up to base + pulseRange)\nconst period=700;// ms\nconst pulse=base+pulseRange*(0.5+0.5*Math.sin(now/period+phase));// draw icon with pulsing alpha\nctx.save();ctx.globalAlpha=pulse;ctx.drawImage(img,x,y,w,h);// subtle reflection: gradient overlay on top half\nconst grad=ctx.createLinearGradient(x,y,x,y+h*0.5);grad.addColorStop(0,\"rgba(255,255,255,\".concat(0.18*pulse,\")\"));grad.addColorStop(1,\"rgba(255,255,255,0)\");ctx.globalCompositeOperation='lighter';ctx.fillStyle=grad;ctx.fillRect(x,y,w,h*0.5);ctx.restore();}catch(e){// silent fallback\n}},[]);// Load influence icon once\nuseEffect(()=>{const img=new Image();img.src=influenceIconUrl;influenceImgRef.current=img;},[]);const drawCardAt=useCallback(function(ctx,card,x,y,size){var _shield;let selected=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;let showAPCost=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;let player=arguments.length>7?arguments[7]:undefined;// Apply per-card fade-in if a play animation is active for this uid\nlet extraAlpha=1;try{var _uid;const uid=(_uid=card.uid)!==null&&_uid!==void 0?_uid:card.id;const list=visualEffects&&visualEffects.playAnimsRef&&visualEffects.playAnimsRef.current||window.__pc_play_anims||[];const anim=list.find(a=>a.uid===uid);if(anim){const p=Math.min(1,Math.max(0,(performance.now()-anim.started)/anim.duration));// ease-out\nextraAlpha=Math.pow(p,2);}}catch(e){}let dx=x,dy=y,s=size;if(selected){s=Math.floor(size*1.05);dx=x-Math.floor((s-size)/2);dy=y-Math.floor((s-size)/2);}// Note: pulse overlay is drawn at top layer after all cards are rendered\n// Draw card image with caching to prevent flicker in continuous loop\nconst src=getCardImagePath(card,'ui');const cached=imageCacheRef.current.get(src);ctx.save();ctx.globalAlpha=extraAlpha;if(cached&&cached.complete&&cached.naturalWidth>0){ctx.drawImage(cached,dx,dy,s,s);}else{const img=new Image();img.onload=()=>{imageCacheRef.current.set(src,img);// Note: onload happens async; draw will occur on next frame\n// don't draw here into stale ctx\n};img.src=src;imageCacheRef.current.set(src,img);}ctx.restore();// Status-Indikatoren (fÃ¼r alle Board-Karten)\n// Einfluss-Wert dauerhaft anzeigen (oben links) â€“ nur fÃ¼r Regierungskarten\nif(card.kind==='pol'){var _influence;const barH=Math.max(20,Math.floor(s*0.12)+6);ctx.fillStyle='rgba(0,0,0,0.6)';ctx.fillRect(dx,dy+s-barH,s,barH);ctx.fillStyle='#ffffff';const fontSize=Math.floor(s*0.12);ctx.font=\"bold \".concat(fontSize,\"px sans-serif\");ctx.textAlign='left';ctx.textBaseline='middle';ctx.fillText(\"\".concat((_influence=card.influence)!==null&&_influence!==void 0?_influence:0),dx+8,dy+s-barH/2);}// Schutz-Status (blauer Punkt)\nif(card.protected||((_shield=card.shield)!==null&&_shield!==void 0?_shield:0)>0){ctx.fillStyle='#1da1f2';ctx.fillRect(dx+s-22,dy+6,16,16);}// Deaktiviert-Status (roter Punkt)\nif(card.deactivated){ctx.fillStyle='#b63838';ctx.fillRect(dx+s-22,dy+26,16,16);}// Einfluss-Badge fÃ¼r Handkarten oben rechts (nur Regierungskarten)\nif(showAPCost&&player&&card.kind==='pol'){var _influence2;const badgeHeight=Math.max(16,Math.floor(s*0.12));const badgeWidth=badgeHeight*2;const badgeX=dx+s-badgeWidth-6;const badgeY=dy+6;// Semi-transparent dunkler Hintergrund\nctx.fillStyle='rgba(0,0,0,0.6)';ctx.beginPath();ctx.roundRect(badgeX,badgeY,badgeWidth,badgeHeight,badgeHeight/2);ctx.fill();// Influence icon (90% opacity) links im Badge\nif(influenceImgRef.current&&influenceImgRef.current.complete){ctx.globalAlpha=0.9;ctx.drawImage(influenceImgRef.current,badgeX+2,badgeY+2,badgeHeight-4,badgeHeight-4);ctx.globalAlpha=1;}// Influence number rechts im Badge\nctx.fillStyle='#ffffff';ctx.font=\"bold \".concat(Math.floor(badgeHeight*0.5),\"px sans-serif\");ctx.textAlign='right';ctx.textBaseline='middle';ctx.fillText(\"\".concat((_influence2=card.influence)!==null&&_influence2!==void 0?_influence2:0),badgeX+badgeWidth-4,badgeY+badgeHeight/2);// Reset align\nctx.textAlign='start';ctx.textBaseline='alphabetic';}// NOTE: influence overlays (pulse + labels) are drawn in a separate pass\n// Auswahl-Rahmen\nif(selected){ctx.strokeStyle='#61dafb';ctx.lineWidth=3;ctx.strokeRect(dx+1,dy+1,s-2,s-2);ctx.lineWidth=1;}// Return exact 256x256 click zone over the card\n// Since all cards are 256x256, the click zone should match exactly\nreturn{x:dx,y:dy,w:256,h:256};},[gameState]);// Slot-Benennungs-Funktion basierend auf Glossar\nconst getSlotDisplayName=useCallback((zoneId,index,player)=>{const slotNumber=index+1;if(zoneId.includes('government')){if(zoneId.includes('player')){return\"Regierungsreihe Slot \".concat(slotNumber);}else{return\"Gegner Regierung Slot \".concat(slotNumber);}}else if(zoneId.includes('public')){if(zoneId.includes('player')){return\"\\xD6ffentlichkeitsreihe Slot \".concat(slotNumber);}else{return\"Gegner \\xD6ffentlichkeit Slot \".concat(slotNumber);}}else if(zoneId.includes('permanent.government')){if(zoneId.includes('player')){return'Regierung Spezial-Slot';}else{return'Gegner Regierung Spezial-Slot';}}else if(zoneId.includes('permanent.public')){if(zoneId.includes('player')){return'Ã–ffentlichkeit Spezial-Slot';}else{return'Gegner Ã–ffentlichkeit Spezial-Slot';}}else if(zoneId.includes('instant')){if(zoneId.includes('player')){return'Sofort-Slot';}else{return'Gegner Sofort-Slot';}}else if(zoneId.includes('hand')){return'Hand';}else if(zoneId.includes('interventions')){return'Interventionen';}return\"Slot \".concat(slotNumber);},[]);const drawLane=useCallback((ctx,zoneId,player,lane,clickable)=>{const zone=getZone(zoneId);if(!zone)return;const slots=computeSlotRects(zone);const arr=gameState.board[player][lane];slots.forEach((s,idx)=>{const card=arr[idx];// Hintergrundfarbe nach Kategorie\nlet bgColor='rgba(0,0,0,0.1)';// Standard\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';// Hellgelb fÃ¼r Regierung\n}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';// HellgrÃ¼n fÃ¼r Ã–ffentlichkeit\n}ctx.fillStyle=bgColor;ctx.fillRect(s.x,s.y,s.w,s.h);// Slot-Rahmen\nctx.strokeStyle='rgba(255,255,255,0.06)';ctx.strokeRect(s.x+0.5,s.y+0.5,s.w-1,s.h-1);if(card){const isSelected=player===1&&selectedHandIndex!==null&&gameState.hands[1][selectedHandIndex]===card;const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,isSelected,false);// Kartenname unter dem Slot anzeigen\nctx.fillStyle='rgba(255,255,255,0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';const textY=s.y+s.h+16;ctx.fillText(card.name,s.x+s.w/2,textY);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'board_card',player,lane,index:idx,card}}));}else if(clickable&&gameState.current===player){// Slot-Benennung anzeigen (fÃ¼r den aktuellen Spieler)\nconst slotName=getSlotDisplayName(zoneId,idx,player);ctx.fillStyle='rgba(255,255,255,0.6)';ctx.font='11px sans-serif';ctx.textAlign='center';const textY=s.y+s.h/2;ctx.fillText(slotName,s.x+s.w/2,textY);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',lane,index:idx}});}});},[gameState,selectedHandIndex,drawCardAt,getSlotDisplayName]);const drawHandP1=useCallback(ctx=>{const hand=sortHandCards(gameState.hands[1]);const zone=getZone('hand.player');if(!zone)return;const slots=computeSlotRects(zone);// Apply smooth offset (lerp towards target)\nconst target=handScrollTargetRef.current;handScrollCurrentRef.current+=(target-handScrollCurrentRef.current)*0.15;// easing\nconst offsetY=Math.round(handScrollCurrentRef.current);slots.forEach((s,i)=>{const card=hand[i];if(!card)return;// Find original index in unsorted hand for click handling\nconst originalIndex=gameState.hands[1].findIndex(c=>c.uid===card.uid);const isSel=selectedHandIndex===originalIndex;// apply vertical offset\nconst sx=s.x;const sy=s.y+offsetY;const clickZone=drawCardAt(ctx,card,sx,sy,s.w,isSel,true,1);// Show AP cost for player 1 hand\nclickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'hand_p1',index:originalIndex,card}}));});},[gameState.hands,selectedHandIndex,drawCardAt]);// ðŸ”§ DEV MODE: Player 2 Hand (rechts unten, kompakter)\nconst drawHandP2=useCallback(ctx=>{const hand=sortHandCards(gameState.hands[2]);const zone=getZone('hand.opponent');if(!zone)return;const slots=computeSlotRects(zone);// Hintergrund fÃ¼r P2 Hand\nconst[x,y,w,h]=zone.rectPx;ctx.fillStyle='rgba(255, 100, 100, 0.15)';// RÃ¶tlicher Hintergrund fÃ¼r P2\nctx.fillRect(x,y,w,h);ctx.strokeStyle='rgba(255, 100, 100, 0.3)';ctx.strokeRect(x+0.5,y+0.5,w-1,h-1);// Label fÃ¼r P2 Hand\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='bold 14px sans-serif';ctx.textAlign='center';ctx.fillText('Player 2 Hand',x+w/2,y-8);slots.forEach((s,i)=>{const card=hand[i];if(!card)return;// Find original index in unsorted hand for click handling\nconst originalIndex=gameState.hands[2].findIndex(c=>c.uid===card.uid);const isSel=gameState.current===2&&selectedHandIndex===originalIndex;const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,isSel,true,2);// Show AP cost for player 2 hand\nclickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'hand_p2',index:originalIndex,card}}));});},[gameState,selectedHandIndex,drawCardAt]);// Interventions strip (player traps)\nconst drawInterventionsP1=useCallback(ctx=>{const traps=gameState.traps[1]||[];const zone=getZone('interventions.player');if(!zone)return;// Single intervention slot\nconst[zx,zy,zw,zh]=zone.rectPx;const card=traps[0];// Only first trap\n// Hintergrund fÃ¼r Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.15)';// Lavendelfarben fÃ¼r Interventionen\nctx.fillRect(zx,zy,zw,zh);ctx.strokeStyle='rgba(200, 160, 255, 0.3)';ctx.strokeRect(zx+0.5,zy+0.5,zw-1,zh-1);// Slot-Benennung fÃ¼r Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.8)';ctx.font='11px sans-serif';ctx.textAlign='left';ctx.fillText('Intervention',zx+8,zy+zh-6);if(card){const clickZone=drawCardAt(ctx,card,zx,zy,zw,false,false);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'trap_p1',index:0,card}}));}},[gameState.traps,drawCardAt]);// Interventions strip (opponent traps)\nconst drawInterventionsP2=useCallback(ctx=>{const traps=gameState.traps[2]||[];const zone=getZone('interventions.opponent');if(!zone)return;// Single intervention slot\nconst[zx,zy,zw,zh]=zone.rectPx;const card=traps[0];// Only first trap\n// Hintergrund fÃ¼r Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.15)';// Lavendelfarben fÃ¼r Interventionen\nctx.fillRect(zx,zy,zw,zh);ctx.strokeStyle='rgba(200, 160, 255, 0.3)';ctx.strokeRect(zx+0.5,zy+0.5,zw-1,zh-1);// Slot-Benennung fÃ¼r Interventions-Slot\nctx.fillStyle='rgba(200, 160, 255, 0.8)';ctx.font='11px sans-serif';ctx.textAlign='left';ctx.fillText('Intervention',zx+8,zy+zh-6);if(card){const clickZone=drawCardAt(ctx,card,zx,zy,zw,false,false);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'trap_p2',index:0,card}}));}},[gameState.traps,drawCardAt]);// Single slot drawing function\nconst drawSingleSlot=useCallback((ctx,zoneId,card,clickType,player)=>{const zone=getZone(zoneId);if(!zone)return;const[x,y,w,h]=zone.rectPx;// Hintergrundfarbe nach Kategorie\nlet bgColor='rgba(0,0,0,0.1)';// Standard\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';// Hellgelb fÃ¼r Regierung\n}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';// HellgrÃ¼n fÃ¼r Ã–ffentlichkeit\n}else if(zoneId.includes('instant')){bgColor='rgba(127, 116, 91, 0.15)';// Neutral fÃ¼r Sofort-Slots\n}else if(zoneId.includes('permanent')){// Unterscheide zwischen government und public permanent slots\nif(zoneId.includes('government')){bgColor='rgba(255, 197, 0, 0.15)';}else if(zoneId.includes('public')){bgColor='rgba(0, 255, 0, 0.15)';}}ctx.fillStyle=bgColor;ctx.fillRect(x,y,w,h);// Draw slot border\nctx.strokeStyle='rgba(255,255,255,0.06)';ctx.strokeRect(x+0.5,y+0.5,w-1,h-1);if(card){const isSelected=player===1&&selectedHandIndex!==null&&gameState.hands[1][selectedHandIndex]===card;const clickZone=drawCardAt(ctx,card,x,y,w,isSelected,false);// Kartenname unter dem Slot anzeigen\nctx.fillStyle='rgba(255,255,255,0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';const textY=y+h+16;ctx.fillText(card.name,x+w/2,textY);// Register click zone for the card - always in dev mode, otherwise only for current player\nif(devMode||player===gameState.current){clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'slot_card',slot:clickType,player,card}}));}// ðŸ”§ NEU: Sofort-Initiative-Slots sind immer klickbar fÃ¼r Aktivierung (handled by activateInstantInitiative)\nif(clickType==='instant'){clickZonesRef.current.push({x,y,w,h,data:{type:'activate_instant',player,card}});}}else if(gameState.current===player||devMode){// Slot-Benennung fÃ¼r leere Slots anzeigen (fÃ¼r den aktuellen Spieler oder im Dev Mode)\nconst slotName=getSlotDisplayName(zoneId,0,player);ctx.fillStyle='rgba(255,255,255,0.6)';ctx.font='11px sans-serif';ctx.textAlign='center';const textY=y+h/2;ctx.fillText(slotName,x+w/2,textY);clickZonesRef.current.push({x,y,w,h,data:{type:'empty_slot',slot:clickType,player}});}},[selectedHandIndex,gameState,drawCardAt,getSlotDisplayName,devMode]);// Small UI hook: show a lightweight corruption modal overlay when a target is selected\nuseEffect(()=>{const onTargetSelected=ev=>{const{player,targetUid}=ev.detail||{};if(!player||!targetUid)return;// create transient overlay element if not present\ntry{var _board,_board2,_board2$aussen,_board3,_board4,_board4$aussen;const id='pc-corruption-modal';let el=document.getElementById(id);if(!el){el=document.createElement('div');el.id=id;el.style.position='fixed';el.style.left='50%';el.style.top='40%';el.style.transform='translate(-50%, -50%)';el.style.padding='12px 16px';el.style.background='rgba(6,10,15,0.9)';el.style.border='1px solid rgba(255,255,255,0.12)';el.style.borderRadius='8px';el.style.zIndex='3000';el.style.color='#e5e7eb';el.style.fontFamily='monospace';el.style.fontSize='14px';document.body.appendChild(el);}const card=((_board=gameState.board)===null||_board===void 0?void 0:(_board2=_board[player===1?1:2])===null||_board2===void 0?void 0:(_board2$aussen=_board2.aussen)===null||_board2$aussen===void 0?void 0:_board2$aussen.find(c=>c.uid===targetUid))||((_board3=gameState.board)===null||_board3===void 0?void 0:(_board4=_board3[player===1?2:1])===null||_board4===void 0?void 0:(_board4$aussen=_board4.aussen)===null||_board4$aussen===void 0?void 0:_board4$aussen.find(c=>c.uid===targetUid));el.innerHTML=\"<div style=\\\"display:flex;flex-direction:column;gap:8px;min-width:260px;\\\">\\n          <div style=\\\"font-weight:700\\\">Bestechungsskandal 2.0 \\u2014 Ziel gew\\xE4hlt</div>\\n          <div>Gew\\xE4hltes Ziel: <b>\".concat(card?card.name:'UID '+targetUid,\"</b></div>\\n          <div>Probe: W6 \\u2265 Einfluss (inkl. Oligarch-Bonus)</div>\\n          <div style=\\\"display:flex;gap:8px;justify-content:flex-end;\\\">\\n            <button id=\\\"pc-corruption-roll\\\" style=\\\"background:#2563eb;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\\\">W\\xFCrfeln</button>\\n            <button id=\\\"pc-corruption-cancel\\\" style=\\\"background:#374151;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\\\">Abbrechen</button>\\n          </div>\\n        </div>\");const rollBtn=document.getElementById('pc-corruption-roll');const cancelBtn=document.getElementById('pc-corruption-cancel');if(rollBtn){rollBtn.onclick=()=>{try{console.log('ðŸ”¥ CORRUPTION WÃœRFELN CLICKED - triggering dice roll');// Trigger the dice component to roll\nwindow.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll',{detail:{player,targetUid}}));window.dispatchEvent(new CustomEvent('pc:corruption_request_roll',{detail:{player,targetUid}}));}catch(e){console.error('ðŸ”¥ ERROR triggering dice roll:',e);}// disable until result\nrollBtn.disabled=true;rollBtn.innerText='WÃ¼rfelt...';};}if(cancelBtn){cancelBtn.onclick=()=>{el.remove();};}}catch(e){console.debug('corruption modal create failed',e);}};window.addEventListener('pc:corruption_target_selected',onTargetSelected);return()=>window.removeEventListener('pc:corruption_target_selected',onTargetSelected);},[gameState]);// Draw permanent slots for player\nconst drawPermanentSlotsP1=useCallback(ctx=>{drawSingleSlot(ctx,'slot.permanent.government.player',gameState.permanentSlots[1].government,'permanent_government',1);drawSingleSlot(ctx,'slot.permanent.public.player',gameState.permanentSlots[1].public,'permanent_public',1);},[gameState.permanentSlots,drawSingleSlot]);// Draw permanent slots for opponent\nconst drawPermanentSlotsP2=useCallback(ctx=>{drawSingleSlot(ctx,'slot.permanent.government.opponent',gameState.permanentSlots[2].government,'permanent_government',2);drawSingleSlot(ctx,'slot.permanent.public.opponent',gameState.permanentSlots[2].public,'permanent_public',2);},[gameState.permanentSlots,drawSingleSlot]);// Draw instant slots\nconst drawInstantSlots=useCallback(ctx=>{// Sofort-Initiative-Slots aus dem Board zeichnen\nconst sofortPlayerCard=gameState.board[1].sofort[0];const sofortOppCard=gameState.board[2].sofort[0];drawSingleSlot(ctx,'slot.instant.player',sofortPlayerCard,'instant',1);drawSingleSlot(ctx,'slot.instant.opponent',sofortOppCard,'instant',2);},[gameState.board,drawSingleSlot]);// Aktive SchlÃ¼sselwÃ¶rter und Unterkategorien ermitteln\nconst getActiveKeywordsAndSubcategories=useCallback(player=>{const board=gameState.board[player];const permanentSlots=gameState.permanentSlots[player];const allCards=[...board.innen,...board.aussen,permanentSlots.government,permanentSlots.public].filter(c=>c&&c.kind==='pol');const keywords=new Set();const subcategories=new Set();allCards.forEach(card=>{if(!card.deactivated){// Regierungskarten-SchlÃ¼sselwÃ¶rter\nif(card.tag==='Leadership'){keywords.add('Leadership');}if(card.tag==='Diplomat'){keywords.add('Diplomat');}// Ã–ffentlichkeits-Unterkategorien (fÃ¼r Karten in Ã–ffentlichkeitsreihe)\nif(board.innen.includes(card)){const publicCard=card;if(publicCard.tag){// Oligarch\nconst oligarchNames=['Elon Musk','Bill Gates','George Soros','Warren Buffett','Mukesh Ambani','Jeff Bezos','Alisher Usmanov','Gautam Adani','Jack Ma','Zhang Yiming','Roman Abramovich'];if(oligarchNames.includes(publicCard.name)){subcategories.add('Oligarch');}// Plattform\nconst platformNames=['Mark Zuckerberg','Tim Cook','Sam Altman','Jack Ma'];if(platformNames.includes(publicCard.name)){subcategories.add('Plattform');}// Bewegung\nconst movementNames=['Greta Thunberg','Malala Yousafzai','Ai Weiwei','Alexei Navalny'];if(movementNames.includes(publicCard.name)){subcategories.add('Bewegung');}// NGO/Think-Tank\nconst ngoNames=['Bill Gates','George Soros','Jennifer Doudna','Noam Chomsky','Anthony Fauci'];if(ngoNames.includes(publicCard.name)){subcategories.add('NGO/Think-Tank');}// Intelligenz\nconst intelligenceNames=['Jennifer Doudna','Noam Chomsky','Edward Snowden','Julian Assange','Yuval Noah Harari','Ai Weiwei','Alexei Navalny','Anthony Fauci'];if(intelligenceNames.includes(publicCard.name)){subcategories.add('Intelligenz');}// Medien\nconst mediaNames=['Oprah Winfrey'];if(mediaNames.includes(publicCard.name)){subcategories.add('Medien');}}}}});return{keywords:Array.from(keywords),subcategories:Array.from(subcategories)};},[gameState]);// Info-Panels zeichnen\nconst drawInfoPanels=useCallback(ctx=>{const{keywords,subcategories}=getActiveKeywordsAndSubcategories(1);// Panel fÃ¼r RegierungsschlÃ¼sselwÃ¶rter (rechts neben Regierungsslots)\nconst govPanelX=1640+256+20;// Nach dem letzten permanenten Slot\nconst govPanelY=300;// Auf HÃ¶he der Regierungsslots\nconst govPanelW=120;const govPanelH=256;// Regierungspanel Hintergrund\nctx.fillStyle='rgba(255, 197, 0, 0.15)';ctx.fillRect(govPanelX,govPanelY,govPanelW,govPanelH);ctx.strokeStyle='rgba(255, 197, 0, 0.3)';ctx.strokeRect(govPanelX+0.5,govPanelY+0.5,govPanelW-1,govPanelH-1);// Regierungspanel Titel\nctx.fillStyle='rgba(255, 197, 0, 0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';ctx.fillText('Regierung',govPanelX+govPanelW/2,govPanelY+16);// SchlÃ¼sselwÃ¶rter auflisten\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='11px sans-serif';ctx.textAlign='left';if(keywords.length>0){keywords.forEach((keyword,idx)=>{ctx.fillText(\"\\u2022 \".concat(keyword),govPanelX+8,govPanelY+36+idx*16);});}else{ctx.fillStyle='rgba(255, 255, 255, 0.5)';ctx.fillText('Keine aktiven',govPanelX+8,govPanelY+36);ctx.fillText('SchlÃ¼sselwÃ¶rter',govPanelX+8,govPanelY+52);}// Panel fÃ¼r Ã–ffentlichkeits-Unterkategorien (rechts neben Ã–ffentlichkeitsslots)\nconst pubPanelX=1640+256+20;const pubPanelY=580;// Auf HÃ¶he der Ã–ffentlichkeitsslots\nconst pubPanelW=120;const pubPanelH=256;// Ã–ffentlichkeitspanel Hintergrund\nctx.fillStyle='rgba(0, 255, 0, 0.15)';ctx.fillRect(pubPanelX,pubPanelY,pubPanelW,pubPanelH);ctx.strokeStyle='rgba(0, 255, 0, 0.3)';ctx.strokeRect(pubPanelX+0.5,pubPanelY+0.5,pubPanelW-1,pubPanelH-1);// Ã–ffentlichkeitspanel Titel\nctx.fillStyle='rgba(0, 255, 0, 0.9)';ctx.font='bold 12px sans-serif';ctx.textAlign='center';ctx.fillText('Ã–ffentlichkeit',pubPanelX+pubPanelW/2,pubPanelY+16);// Unterkategorien auflisten\nctx.fillStyle='rgba(255, 255, 255, 0.9)';ctx.font='11px sans-serif';ctx.textAlign='left';if(subcategories.length>0){subcategories.forEach((subcategory,idx)=>{const displayName=subcategory.length>12?subcategory.substring(0,10)+'...':subcategory;ctx.fillText(\"\\u2022 \".concat(displayName),pubPanelX+8,pubPanelY+36+idx*16);});}else{ctx.fillStyle='rgba(255, 255, 255, 0.5)';ctx.fillText('Keine aktiven',pubPanelX+8,pubPanelY+36);ctx.fillText('Unterkategorien',pubPanelX+8,pubPanelY+52);}},[getActiveKeywordsAndSubcategories]);// Move diagnostics to draw callback to ensure they run after canvas is actually rendered\nconst runDiagnostics=useCallback(()=>{try{const handZones=clickZonesRef.current.filter(z=>z.data&&z.data.type==='hand_p1');const uiUIDs=handZones.map(z=>{var _z$data$card$uid;return z.data.card&&((_z$data$card$uid=z.data.card.uid)!==null&&_z$data$card$uid!==void 0?_z$data$card$uid:z.data.card.id);}).filter(Boolean);const stateHand=gameState.hands&&gameState.hands[1]?gameState.hands[1]:[];const stateUIDs=stateHand.map(c=>{var _c$uid;return(_c$uid=c.uid)!==null&&_c$uid!==void 0?_c$uid:c.id;}).filter(Boolean);const missingInState=uiUIDs.filter(u=>!stateUIDs.includes(u));const missingInUI=stateUIDs.filter(u=>!uiUIDs.includes(u));// Only warn if there are cards in UI that don't exist in state (real error)\n// Don't warn about missing UI cards due to limited slot capacity\nif(missingInState.length>0){var _politicardDebug;const mismatch={ts:Date.now(),uiCount:uiUIDs.length,stateCount:stateUIDs.length,uiUIDs,stateUIDs,missingInState,missingInUI,stack:new Error('mismatch-stack').stack};window.__politicardDebug=_objectSpread(_objectSpread({},window.__politicardDebug),{},{mismatch:[...(((_politicardDebug=window.__politicardDebug)===null||_politicardDebug===void 0?void 0:_politicardDebug.mismatch)||[])].slice(-19).concat([mismatch])});// Clear, then log to console so user can copy/paste trace\nconsole.warn('POLITICARD DIAGNOSTIC: hand mismatch detected',mismatch);}}catch(e){// swallow diagnostic errors to avoid breaking rendering\nconsole.error('Diagnostic error',e);}},[gameState.hands]);const draw=useCallback(()=>{var _LAYOUT$background,_LAYOUT$background2;const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Detect influence increases and start animations\ntry{const currSnapshot={};const collect=c=>{var _c$uid2,_c$influence;if(!c)return;if(c.kind!=='pol')return;const uid=(_c$uid2=c.uid)!==null&&_c$uid2!==void 0?_c$uid2:c.id!=null?String(c.id):null;if(!uid)return;currSnapshot[uid]=(_c$influence=c.influence)!==null&&_c$influence!==void 0?_c$influence:0;};// board rows\n(gameState.board[1].aussen||[]).forEach(collect);(gameState.board[2].aussen||[]).forEach(collect);(gameState.board[1].innen||[]).forEach(collect);(gameState.board[2].innen||[]).forEach(collect);// permanent slots\ncollect(gameState.permanentSlots[1].government);collect(gameState.permanentSlots[2].government);collect(gameState.permanentSlots[1].public);collect(gameState.permanentSlots[2].public);const now=performance.now();Object.keys(currSnapshot).forEach(uid=>{var _currSnapshot$uid,_prevInfluencesRef$cu;const curr=(_currSnapshot$uid=currSnapshot[uid])!==null&&_currSnapshot$uid!==void 0?_currSnapshot$uid:0;const prev=(_prevInfluencesRef$cu=prevInfluencesRef.current[uid])!==null&&_prevInfluencesRef$cu!==void 0?_prevInfluencesRef$cu:curr;if(curr>prev){const delta=curr-prev;const list=influenceAnimRef.current.get(uid)||[];list.push({start:now,duration:900,amount:delta});influenceAnimRef.current.set(uid,list);}prevInfluencesRef.current[uid]=curr;});}catch(e){// ignore\n}// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);// Clear click zones\nclickZonesRef.current=[];// Background: prefer PNG if configured\nif((_LAYOUT$background=LAYOUT.background)!==null&&_LAYOUT$background!==void 0&&_LAYOUT$background.enabled&&(_LAYOUT$background2=LAYOUT.background)!==null&&_LAYOUT$background2!==void 0&&_LAYOUT$background2.src){if(backgroundImageRef.current){ctx.drawImage(backgroundImageRef.current,0,0,canvas.width,canvas.height);}else{ctx.fillStyle='#0c131b';ctx.fillRect(0,0,canvas.width,canvas.height);}}else{ctx.fillStyle='#0c131b';ctx.fillRect(0,0,canvas.width,canvas.height);}// Apply UI transform (new signature)\nconst{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);ctx.save();ctx.translate(offsetX,offsetY);ctx.scale(scale,scale);// Draw opponent board (top rows) - clickable im Dev Mode\n// Draw opponent board using new layout system\nconst opponentPublicRects=getPublicRects('opponent');const opponentGovRects=getGovernmentRects('opponent');// Draw opponent public slots\nopponentPublicRects.forEach((s,idx)=>{const card=gameState.board[2].innen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,2);// Register click zone in dev mode\nif(devMode){clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'slot_card',player:2,lane:'innen',index:idx,card}}));}}else{// draw placeholder symbol for empty public slot\nconst img=slotSymbolImgsRef.current.get('public');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.4);// Register empty slot click zone in dev mode\nif(devMode){clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:2,lane:'innen',index:idx}});}}});// Draw opponent government slots\nopponentGovRects.forEach((s,idx)=>{const card=gameState.board[2].aussen[idx];const corrActive=!!(gameState.pendingAbilitySelect&&gameState.pendingAbilitySelect.type==='corruption_steal');if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,2);// In dev mode, register click zone based on drawCardAt result\nif(devMode){clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'board_card',player:2,lane:'aussen',index:idx,card}}));}// When corruption target selection is active, register exact slot rectangle for click detection\nif(corrActive){clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'board_card',player:2,lane:'aussen',index:idx,card}});}}else{const img=slotSymbolImgsRef.current.get('government');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.1);// Register empty slot click zone only in dev mode\nif(devMode){clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:2,lane:'aussen',index:idx}});}}});// Draw opponent permanent slots (show icons even when not current)\ntry{const permGovZoneOpp=getZone('slot.permanent.government.opponent');if(permGovZoneOpp){const card=gameState.permanentSlots[2].government;const[ox,oy,ow,oh]=permGovZoneOpp.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.government.opponent',card,'permanent_government',2);}else{const img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,ox,oy,ow,oh,0.3);// Register empty slot click zone in dev mode\nif(devMode){clickZonesRef.current.push({x:ox,y:oy,w:ow,h:oh,data:{type:'empty_slot',slot:'permanent_government',player:2}});}}}}catch(e){}try{const permPubZoneOpp=getZone('slot.permanent.public.opponent');if(permPubZoneOpp){const card=gameState.permanentSlots[2].public;const[ox2,oy2,ow2,oh2]=permPubZoneOpp.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.public.opponent',card,'permanent_public',2);}else{const img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,ox2,oy2,ow2,oh2,0.7);// Register empty slot click zone in dev mode\nif(devMode){clickZonesRef.current.push({x:ox2,y:oy2,w:ow2,h:oh2,data:{type:'empty_slot',slot:'permanent_public',player:2}});}}}}catch(e){}// Draw player board (middle rows)\n// Draw player board using new layout system\nconst playerPublicRects=getPublicRects('player');const playerGovRects=getGovernmentRects('player');// Draw player public slots\nplayerPublicRects.forEach((s,idx)=>{const card=gameState.board[1].innen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,1);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'row_slot',player:1,lane:'innen',index:idx}}));}else{// Empty slot click zone and draw public symbol\n// Draw unified pulsing icon for empty public slot\nconst img=slotSymbolImgsRef.current.get('public');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.4);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:1,lane:'innen',index:idx}});}});// Draw player government slots\nplayerGovRects.forEach((s,idx)=>{const card=gameState.board[1].aussen[idx];if(card){const clickZone=drawCardAt(ctx,card,s.x,s.y,s.w,false,false,1);clickZonesRef.current.push(_objectSpread(_objectSpread({},clickZone),{},{data:{type:'row_slot',player:1,lane:'aussen',index:idx}}));}else{// Empty slot click zone and draw government symbol\nconst img=slotSymbolImgsRef.current.get('government');drawSlotIconWithPulse(ctx,img,s.x,s.y,s.w,s.h,0.1);clickZonesRef.current.push({x:s.x,y:s.y,w:s.w,h:s.h,data:{type:'row_slot',player:1,lane:'aussen',index:idx}});}});// --- GOV PLACEMENT SPRITESHEET OVERLAY (frame-based) ---\ntry{const sprites=govSpritesRef.current;const gif=govGifRef.current;const anims=visualEffects&&visualEffects.playAnimsRef&&visualEffects.playAnimsRef.current||[];// Start sprite animation when a playAnim for a gov-card is active and maps to a slot\nconst now=performance.now();// handle specialized 'hit:' playAnims which indicate target-hit sprites by slot key\nanims.forEach(a=>{try{if(typeof a.uid==='string'&&a.uid.indexOf('hit:')===0){const inner=a.uid.slice(4);// '1.aussen.0'\nif(!hitSpriteStateRef.current[inner]){hitSpriteStateRef.current[inner]={started:now,frameCount:25,frameDuration:30};}return;// don't treat as gov anim\n}}catch(e){}// existing gov/instant handling follows\n});// now run the original anims loop for gov/instant that depend on card uids\nanims.forEach(a=>{var _zone$data$player,_zone$data$lane,_zone$data$index;// find the zone/slot for this uid\nconst zone=clickZonesRef.current.find(z=>{var _z$data$card$uid2;return z.data&&z.data.card&&((_z$data$card$uid2=z.data.card.uid)!==null&&_z$data$card$uid2!==void 0?_z$data$card$uid2:String(z.data.card.id))===a.uid;});if(!zone)return;// determine if gov slot\nlet isGov=false;let isInstant=false;try{const dt=zone.data||{};if(dt.type==='row_slot'&&dt.lane==='aussen')isGov=true;if(dt.type==='board_card'&&dt.lane==='aussen')isGov=true;if(dt.slot&&typeof dt.slot==='string'&&dt.slot.includes('government'))isGov=true;if(dt.type==='activate_instant'||dt.slot&&typeof dt.slot==='string'&&dt.slot.includes('instant'))isInstant=true;}catch(e){}if(!isGov&&!isInstant)return;const player=(_zone$data$player=zone.data.player)!==null&&_zone$data$player!==void 0?_zone$data$player:1;const lane=(_zone$data$lane=zone.data.lane)!==null&&_zone$data$lane!==void 0?_zone$data$lane:'aussen';const idx=(_zone$data$index=zone.data.index)!==null&&_zone$data$index!==void 0?_zone$data$index:0;const key=\"\".concat(player,\".\").concat(lane,\".\").concat(idx);// initialize sprite state if not present\nif(isGov){if(!govSpriteStateRef.current[key]){govSpriteStateRef.current[key]={started:now,frameCount:14,frameDuration:40};// 14 frames @ ~40ms -> ~560ms\n}}if(isInstant){const instKey=\"\".concat(player,\".instant.\").concat(idx);if(!instantSpriteStateRef.current[instKey]){instantSpriteStateRef.current[instKey]={started:now,frameCount:14,frameDuration:40};}}});// draw running sprite animations per gov slot\nObject.keys(govSpriteStateRef.current).forEach(k=>{const st=govSpriteStateRef.current[k];const elapsed=now-st.started;const total=st.frameCount*st.frameDuration;if(elapsed>total){// animation finished; remove state\ndelete govSpriteStateRef.current[k];return;}const frame=Math.floor(elapsed/st.frameDuration);// parse key -> player.lane.index\nconst parts=k.split('.');const player=Number(parts[0])||1;const lane=parts[1]||'aussen';const index=Number(parts[2]||0);// compute slot rect for this gov slot (player or opponent board)\nconst rect=player===1?playerGovRects[index]:opponentGovRects[index];if(!rect)return;// spritesheet: frame N located at x = N*256, y = 0\nif(sprites&&sprites.complete){const sx=frame*256;const sy=0;const sw=256;const sh=256;// draw exactly matching the slot rect size to avoid scaling mismatches\nconst dx=rect.x;const dy=rect.y;ctx.drawImage(sprites,sx,sy,sw,sh,dx,dy,rect.w,rect.h);}else if(gif&&gif.complete){// fallback to static gif if spritesheet missing\nctx.drawImage(gif,rect.x,rect.y,rect.w,rect.h);}});// --- INSTANT INITIATIVE SPRITESHEET (draw on instant slot) ---\ntry{const spritesI=instantSpritesRef.current;const nowI=performance.now();Object.keys(instantSpriteStateRef.current).forEach(k=>{const st=instantSpriteStateRef.current[k];const elapsed=nowI-st.started;const total=st.frameCount*st.frameDuration;if(elapsed>total){delete instantSpriteStateRef.current[k];return;}const frame=Math.floor(elapsed/st.frameDuration);const parts=k.split('.');const player=Number(parts[0])||1;const index=Number(parts[2]||0);const rects=getSofortRect(player?'player':'opponent');// getSofortRect returns one rect; map by player/context â€” fallback to zone\nconst instantRect=getZone('slot.instant.player').rectPx;const[ix,iy,iw,ih]=instantRect;if(spritesI&&spritesI.complete){const sx=frame*256;const sy=0;const sw=256;const sh=256;ctx.drawImage(spritesI,sx,sy,sw,sh,ix,iy,iw,ih);}});}catch(e){}// --- HIT / TARGET SPRITESHEET (draw as overlay on targeted slot) ---\ntry{const spritesH=hitSpritesRef.current;const nowH=performance.now();Object.keys(hitSpriteStateRef.current).forEach(k=>{const st=hitSpriteStateRef.current[k];const elapsed=nowH-st.started;const total=st.frameCount*st.frameDuration;if(elapsed>total){delete hitSpriteStateRef.current[k];return;}const frame=Math.floor(elapsed/st.frameDuration);// parse key -> player.lane.index\nconst parts=k.split('.');const player=Number(parts[0])||1;const lane=parts[1]||'aussen';const index=Number(parts[2]||0);// compute slot rect for this gov slot (attempt gov then public)\nconst rect=(player===1?playerGovRects:opponentGovRects)[index]||(player===1?playerPublicRects:opponentPublicRects)[index];if(!rect)return;if(spritesH&&spritesH.complete){const sx=frame*256;const sy=0;const sw=256;const sh=256;const dx=rect.x;const dy=rect.y;ctx.drawImage(spritesH,sx,sy,sw,sh,dx,dy,rect.w,rect.h);}});}catch(e){}}catch(e){}// Draw player permanent slots (draw symbols if empty)\n// permanent government\nconst permGovZone=getZone('slot.permanent.government.player');if(permGovZone){const card=gameState.permanentSlots[1].government;const[x,y,w,h]=permGovZone.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.government.player',card,'permanent_government',1);}else{// Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent gov slot)\nconst img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,x,y,w,h,0.2);}}// permanent public\nconst permPubZone=getZone('slot.permanent.public.player');if(permPubZone){const card=gameState.permanentSlots[1].public;const[x2,y2,w2,h2]=permPubZone.rectPx;if(card){drawSingleSlot(ctx,'slot.permanent.public.player',card,'permanent_public',1);}else{// Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent public slot)\nconst img=slotSymbolImgsRef.current.get('dauerhaft');drawSlotIconWithPulse(ctx,img,x2,y2,w2,h2,0.9);}}// Draw instant slots (both players) and placeholder if empty\nconst instantPlayerZone=getZone('slot.instant.player');if(instantPlayerZone){const card=gameState.board[1].sofort[0];const[x,y,w,h]=instantPlayerZone.rectPx;if(card)drawSingleSlot(ctx,'slot.instant.player',card,'instant',1);else{// Use unified icon draw helper for instant slot\nconst img=slotSymbolImgsRef.current.get('sofort');drawSlotIconWithPulse(ctx,img,x,y,w,h,0.0);}}// Draw interventions strip (player)\n// We draw symbol if empty\nconst interventionsZone=getZone('interventions.player');if(interventionsZone){const[zx,zy,zw,zh]=interventionsZone.rectPx;const card=gameState.traps[1]&&gameState.traps[1][0];if(card)drawInterventionsP1(ctx);else{const img=slotSymbolImgsRef.current.get('intervention');drawSlotIconWithPulse(ctx,img,zx,zy,zw,zh,0.6);}}// Draw interventions strip (opponent) - nur im Dev Mode\nif(devMode){drawInterventionsP2(ctx);}// Draw hand (P1)\ndrawHandP1(ctx);// ðŸ”§ DEV MODE: Draw hand (P2) - nur im Dev Mode\nif(devMode){drawHandP2(ctx);}// Draw info panels\ndrawInfoPanels(ctx);// Draw corruption mode indicator\nconst corrActive=!!(gameState.pendingAbilitySelect&&gameState.pendingAbilitySelect.type==='corruption_steal');if(corrActive){ctx.save();ctx.fillStyle='rgba(255, 0, 0, 0.8)';ctx.font='bold 32px sans-serif';ctx.textAlign='center';ctx.fillText('ðŸ”¥ CORRUPTION TARGET SELECTION ACTIVE ðŸ”¥',960,100);ctx.fillStyle='rgba(255, 255, 0, 0.9)';ctx.font='bold 24px sans-serif';ctx.fillText('Click on opponent government card to target',960,140);ctx.restore();}// --- VISUAL EFFECTS: Particle bursts, card pop scale, initiative ripple & AP pop ---\ntry{const now=performance.now();const{particlesRef,popsRef,ripplesRef,apLabelsRef,reducedMotion}=visualEffects||{};const parts=particlesRef.current||[];if(!reducedMotion){for(let i=parts.length-1;i>=0;i--){const p=parts[i];const age=now-p.start;if(age>p.life){parts.splice(i,1);continue;}p.vy+=p.gravity||0.09;p.x+=p.vx;p.y+=p.vy;const t=1-age/p.life;ctx.save();ctx.globalAlpha=Math.max(0,Math.min(1,t));ctx.fillStyle=p.color||'#ffd166';ctx.beginPath();ctx.arc(p.x,p.y,(p.size||4)*t,0,Math.PI*2);ctx.fill();ctx.restore();}particlesRef.current=parts;const pops=popsRef.current||[];pops.forEach(pop=>{const p=Math.min(1,Math.max(0,(now-pop.started)/pop.duration));const eased=1+0.12*(1-Math.pow(1-p,3));const zone=clickZonesRef.current.find(z=>{var _z$data$card$uid3;return z.data&&z.data.card&&((_z$data$card$uid3=z.data.card.uid)!==null&&_z$data$card$uid3!==void 0?_z$data$card$uid3:String(z.data.card.id))===pop.uid;});if(!zone)return;ctx.save();ctx.translate(zone.x+zone.w/2,zone.y+zone.h/2);ctx.scale(eased,eased);ctx.globalAlpha=0.12*(1-p);ctx.fillStyle='#ffffff';ctx.fillRect(-zone.w/2,-zone.h/2,zone.w,zone.h);ctx.restore();});const ripples=ripplesRef.current||[];for(let i=ripples.length-1;i>=0;i--){const r=ripples[i];const p=Math.min(1,Math.max(0,(now-r.started)/r.duration));if(p>=1){ripples.splice(i,1);continue;}const radius=r.radius*(0.8+1.8*p);ctx.save();const g=ctx.createRadialGradient(r.cx,r.cy,radius*0.1,r.cx,r.cy,radius);g.addColorStop(0,\"rgba(255,255,255,\".concat(0.12*(1-p),\")\"));g.addColorStop(1,\"rgba(255,255,255,0)\");ctx.fillStyle=g;ctx.beginPath();ctx.arc(r.cx,r.cy,radius,0,Math.PI*2);ctx.fill();ctx.restore();if(r.showAp&&!r._apSpawned){apLabelsRef.current=apLabelsRef.current||[];apLabelsRef.current.push({x:r.apX,y:r.apY,started:now,duration:800,text:'+1'});r._apSpawned=true;}}ripplesRef.current=ripples;const apl=apLabelsRef.current||[];for(let i=apl.length-1;i>=0;i--){const l=apl[i];const p=Math.min(1,Math.max(0,(now-l.started)/l.duration));if(p>=1){apl.splice(i,1);continue;}ctx.save();ctx.globalAlpha=1-p;ctx.fillStyle='#ffdd57';ctx.font='bold 22px sans-serif';ctx.textAlign='center';ctx.fillText(l.text,l.x,l.y-20*p);ctx.restore();}apLabelsRef.current=apl;}else{const apl=apLabelsRef.current||[];for(let i=apl.length-1;i>=0;i--){const l=apl[i];const p=Math.min(1,Math.max(0,(now-l.started)/l.duration));if(p>=1){apl.splice(i,1);continue;}ctx.save();ctx.globalAlpha=1-p;ctx.fillStyle='#ffdd57';ctx.font='bold 18px sans-serif';ctx.textAlign='center';ctx.fillText(l.text,l.x,l.y-10*p);ctx.restore();}apLabelsRef.current=apl;}}catch(e){}// --- Overlay pass: draw influence pulse ring and +N labels on top of all cards ---\ntry{const now=performance.now();// iterate over stored anims\ninfluenceAnimRef.current.forEach((anims,uid)=>{// find card position by scanning clickZones\nconst zone=clickZonesRef.current.find(z=>{var _z$data$card$uid4;return z.data&&(z.data.card&&((_z$data$card$uid4=z.data.card.uid)!==null&&_z$data$card$uid4!==void 0?_z$data$card$uid4:String(z.data.card.id))===uid||z.data.card&&z.data.card.uid===uid);});if(!zone)return;const cx=zone.x+zone.w/2;const cy=zone.y+zone.h/2;// calculate aggregate pulse for this uid\nlet maxPulse=0;let totalAmount=0;const remaining=[];anims.forEach(a=>{const p=Math.min(1,Math.max(0,(now-a.start)/a.duration));const pulse=Math.pow(Math.max(0,1-p),2);if(pulse>maxPulse)maxPulse=pulse;if(p<1){remaining.push(a);totalAmount+=a.amount;}});// update list\nif(remaining.length>0)influenceAnimRef.current.set(uid,remaining);else influenceAnimRef.current.delete(uid);if(maxPulse>0.001){// draw a soft ring to the right-bottom of influence number\nconst ringRadius=Math.max(8,zone.w*0.08)*(1+maxPulse*0.6);const ringX=zone.x+zone.w-28;// near bottom-right where influence text lives\nconst ringY=zone.y+zone.h-20;ctx.save();ctx.beginPath();ctx.strokeStyle=\"rgba(46, 204, 113, \".concat(0.9*maxPulse,\")\");ctx.lineWidth=Math.max(2,Math.ceil(6*maxPulse));ctx.arc(ringX,ringY,ringRadius,0,Math.PI*2);ctx.stroke();ctx.restore();}if(totalAmount>0){// floating +N to the right of influence number\nconst labelX=zone.x+zone.w-12;const labelY=zone.y+zone.h-32-Math.random()*6;// slight jitter\nctx.save();ctx.fillStyle='#2ecc71';ctx.font='bold 16px sans-serif';ctx.textAlign='left';ctx.textBaseline='middle';ctx.fillText(\"+\".concat(totalAmount),labelX,labelY);ctx.restore();}});}catch(e){// ignore overlay errors\n}// --- Outline pass: draw a subtle, slightly pulsing 257x257 square around 256x256 slots ---\ntry{const now2=performance.now();clickZonesRef.current.forEach((z,i)=>{if(!z)return;const w=z.w||0;const h=z.h||0;// only target 256x256 slot-sized zones (covers the icons)\nif(Math.abs(w-256)>0.1||Math.abs(h-256)>0.1)return;const x=z.x;const y=z.y;// Color palette (rgb)\nconst rgbTeal='20,184,166';const rgbBurg='127,29,29';const rgbPurple='139,92,246';const rgbYellow='250,204,21';const rgbOrange='251,146,60';// Determine slot semantic\nlet slotType='default';try{const dt=z.data||{};if(dt.slot&&typeof dt.slot==='string'){if(dt.slot.includes('government'))slotType='government';else if(dt.slot.includes('public'))slotType='public';else if(dt.slot.includes('permanent'))slotType='permanent';else if(dt.slot.includes('instant'))slotType='instant';}if(dt.type==='row_slot'&&dt.lane==='aussen')slotType='government';if(dt.type==='row_slot'&&dt.lane==='innen')slotType='public';if(dt.type==='trap_p1'||dt.type==='trap_p2'||dt.card&&dt.card.kind==='trap')slotType='intervention';if(dt.type==='activate_instant'||dt.slot==='instant')slotType='instant';if(dt.slot==='permanent_government'||dt.slot==='permanent_public'||dt.slot==='permanent')slotType='permanent';}catch(e){}const pulse=0.5+0.5*Math.sin(now2/350+i);const alpha=0.06+0.12*pulse;// subtle alpha\nconst lw=1+2*pulse;// line width between 1 and 3\n// Create gradient based on slot type\nlet grad=null;try{grad=ctx.createLinearGradient(x,y,x+w,y+h);if(slotType==='government'){grad.addColorStop(0,\"rgba(\".concat(rgbTeal,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbBurg,\",1)\"));}else if(slotType==='public'){grad.addColorStop(0,\"rgba(\".concat(rgbBurg,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbTeal,\",1)\"));}else if(slotType==='permanent'){grad.addColorStop(0,\"rgba(\".concat(rgbPurple,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbPurple,\",1)\"));}else if(slotType==='instant'){grad.addColorStop(0,\"rgba(\".concat(rgbYellow,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbYellow,\",1)\"));}else if(slotType==='intervention'){grad.addColorStop(0,\"rgba(\".concat(rgbOrange,\",1)\"));grad.addColorStop(1,\"rgba(\".concat(rgbOrange,\",1)\"));}else{grad.addColorStop(0,\"rgba(255,255,255,1)\");grad.addColorStop(1,\"rgba(255,255,255,1)\");}}catch(e){grad=null;}ctx.save();if(grad)ctx.strokeStyle=grad;else ctx.strokeStyle=\"rgba(255,255,255,\".concat(alpha.toFixed(3),\")\");ctx.globalAlpha=alpha;ctx.lineWidth=lw;// draw 257x257 centered so that it encloses the 256 slot\nctx.strokeRect(x-0.5,y-0.5,w+1,h+1);ctx.restore();});}catch(e){// ignore outline errors\n}ctx.restore();// expose zones for debug snapshot\nwindow.__politicardDebug={uiTransform:getUiTransform(canvas.width,canvas.height),canvasSize:{width:canvas.width,height:canvas.height},zones:LAYOUT.zones,clickZones:clickZonesRef.current.slice(0,1000)};// Build canonical slotPositions map for animations/debugging\ntry{const map={};clickZonesRef.current.forEach(z=>{const d=z.data||{};// support row_slot, board_card, slot_card shapes\nif(d.type==='row_slot'||d.type==='board_card'||d.type==='slot_card'||d.type==='hand_p1'||d.type==='hand_p2'){var _d$player,_d$lane;const player=(_d$player=d.player)!==null&&_d$player!==void 0?_d$player:d.type==='hand_p2'?2:1;const lane=(_d$lane=d.lane)!==null&&_d$lane!==void 0?_d$lane:typeof d.slot==='string'?d.slot:d.type==='hand_p2'?'hand':'unknown';let index;if(d.index!=null){index=d.index;}else if(d.card){// prefer explicit slotIndex, fallback to card.index, otherwise 0\nindex=d.card.slotIndex!=null?d.card.slotIndex:d.card.index!=null?d.card.index:0;}else{index=0;}const key=\"\".concat(player,\".\").concat(lane,\".\").concat(index);map[key]={x:z.x,y:z.y,w:z.w,h:z.h,cx:z.x+z.w/2,cy:z.y+z.h/2};}});slotPositionsRef.current=map;window.__politicardDebug=_objectSpread(_objectSpread({},window.__politicardDebug),{},{slotPositions:slotPositionsRef.current});}catch(e){// don't let debug mapping break rendering\n}// Run diagnostics after canvas is fully rendered\nrunDiagnostics();},[drawLane,drawHandP1,drawHandP2,drawInterventionsP1,drawInterventionsP2,drawPermanentSlotsP1,drawPermanentSlotsP2,drawInstantSlots,drawInfoPanels,devMode,runDiagnostics]);const DRAW_LAYOUT_OVERLAY=false;// force off per new layout system\n// Load slot symbol images once\nuseEffect(()=>{const load=(key,src)=>{const img=new Image();img.onload=()=>{slotSymbolImgsRef.current.set(key,img);};img.onerror=()=>{console.warn('Failed to load slot icon',src);};img.src=src;};// load all slot icons\nload('public',publicSymbolUrl);load('sofort',sofortSymbolUrl);load('dauerhaft',dauerhaftSymbolUrl);load('government',governmentSymbolUrl);load('intervention',interventionSymbolUrl);// load test GIF for gov overlay\ntry{const img=new Image();img.onload=()=>{govGifRef.current=img;};img.onerror=()=>{console.warn('Failed to load gov overlay gif',govPlaceGifUrl);};img.src=govPlaceGifUrl;}catch(e){}// load spritesheet for placement animation\ntry{const s=new Image();s.onload=()=>{govSpritesRef.current=s;};s.onerror=()=>{console.warn('Failed to load gov spritesheet',govPlaceSpritesheetUrl);};s.src=govPlaceSpritesheetUrl;}catch(e){}// load spritesheet for instant initiative activation\ntry{const si=new Image();si.onload=()=>{instantSpritesRef.current=si;};si.onerror=()=>{console.warn('Failed to load instant spritesheet',instantSpritesheetUrl);};si.src=instantSpritesheetUrl;}catch(e){}// load spritesheet for hit/target animation (25 frames)\ntry{const h=new Image();h.onload=()=>{hitSpritesRef.current=h;};h.onerror=()=>{console.warn('Failed to load hit spritesheet',hitSpritesheetUrl);};h.src=hitSpritesheetUrl;}catch(e){}// ensure first draw\nrequestAnimationFrame(draw);},[draw]);// Expose debug trigger to manually start gov sprite animation by slot-key or uid\nuseEffect(()=>{window.__pc_triggerGovAnim=id=>{try{var _zone$data$player2,_zone$data$lane2,_zone$data$index2;const now=performance.now();// if id is slot key like '1.aussen.2'\nif(typeof id==='string'&&id.indexOf('.')>=0){govSpriteStateRef.current[id]={started:now,frameCount:14,frameDuration:40};return;}// otherwise try to resolve as uid/id to a clickZone\nconst uid=id;const zone=clickZonesRef.current.find(z=>{var _z$data$card$uid5;return z.data&&z.data.card&&(((_z$data$card$uid5=z.data.card.uid)!==null&&_z$data$card$uid5!==void 0?_z$data$card$uid5:String(z.data.card.id))===uid||z.data.card.id===uid);});if(!zone){console.warn('pc_triggerGovAnim: no slot found for uid',uid);return;}const player=(_zone$data$player2=zone.data.player)!==null&&_zone$data$player2!==void 0?_zone$data$player2:1;const lane=(_zone$data$lane2=zone.data.lane)!==null&&_zone$data$lane2!==void 0?_zone$data$lane2:zone.data.slot&&typeof zone.data.slot==='string'?zone.data.slot:'aussen';const index=(_zone$data$index2=zone.data.index)!==null&&_zone$data$index2!==void 0?_zone$data$index2:0;const key=\"\".concat(player,\".\").concat(lane,\".\").concat(index);govSpriteStateRef.current[key]={started:now,frameCount:14,frameDuration:40};}catch(e){console.warn('pc_triggerGovAnim error',e);}};// expose easy alias\ntry{window.pc_triggerGovAnim=window.__pc_triggerGovAnim;}catch(e){}return()=>{delete window.__pc_triggerGovAnim;};},[]);// Expose debug trigger for hit animation (key: '1.aussen.0' or uid)\nuseEffect(()=>{window.__pc_triggerHitAnim=id=>{try{var _zone$data$player3,_zone$data$lane3,_zone$data$index3;const now=performance.now();// if id is slot key like '1.aussen.2'\nif(typeof id==='string'&&id.indexOf('.')>=0){hitSpriteStateRef.current[id]={started:now,frameCount:25,frameDuration:30};return;}// otherwise try to resolve as uid/id to a clickZone\nconst uid=id;const zone=clickZonesRef.current.find(z=>{var _z$data$card$uid6;return z.data&&z.data.card&&(((_z$data$card$uid6=z.data.card.uid)!==null&&_z$data$card$uid6!==void 0?_z$data$card$uid6:String(z.data.card.id))===uid||z.data.card.id===uid);});if(!zone){console.warn('pc_triggerHitAnim: no slot found for uid',uid);return;}const player=(_zone$data$player3=zone.data.player)!==null&&_zone$data$player3!==void 0?_zone$data$player3:1;const lane=(_zone$data$lane3=zone.data.lane)!==null&&_zone$data$lane3!==void 0?_zone$data$lane3:zone.data.slot&&typeof zone.data.slot==='string'?zone.data.slot:'aussen';const index=(_zone$data$index3=zone.data.index)!==null&&_zone$data$index3!==void 0?_zone$data$index3:0;const key=\"\".concat(player,\".\").concat(lane,\".\").concat(index);hitSpriteStateRef.current[key]={started:now,frameCount:25,frameDuration:30};}catch(e){console.warn('pc_triggerHitAnim error',e);}};try{window.pc_triggerHitAnim=window.__pc_triggerHitAnim;}catch(e){}return()=>{delete window.__pc_triggerHitAnim;};},[]);// Redraw when game state or selection changes\nuseEffect(()=>{requestAnimationFrame(draw);},[gameState,selectedHandIndex,draw]);// Continuous render loop to keep canvas updated without relying on external state refs\nuseEffect(()=>{let frame;const loop=()=>{draw();frame=requestAnimationFrame(loop);};frame=requestAnimationFrame(loop);return()=>cancelAnimationFrame(frame);},[draw]);const handleCardClick=useCallback(data=>{// Corruption target selection: intercept board card clicks for opponent government\nif(corruptionSelectActorRef.current&&data&&data.type==='board_card'){try{const actor=corruptionSelectActorRef.current;const victim=actor===1?2:1;if(data.player===victim&&(data.lane==='aussen'||data.lane==='government')){var _data$card$uid,_data$card,_data$card2;const uid=(_data$card$uid=(_data$card=data.card)===null||_data$card===void 0?void 0:_data$card.uid)!==null&&_data$card$uid!==void 0?_data$card$uid:(_data$card2=data.card)===null||_data$card2===void 0?void 0:_data$card2.id;if(uid!=null){corruptionSelectActorRef.current=null;try{window.dispatchEvent(new CustomEvent('pc:corruption_target_selected',{detail:{player:actor,targetUid:uid}}));}catch(e){}return;// do not propagate\n}}}catch(e){}}// Hand-Klick\nif(data.type==='hand_p1'){var _data$card$uid2,_data$card3,_data$card4,_gameState$hands;const uid=(_data$card$uid2=(_data$card3=data.card)===null||_data$card3===void 0?void 0:_data$card3.uid)!==null&&_data$card$uid2!==void 0?_data$card$uid2:(_data$card4=data.card)===null||_data$card4===void 0?void 0:_data$card4.id;const stateHand=((_gameState$hands=gameState.hands)===null||_gameState$hands===void 0?void 0:_gameState$hands[1])||[];const idxInState=stateHand.findIndex(c=>{var _c$uid3;return((_c$uid3=c.uid)!==null&&_c$uid3!==void 0?_c$uid3:c.id)===uid;});onCardClick(data);return;}// Slot-Klick\nif(data.type==='row_slot'){var _gameState$board$1$in,_gameState$board,_gameState$board$,_gameState$board$1$au,_gameState$board2,_gameState$board2$;const lane=data.lane;const cap=getLaneCapacity(lane);// Hole aktuelle Row-LÃ¤nge aus gameState\nconst rowCards=lane==='public'?(_gameState$board$1$in=(_gameState$board=gameState.board)===null||_gameState$board===void 0?void 0:(_gameState$board$=_gameState$board[1])===null||_gameState$board$===void 0?void 0:_gameState$board$.innen)!==null&&_gameState$board$1$in!==void 0?_gameState$board$1$in:[]:(_gameState$board$1$au=(_gameState$board2=gameState.board)===null||_gameState$board2===void 0?void 0:(_gameState$board2$=_gameState$board2[1])===null||_gameState$board2$===void 0?void 0:_gameState$board2$.aussen)!==null&&_gameState$board$1$au!==void 0?_gameState$board$1$au:[];if(rowCards.length>=cap){// Optional: UI Feedback\nconsole.warn(\"Row \".concat(lane,\" is full (\").concat(rowCards.length,\"/\").concat(cap,\")\"));return;}onCardClick(data);return;}// Andere Klicks (empty_slot, board_card, etc.)\nonCardClick(data);},[gameState,onCardClick]);const handleClick=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);const mx=(e.clientX-rect.left-offsetX)/scale;const my=(e.clientY-rect.top-offsetY)/scale;const hit=clickZonesRef.current.find(z=>mx>=z.x&&mx<=z.x+z.w&&my>=z.y&&my<=z.y+z.h);if(hit){console.debug('[CanvasClick] mx,my,hit:',mx,my,hit.data);try{// If user clicked a drawn card in an instant slot, normalize to activate_instant\nconst d=hit.data||{};if(d.type==='slot_card'&&d.slot==='instant'){handleCardClick({type:'activate_instant',player:d.player||1,card:d.card});return;}// Fallback: if there's an explicit activate_instant zone, pass through\nif(d.type==='activate_instant'){handleCardClick(d);return;}}catch(err){}handleCardClickInternal(hit.data);}},[handleCardClick]);const handleMouseMove=useCallback(e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const{scale,offsetX,offsetY}=getUiTransform(canvas.width,canvas.height);const mx=(e.clientX-rect.left-offsetX)/scale;const my=(e.clientY-rect.top-offsetY)/scale;const hit=clickZonesRef.current.find(z=>mx>=z.x&&mx<=z.x+z.w&&my>=z.y&&my<=z.y+z.h);if(hit){var _hit$data$card;console.log('[hover]',hit.data.type,(_hit$data$card=hit.data.card)===null||_hit$data$card===void 0?void 0:_hit$data$card.name);onCardHover(_objectSpread(_objectSpread({},hit.data),{},{x:e.clientX,y:e.clientY}));}else{onCardHover(null);}},[onCardHover]);const handleWheel=useCallback(e=>{// only enable when player1 has more slots than visible\nconst handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;const zone=getZone('hand.player');if(!zone)return;if(handLen<=5)return;// nothing to scroll\n// Prevent page scrolling when over canvas\ne.preventDefault();// accumulate target offset (invert so wheel down moves cards up)\n// Each wheel step moves by 48px per delta unit\nconst delta=Math.sign(e.deltaY)*48;// compute slot height more robustly\nconst slots=computeSlotRects(zone);const slotH=slots&&slots.length>0?slots[0].h:zone.rectPx[3]/5;const visible=5;const maxOffset=-(Math.max(0,handLen-visible)*slotH);handScrollTargetRef.current=Math.max(Math.min(handScrollTargetRef.current-delta,0),maxOffset);},[gameState.hands]);const handleTouchStart=useCallback(e=>{if(!e.touches||e.touches.length===0)return;const handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;if(handLen<=5)return;isTouchingRef.current=true;const y=e.touches[0].clientY;touchStartYRef.current=y;lastTouchYRef.current=y;e.preventDefault();},[gameState.hands]);const handleTouchMove=useCallback(e=>{var _lastTouchYRef$curren;if(!isTouchingRef.current)return;if(!e.touches||e.touches.length===0)return;const y=e.touches[0].clientY;const last=(_lastTouchYRef$curren=lastTouchYRef.current)!==null&&_lastTouchYRef$curren!==void 0?_lastTouchYRef$curren:y;const dy=y-last;// positive when moving down\nlastTouchYRef.current=y;// invert so dragging up moves cards up\nconst delta=-dy;const handLen=gameState.hands&&gameState.hands[1]?gameState.hands[1].length:0;const zone=getZone('hand.player');if(!zone)return;const slots=computeSlotRects(zone);const slotH=slots&&slots.length>0?slots[0].h:zone.rectPx[3]/5;const visible=5;const maxOffset=-(Math.max(0,handLen-visible)*slotH);handScrollTargetRef.current=Math.max(Math.min(handScrollTargetRef.current+delta,0),maxOffset);e.preventDefault();},[gameState.hands]);const handleTouchEnd=useCallback(e=>{isTouchingRef.current=false;touchStartYRef.current=null;lastTouchYRef.current=null;},[]);// Expose debug trigger to manually start instant sprite animation by slot-key or uid\nuseEffect(()=>{window.__pc_triggerInstantAnim=key=>{const now=performance.now();instantSpriteStateRef.current[key||'1.instant.0']={started:now,frameCount:14,frameDuration:40};};// alias\ntry{window.pc_triggerInstantAnim=window.__pc_triggerInstantAnim;}catch(e){}return()=>{delete window.__pc_triggerGovAnim;delete window.__pc_triggerInstantAnim;};},[]);// Click handler wrapper for corruption selection\nconst handleCardClickInternal=useCallback(data=>{const sel=gameState.pendingAbilitySelect;if(sel&&sel.type==='corruption_steal'){// Accept clicks on either actual card sprites (with uid) or on empty row_slot hitboxes.\nif(data.player!==sel.actorPlayer&&data.lane==='aussen'){let targetUid=data.uid;// If we got a row_slot hit (no uid), map indexâ†’uid from board state\nif(!targetUid&&data.type==='row_slot'){try{var _board5,_board5$p,_board5$p$aussen;const p=data.player;const idx=data.index;const card=(_board5=gameState.board)===null||_board5===void 0?void 0:(_board5$p=_board5[p])===null||_board5$p===void 0?void 0:(_board5$p$aussen=_board5$p.aussen)===null||_board5$p$aussen===void 0?void 0:_board5$p$aussen[idx];targetUid=card===null||card===void 0?void 0:card.uid;}catch(e){}}if(targetUid){try{console.debug('[CORR] forwarding uid',targetUid,'actorPlayer=',sel.actorPlayer);window.dispatchEvent(new CustomEvent('pc:corruption_pick_target',{detail:{player:sel.actorPlayer,targetUid}}));// Also open small confirmation overlay via DOM event for modal convenience\ntry{window.dispatchEvent(new CustomEvent('pc:corruption_target_selected',{detail:{player:sel.actorPlayer,targetUid}}));}catch(e){}}catch(e){}return;// consume click\n}}}onCardClick(data);},[gameState,onCardClick]);useEffect(()=>{const onDiceResult=()=>{// remove corruption modal if exists\nconst el=document.getElementById('pc-corruption-modal');if(el)el.remove();corruptionSelectActorRef.current=null;};window.addEventListener('pc:dice_result',onDiceResult);return()=>window.removeEventListener('pc:dice_result',onDiceResult);},[]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:1920,height:1080,style:{display:'block',width:'100%',height:'100%',imageRendering:'auto'},onClick:handleClick,onMouseMove:handleMouseMove,onWheel:handleWheel,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd});};","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useVisualEffectsSafe","LAYOUT","getZone","computeSlotRects","getUiTransform","getLaneCapacity","getPublicRects","getGovernmentRects","getSofortRect","sortHandCards","getCardImagePath","influenceIconUrl","publicSymbolUrl","sofortSymbolUrl","dauerhaftSymbolUrl","governmentSymbolUrl","interventionSymbolUrl","govPlaceGifUrl","govPlaceSpritesheetUrl","instantSpritesheetUrl","hitSpritesheetUrl","jsx","_jsx","isCorruptionSelection","state","player","sel","pendingAbilitySelect","type","actorPlayer","GameCanvas","_ref","gameState","selectedHandIndex","onCardClick","onCardHover","devMode","handler","ev","_ev$detail","detail","dice","document","querySelector","window","dispatchEvent","CustomEvent","e","addEventListener","removeEventListener","canvasRef","visualEffects","clickZonesRef","handScrollTargetRef","handScrollCurrentRef","handScrollEnabledRef","touchStartYRef","lastTouchYRef","isTouchingRef","backgroundImageRef","imageCacheRef","Map","influenceImgRef","influenceAnimRef","prevInfluencesRef","slotSymbolImgsRef","slotPositionsRef","govGifRef","govSpritesRef","hitSpritesRef","govSpriteStateRef","instantSpritesRef","instantSpriteStateRef","hitSpriteStateRef","corruptionSelectActorRef","onEnterCorruptionSelect","_ev$detail2","actor","console","log","current","error","drawSlotIconWithPulse","ctx","img","x","y","w","h","phase","arguments","length","undefined","complete","now","performance","base","pulseRange","period","pulse","Math","sin","save","globalAlpha","drawImage","grad","createLinearGradient","addColorStop","concat","globalCompositeOperation","fillStyle","fillRect","restore","Image","src","drawCardAt","card","size","_shield","selected","showAPCost","extraAlpha","_uid","uid","id","list","playAnimsRef","__pc_play_anims","anim","find","a","p","min","max","started","duration","pow","dx","dy","s","floor","cached","get","naturalWidth","onload","set","kind","_influence","barH","fontSize","font","textAlign","textBaseline","fillText","influence","protected","shield","deactivated","_influence2","badgeHeight","badgeWidth","badgeX","badgeY","beginPath","roundRect","fill","strokeStyle","lineWidth","strokeRect","getSlotDisplayName","zoneId","index","slotNumber","includes","drawLane","lane","clickable","zone","slots","arr","board","forEach","idx","bgColor","isSelected","hands","clickZone","textY","name","push","_objectSpread","data","slotName","drawHandP1","hand","target","offsetY","round","i","originalIndex","findIndex","c","isSel","sx","sy","drawHandP2","rectPx","drawInterventionsP1","traps","zx","zy","zw","zh","drawInterventionsP2","drawSingleSlot","clickType","slot","onTargetSelected","targetUid","_board","_board2","_board2$aussen","_board3","_board4","_board4$aussen","el","getElementById","createElement","style","position","left","top","transform","padding","background","border","borderRadius","zIndex","color","fontFamily","body","appendChild","aussen","innerHTML","rollBtn","cancelBtn","onclick","disabled","innerText","remove","debug","drawPermanentSlotsP1","permanentSlots","government","public","drawPermanentSlotsP2","drawInstantSlots","sofortPlayerCard","sofort","sofortOppCard","getActiveKeywordsAndSubcategories","allCards","innen","filter","keywords","Set","subcategories","tag","add","publicCard","oligarchNames","platformNames","movementNames","ngoNames","intelligenceNames","mediaNames","Array","from","drawInfoPanels","govPanelX","govPanelY","govPanelW","govPanelH","keyword","pubPanelX","pubPanelY","pubPanelW","pubPanelH","subcategory","displayName","substring","runDiagnostics","handZones","z","uiUIDs","map","_z$data$card$uid","Boolean","stateHand","stateUIDs","_c$uid","missingInState","u","missingInUI","_politicardDebug","mismatch","ts","Date","uiCount","stateCount","stack","Error","__politicardDebug","slice","warn","draw","_LAYOUT$background","_LAYOUT$background2","canvas","getContext","currSnapshot","collect","_c$uid2","_c$influence","String","Object","keys","_currSnapshot$uid","_prevInfluencesRef$cu","curr","prev","delta","start","amount","clearRect","width","height","enabled","scale","offsetX","translate","opponentPublicRects","opponentGovRects","corrActive","permGovZoneOpp","ox","oy","ow","oh","permPubZoneOpp","ox2","oy2","ow2","oh2","playerPublicRects","playerGovRects","sprites","gif","anims","indexOf","inner","frameCount","frameDuration","_zone$data$player","_zone$data$lane","_zone$data$index","_z$data$card$uid2","isGov","isInstant","dt","key","instKey","k","st","elapsed","total","frame","parts","split","Number","rect","sw","sh","spritesI","nowI","rects","instantRect","ix","iy","iw","ih","spritesH","nowH","permGovZone","permPubZone","x2","y2","w2","h2","instantPlayerZone","interventionsZone","particlesRef","popsRef","ripplesRef","apLabelsRef","reducedMotion","age","life","splice","vy","gravity","vx","t","arc","PI","pops","pop","eased","_z$data$card$uid3","ripples","r","radius","g","createRadialGradient","cx","cy","showAp","_apSpawned","apX","apY","text","apl","l","_z$data$card$uid4","maxPulse","totalAmount","remaining","delete","ringRadius","ringX","ringY","ceil","stroke","labelX","labelY","random","now2","abs","rgbTeal","rgbBurg","rgbPurple","rgbYellow","rgbOrange","slotType","alpha","lw","toFixed","uiTransform","canvasSize","zones","clickZones","d","_d$player","_d$lane","slotIndex","slotPositions","DRAW_LAYOUT_OVERLAY","load","onerror","si","requestAnimationFrame","__pc_triggerGovAnim","_zone$data$player2","_zone$data$lane2","_zone$data$index2","_z$data$card$uid5","pc_triggerGovAnim","__pc_triggerHitAnim","_zone$data$player3","_zone$data$lane3","_zone$data$index3","_z$data$card$uid6","pc_triggerHitAnim","loop","cancelAnimationFrame","handleCardClick","victim","_data$card$uid","_data$card","_data$card2","_data$card$uid2","_data$card3","_data$card4","_gameState$hands","idxInState","_c$uid3","_gameState$board$1$in","_gameState$board","_gameState$board$","_gameState$board$1$au","_gameState$board2","_gameState$board2$","cap","rowCards","handleClick","getBoundingClientRect","mx","clientX","my","clientY","hit","err","handleCardClickInternal","handleMouseMove","_hit$data$card","handleWheel","handLen","preventDefault","sign","deltaY","slotH","visible","maxOffset","handleTouchStart","touches","handleTouchMove","_lastTouchYRef$curren","last","handleTouchEnd","__pc_triggerInstantAnim","pc_triggerInstantAnim","_board5","_board5$p","_board5$p$aussen","onDiceResult","ref","display","imageRendering","onClick","onMouseMove","onWheel","onTouchStart","onTouchMove","onTouchEnd"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/GameCanvas.tsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { useVisualEffects, useVisualEffectsSafe } from '../context/VisualEffectsContext';\nimport { GameState, Card, PoliticianCard, Player, Lane } from '../types/game';\nimport { LAYOUT, getZone, computeSlotRects, getUiTransform, getLaneCapacity, getPublicRects, getGovernmentRects, getSofortRect } from '../ui/layout';\nimport { drawCardImage, sortHandCards } from '../utils/gameUtils';\nimport { getNetApCost } from '../utils/ap';\nimport { getCardImagePath } from '../data/gameData';\nimport influenceIconUrl from '../assets/icons/influence.svg';\nimport publicSymbolUrl from '../assets/icons/public_symbol.png';\nimport sofortSymbolUrl from '../assets/icons/sofort_initiative_symbol.png';\nimport dauerhaftSymbolUrl from '../assets/icons/dauerhaft_initative.png';\nimport governmentSymbolUrl from '../assets/icons/government_symbol.png';\nimport interventionSymbolUrl from '../assets/icons/intervention_symbol.png';\nimport govPlaceGifUrl from '../assets/effect_gif/place_card_gov_256x256.gif';\nimport govPlaceSpritesheetUrl from '../ui/sprites/playcard_gov_256x256_14.png';\nimport instantSpritesheetUrl from '../ui/sprites/activate_trap_hit_target_256x256_16x2.png';\nimport hitSpritesheetUrl from '../ui/sprites/activate_inititive_hit_target_256x256_16_2rows.png';\n\ninterface GameCanvasProps {\n  gameState: GameState;\n  selectedHandIndex: number | null;\n  onCardClick: (data: any) => void;\n  onCardHover: (data: any) => void;\n  devMode?: boolean; // ðŸ”§ DEV MODE: Show P2 hand when true\n}\n\n// Helper: is corruption target selection active\nfunction isCorruptionSelection(state: GameState, player: Player) {\n  const sel: any = (state as any).pendingAbilitySelect;\n  return sel && sel.type === 'corruption_steal' && sel.actorPlayer === player;\n}\n\nexport const GameCanvas: React.FC<GameCanvasProps> = ({\n  gameState,\n  selectedHandIndex,\n  onCardClick,\n  onCardHover,\n  devMode = false,\n}) => {\n  // listen for dice roll requests from resolver and trigger Dice3D\n  useEffect(() => {\n    const handler = (ev: any) => {\n      try {\n        const player = ev.detail?.player;\n        // find Dice3D canvas on page and trigger click (it rolls on click)\n        const dice = document.querySelector('canvas') as HTMLCanvasElement | null;\n        // better: dispatch global event so App-level Dice3D component can roll programmatically\n        window.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll', { detail: { player } }));\n      } catch (e) {}\n    };\n    window.addEventListener('pc:request_dice_roll', handler as EventListener);\n    return () => window.removeEventListener('pc:request_dice_roll', handler as EventListener);\n  }, []);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const visualEffects = useVisualEffectsSafe();\n  const clickZonesRef = useRef<Array<{ x: number; y: number; w: number; h: number; data: any }>>([]);\n  // Smooth vertical scroll for P1 hand when it has more than visible slots\n  const handScrollTargetRef = useRef<number>(0);\n  const handScrollCurrentRef = useRef<number>(0);\n  const handScrollEnabledRef = useRef<boolean>(true);\n  // Touch handling refs\n  const touchStartYRef = useRef<number | null>(null);\n  const lastTouchYRef = useRef<number | null>(null);\n  const isTouchingRef = useRef<boolean>(false);\n  const backgroundImageRef = useRef<HTMLImageElement | null>(null);\n  const imageCacheRef = useRef<Map<string, HTMLImageElement>>(new Map());\n  const influenceImgRef = useRef<HTMLImageElement | null>(null);\n  // Animation state for visual influence changes: Map<uid, Array<Anim>>\n  const influenceAnimRef = useRef<Map<string, Array<{ start: number; duration: number; amount: number }>>>(new Map());\n  // Previous per-card influence snapshot to detect increases\n  const prevInfluencesRef = useRef<Record<string, number>>({});\n  // Slot symbol images\n  const slotSymbolImgsRef = useRef<Map<string, HTMLImageElement>>(new Map());\n  // Map of canonical slot positions for animations: key -> {x,y,w,h,cx,cy}\n  const slotPositionsRef = useRef<Record<string, { x: number; y: number; w: number; h: number; cx: number; cy: number }>>({});\n  // Temporary test GIF for government slots\n  const govGifRef = useRef<HTMLImageElement | null>(null);\n  const govSpritesRef = useRef<HTMLImageElement | null>(null);\n  // hit (target) spritesheet (25 frames)\n  const hitSpritesRef = useRef<HTMLImageElement | null>(null);\n  // sprite animation state keyed by slot-key (player.lane.index)\n  const govSpriteStateRef = useRef<Record<string, { started: number; frameCount: number; frameDuration: number }>>({});\n  const instantSpritesRef = useRef<HTMLImageElement | null>(null);\n  const instantSpriteStateRef = useRef<Record<string, { started: number; frameCount: number; frameDuration: number }>>({});\n\n  const hitSpriteStateRef = useRef<Record<string, { started: number; frameCount: number; frameDuration: number }>>({});\n\n  // Corruption (Bestechungsskandal) target selection mode\n  const corruptionSelectActorRef = useRef<Player | null>(null);\n  useEffect(() => {\n    const onEnterCorruptionSelect = (ev: any) => {\n      try {\n        const actor = ev.detail?.player as Player | undefined;\n        console.log('ðŸ”¥ GAMECANVAS RECEIVED pc:corruption_select_target - Actor:', actor);\n        corruptionSelectActorRef.current = actor ?? null;\n        console.log('ðŸ”¥ SET corruptionSelectActorRef.current:', corruptionSelectActorRef.current);\n      } catch (e) {\n        console.error('ðŸ”¥ ERROR in corruption select handler:', e);\n      }\n    };\n    window.addEventListener('pc:corruption_select_target', onEnterCorruptionSelect as EventListener);\n    return () => window.removeEventListener('pc:corruption_select_target', onEnterCorruptionSelect as EventListener);\n  }, []);\n\n  // Helper: draw slot icons with uniform pulsing opacity and a light reflection\n  const drawSlotIconWithPulse = useCallback((ctx: CanvasRenderingContext2D, img: HTMLImageElement | undefined, x: number, y: number, w: number, h: number, phase = 0) => {\n    if (!img || !img.complete) return;\n    try {\n      const now = performance.now();\n      const base = 0.10; // base opacity\n      const pulseRange = 0.08; // pulse amplitude (-> up to base + pulseRange)\n      const period = 700; // ms\n      const pulse = base + pulseRange * (0.5 + 0.5 * Math.sin(now / period + phase));\n\n      // draw icon with pulsing alpha\n      ctx.save();\n      ctx.globalAlpha = pulse;\n      ctx.drawImage(img, x, y, w, h);\n\n      // subtle reflection: gradient overlay on top half\n      const grad = ctx.createLinearGradient(x, y, x, y + h * 0.5);\n      grad.addColorStop(0, `rgba(255,255,255,${0.18 * pulse})`);\n      grad.addColorStop(1, `rgba(255,255,255,0)`);\n      ctx.globalCompositeOperation = 'lighter';\n      ctx.fillStyle = grad as any;\n      ctx.fillRect(x, y, w, h * 0.5);\n\n      ctx.restore();\n    } catch (e) {\n      // silent fallback\n    }\n  }, []);\n\n  // Load influence icon once\n  useEffect(() => {\n    const img = new Image();\n    img.src = influenceIconUrl;\n    influenceImgRef.current = img;\n  }, []);\n\n\n  const drawCardAt = useCallback((\n    ctx: CanvasRenderingContext2D,\n    card: Card,\n    x: number,\n    y: number,\n    size: number,\n    selected: boolean = false,\n    showAPCost: boolean = false,\n    player?: Player\n  ) => {\n    // Apply per-card fade-in if a play animation is active for this uid\n    let extraAlpha = 1;\n    try {\n      const uid = (card as any).uid ?? (card as any).id;\n      const list = (visualEffects && visualEffects.playAnimsRef && visualEffects.playAnimsRef.current) || (window as any).__pc_play_anims || [];\n      const anim = list.find((a: any) => a.uid === uid);\n      if (anim) {\n        const p = Math.min(1, Math.max(0, (performance.now() - anim.started) / anim.duration));\n        // ease-out\n        extraAlpha = Math.pow(p, 2);\n      }\n    } catch (e) {}\n    let dx = x, dy = y, s = size;\n    if (selected) {\n      s = Math.floor(size * 1.05);\n      dx = x - Math.floor((s - size) / 2);\n      dy = y - Math.floor((s - size) / 2);\n    }\n\n    // Note: pulse overlay is drawn at top layer after all cards are rendered\n\n    // Draw card image with caching to prevent flicker in continuous loop\n    const src = getCardImagePath(card, 'ui');\n    const cached = imageCacheRef.current.get(src);\n    ctx.save();\n    ctx.globalAlpha = extraAlpha;\n    if (cached && cached.complete && cached.naturalWidth > 0) {\n      ctx.drawImage(cached, dx, dy, s, s);\n    } else {\n      const img = new Image();\n      img.onload = () => {\n        imageCacheRef.current.set(src, img);\n        // Note: onload happens async; draw will occur on next frame\n        // don't draw here into stale ctx\n      };\n      img.src = src;\n      imageCacheRef.current.set(src, img);\n    }\n\n    ctx.restore();\n\n    // Status-Indikatoren (fÃ¼r alle Board-Karten)\n    // Einfluss-Wert dauerhaft anzeigen (oben links) â€“ nur fÃ¼r Regierungskarten\n    if ((card as any).kind === 'pol') {\n      const barH = Math.max(20, Math.floor(s * 0.12) + 6);\n      ctx.fillStyle = 'rgba(0,0,0,0.6)';\n      ctx.fillRect(dx, dy + s - barH, s, barH);\n\n      ctx.fillStyle = '#ffffff';\n      const fontSize = Math.floor(s * 0.12);\n      ctx.font = `bold ${fontSize}px sans-serif`;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${(card as any).influence ?? 0}`, dx + 8, dy + s - barH / 2);\n    }\n    // Schutz-Status (blauer Punkt)\n    if ((card as any).protected || ((card as any).shield ?? 0) > 0) {\n      ctx.fillStyle = '#1da1f2';\n      ctx.fillRect(dx + s - 22, dy + 6, 16, 16);\n    }\n    // Deaktiviert-Status (roter Punkt)\n    if ((card as any).deactivated) {\n      ctx.fillStyle = '#b63838';\n      ctx.fillRect(dx + s - 22, dy + 26, 16, 16);\n    }\n\n    // Einfluss-Badge fÃ¼r Handkarten oben rechts (nur Regierungskarten)\n    if (showAPCost && player && (card as any).kind === 'pol') {\n      const badgeHeight = Math.max(16, Math.floor(s * 0.12));\n      const badgeWidth = badgeHeight * 2;\n      const badgeX = dx + s - badgeWidth - 6;\n      const badgeY = dy + 6;\n\n      // Semi-transparent dunkler Hintergrund\n      ctx.fillStyle = 'rgba(0,0,0,0.6)';\n      ctx.beginPath();\n      ctx.roundRect(badgeX, badgeY, badgeWidth, badgeHeight, badgeHeight / 2);\n      ctx.fill();\n\n      // Influence icon (90% opacity) links im Badge\n      if (influenceImgRef.current && influenceImgRef.current.complete) {\n        ctx.globalAlpha = 0.9;\n        ctx.drawImage(influenceImgRef.current, badgeX + 2, badgeY + 2, badgeHeight - 4, badgeHeight - 4);\n        ctx.globalAlpha = 1;\n      }\n\n      // Influence number rechts im Badge\n      ctx.fillStyle = '#ffffff';\n      ctx.font = `bold ${Math.floor(badgeHeight * 0.5)}px sans-serif`;\n      ctx.textAlign = 'right';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${(card as any).influence ?? 0}`, badgeX + badgeWidth - 4, badgeY + badgeHeight / 2);\n\n      // Reset align\n      ctx.textAlign = 'start';\n      ctx.textBaseline = 'alphabetic';\n    }\n\n    // NOTE: influence overlays (pulse + labels) are drawn in a separate pass\n\n    // Auswahl-Rahmen\n    if (selected) {\n      ctx.strokeStyle = '#61dafb';\n      ctx.lineWidth = 3;\n      ctx.strokeRect(dx + 1, dy + 1, s - 2, s - 2);\n      ctx.lineWidth = 1;\n    }\n\n    // Return exact 256x256 click zone over the card\n    // Since all cards are 256x256, the click zone should match exactly\n    return { x: dx, y: dy, w: 256, h: 256 };\n  }, [gameState]);\n\n\n\n\n\n\n\n  // Slot-Benennungs-Funktion basierend auf Glossar\n  const getSlotDisplayName = useCallback((zoneId: string, index: number, player: Player): string => {\n    const slotNumber = index + 1;\n\n    if (zoneId.includes('government')) {\n      if (zoneId.includes('player')) {\n        return `Regierungsreihe Slot ${slotNumber}`;\n      } else {\n        return `Gegner Regierung Slot ${slotNumber}`;\n      }\n    } else if (zoneId.includes('public')) {\n      if (zoneId.includes('player')) {\n        return `Ã–ffentlichkeitsreihe Slot ${slotNumber}`;\n      } else {\n        return `Gegner Ã–ffentlichkeit Slot ${slotNumber}`;\n      }\n    } else if (zoneId.includes('permanent.government')) {\n      if (zoneId.includes('player')) {\n        return 'Regierung Spezial-Slot';\n      } else {\n        return 'Gegner Regierung Spezial-Slot';\n      }\n    } else if (zoneId.includes('permanent.public')) {\n      if (zoneId.includes('player')) {\n        return 'Ã–ffentlichkeit Spezial-Slot';\n      } else {\n        return 'Gegner Ã–ffentlichkeit Spezial-Slot';\n      }\n    } else if (zoneId.includes('instant')) {\n      if (zoneId.includes('player')) {\n        return 'Sofort-Slot';\n      } else {\n        return 'Gegner Sofort-Slot';\n      }\n    } else if (zoneId.includes('hand')) {\n      return 'Hand';\n    } else if (zoneId.includes('interventions')) {\n      return 'Interventionen';\n    }\n\n    return `Slot ${slotNumber}`;\n  }, []);\n\n  const drawLane = useCallback((\n    ctx: CanvasRenderingContext2D,\n    zoneId: string,\n    player: Player,\n    lane: Lane,\n    clickable: boolean\n  ) => {\n    const zone = getZone(zoneId);\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n    const arr = gameState.board[player][lane];\n\n    slots.forEach((s, idx) => {\n      const card = arr[idx];\n\n      // Hintergrundfarbe nach Kategorie\n      let bgColor = 'rgba(0,0,0,0.1)'; // Standard\n      if (zoneId.includes('government')) {\n        bgColor = 'rgba(255, 197, 0, 0.15)'; // Hellgelb fÃ¼r Regierung\n      } else if (zoneId.includes('public')) {\n        bgColor = 'rgba(0, 255, 0, 0.15)'; // HellgrÃ¼n fÃ¼r Ã–ffentlichkeit\n      }\n\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(s.x, s.y, s.w, s.h);\n\n      // Slot-Rahmen\n      ctx.strokeStyle = 'rgba(255,255,255,0.06)';\n      ctx.strokeRect(s.x + 0.5, s.y + 0.5, s.w - 1, s.h - 1);\n\n      if (card) {\n        const isSelected = player === 1 && selectedHandIndex !== null && gameState.hands[1][selectedHandIndex] === card;\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, isSelected, false);\n\n        // Kartenname unter dem Slot anzeigen\n        ctx.fillStyle = 'rgba(255,255,255,0.9)';\n        ctx.font = 'bold 12px sans-serif';\n        ctx.textAlign = 'center';\n        const textY = s.y + s.h + 16;\n        ctx.fillText(card.name, s.x + s.w/2, textY);\n\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'board_card', player, lane, index: idx, card }\n        });\n      } else if (clickable && gameState.current === player) {\n        // Slot-Benennung anzeigen (fÃ¼r den aktuellen Spieler)\n        const slotName = getSlotDisplayName(zoneId, idx, player);\n        ctx.fillStyle = 'rgba(255,255,255,0.6)';\n        ctx.font = '11px sans-serif';\n        ctx.textAlign = 'center';\n        const textY = s.y + s.h/2;\n        ctx.fillText(slotName, s.x + s.w/2, textY);\n\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', lane, index: idx }\n        });\n      }\n    });\n  }, [gameState, selectedHandIndex, drawCardAt, getSlotDisplayName]);\n\n  const drawHandP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const hand = sortHandCards(gameState.hands[1]);\n    const zone = getZone('hand.player');\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n    // Apply smooth offset (lerp towards target)\n    const target = handScrollTargetRef.current;\n    handScrollCurrentRef.current += (target - handScrollCurrentRef.current) * 0.15; // easing\n    const offsetY = Math.round(handScrollCurrentRef.current);\n    slots.forEach((s: { x: number; y: number; w: number; h: number }, i: number) => {\n      const card = hand[i];\n      if (!card) return;\n      // Find original index in unsorted hand for click handling\n      const originalIndex = gameState.hands[1].findIndex(c => c.uid === card.uid);\n      const isSel = selectedHandIndex === originalIndex;\n      // apply vertical offset\n      const sx = s.x;\n      const sy = s.y + offsetY;\n      const clickZone = drawCardAt(ctx, card, sx, sy, s.w, isSel, true, 1); // Show AP cost for player 1 hand\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'hand_p1', index: originalIndex, card } });\n    });\n  }, [gameState.hands, selectedHandIndex, drawCardAt]);\n\n      // ðŸ”§ DEV MODE: Player 2 Hand (rechts unten, kompakter)\n  const drawHandP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const hand = sortHandCards(gameState.hands[2]);\n    const zone = getZone('hand.opponent');\n    if (!zone) return;\n\n    const slots = computeSlotRects(zone);\n\n    // Hintergrund fÃ¼r P2 Hand\n    const [x, y, w, h] = zone.rectPx;\n    ctx.fillStyle = 'rgba(255, 100, 100, 0.15)'; // RÃ¶tlicher Hintergrund fÃ¼r P2\n    ctx.fillRect(x, y, w, h);\n    ctx.strokeStyle = 'rgba(255, 100, 100, 0.3)';\n    ctx.strokeRect(x + 0.5, y + 0.5, w - 1, h - 1);\n\n    // Label fÃ¼r P2 Hand\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = 'bold 14px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Player 2 Hand', x + w/2, y - 8);\n\n    slots.forEach((s: { x: number; y: number; w: number; h: number }, i: number) => {\n      const card = hand[i];\n      if (!card) return;\n      // Find original index in unsorted hand for click handling\n      const originalIndex = gameState.hands[2].findIndex(c => c.uid === card.uid);\n      const isSel = gameState.current === 2 && selectedHandIndex === originalIndex;\n      const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, isSel, true, 2); // Show AP cost for player 2 hand\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'hand_p2', index: originalIndex, card } });\n    });\n  }, [gameState, selectedHandIndex, drawCardAt]);\n  // Interventions strip (player traps)\n  const drawInterventionsP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const traps = gameState.traps[1] || [];\n    const zone = getZone('interventions.player');\n    if (!zone) return;\n\n    // Single intervention slot\n    const [zx, zy, zw, zh] = zone.rectPx;\n    const card = traps[0]; // Only first trap\n\n    // Hintergrund fÃ¼r Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.15)'; // Lavendelfarben fÃ¼r Interventionen\n    ctx.fillRect(zx, zy, zw, zh);\n    ctx.strokeStyle = 'rgba(200, 160, 255, 0.3)';\n    ctx.strokeRect(zx + 0.5, zy + 0.5, zw - 1, zh - 1);\n\n    // Slot-Benennung fÃ¼r Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.8)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Intervention', zx + 8, zy + zh - 6);\n\n    if (card) {\n      const clickZone = drawCardAt(ctx, card, zx, zy, zw, false, false);\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'trap_p1', index: 0, card } });\n    }\n  }, [gameState.traps, drawCardAt]);\n\n  // Interventions strip (opponent traps)\n  const drawInterventionsP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    const traps = gameState.traps[2] || [];\n    const zone = getZone('interventions.opponent');\n    if (!zone) return;\n\n    // Single intervention slot\n    const [zx, zy, zw, zh] = zone.rectPx;\n    const card = traps[0]; // Only first trap\n\n    // Hintergrund fÃ¼r Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.15)'; // Lavendelfarben fÃ¼r Interventionen\n    ctx.fillRect(zx, zy, zw, zh);\n    ctx.strokeStyle = 'rgba(200, 160, 255, 0.3)';\n    ctx.strokeRect(zx + 0.5, zy + 0.5, zw - 1, zh - 1);\n\n    // Slot-Benennung fÃ¼r Interventions-Slot\n    ctx.fillStyle = 'rgba(200, 160, 255, 0.8)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Intervention', zx + 8, zy + zh - 6);\n\n    if (card) {\n      const clickZone = drawCardAt(ctx, card, zx, zy, zw, false, false);\n      clickZonesRef.current.push({ ...clickZone, data: { type: 'trap_p2', index: 0, card } });\n    }\n  }, [gameState.traps, drawCardAt]);\n\n  // Single slot drawing function\n  const drawSingleSlot = useCallback((\n    ctx: CanvasRenderingContext2D,\n    zoneId: string,\n    card: Card | null,\n    clickType: string,\n    player: Player\n  ) => {\n    const zone = getZone(zoneId);\n    if (!zone) return;\n    const [x, y, w, h] = zone.rectPx;\n\n    // Hintergrundfarbe nach Kategorie\n    let bgColor = 'rgba(0,0,0,0.1)'; // Standard\n    if (zoneId.includes('government')) {\n      bgColor = 'rgba(255, 197, 0, 0.15)'; // Hellgelb fÃ¼r Regierung\n    } else if (zoneId.includes('public')) {\n      bgColor = 'rgba(0, 255, 0, 0.15)'; // HellgrÃ¼n fÃ¼r Ã–ffentlichkeit\n    } else if (zoneId.includes('instant')) {\n      bgColor = 'rgba(127, 116, 91, 0.15)'; // Neutral fÃ¼r Sofort-Slots\n    } else if (zoneId.includes('permanent')) {\n      // Unterscheide zwischen government und public permanent slots\n      if (zoneId.includes('government')) {\n        bgColor = 'rgba(255, 197, 0, 0.15)';\n      } else if (zoneId.includes('public')) {\n        bgColor = 'rgba(0, 255, 0, 0.15)';\n      }\n    }\n\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(x, y, w, h);\n\n    // Draw slot border\n    ctx.strokeStyle = 'rgba(255,255,255,0.06)';\n    ctx.strokeRect(x + 0.5, y + 0.5, w - 1, h - 1);\n\n    if (card) {\n      const isSelected = player === 1 && selectedHandIndex !== null && gameState.hands[1][selectedHandIndex] === card;\n      const clickZone = drawCardAt(ctx, card, x, y, w, isSelected, false);\n\n      // Kartenname unter dem Slot anzeigen\n      ctx.fillStyle = 'rgba(255,255,255,0.9)';\n      ctx.font = 'bold 12px sans-serif';\n      ctx.textAlign = 'center';\n      const textY = y + h + 16;\n      ctx.fillText(card.name, x + w/2, textY);\n\n      // Register click zone for the card - always in dev mode, otherwise only for current player\n      if (devMode || player === gameState.current) {\n        clickZonesRef.current.push({ ...clickZone, data: { type: 'slot_card', slot: clickType, player, card } });\n      }\n\n      // ðŸ”§ NEU: Sofort-Initiative-Slots sind immer klickbar fÃ¼r Aktivierung (handled by activateInstantInitiative)\n      if (clickType === 'instant') {\n        clickZonesRef.current.push({\n          x, y, w, h,\n          data: { type: 'activate_instant', player, card }\n        });\n      }\n    } else if (gameState.current === player || devMode) {\n      // Slot-Benennung fÃ¼r leere Slots anzeigen (fÃ¼r den aktuellen Spieler oder im Dev Mode)\n      const slotName = getSlotDisplayName(zoneId, 0, player);\n      ctx.fillStyle = 'rgba(255,255,255,0.6)';\n      ctx.font = '11px sans-serif';\n      ctx.textAlign = 'center';\n      const textY = y + h/2;\n      ctx.fillText(slotName, x + w/2, textY);\n\n      clickZonesRef.current.push({ x, y, w, h, data: { type: 'empty_slot', slot: clickType, player } });\n    }\n  }, [selectedHandIndex, gameState, drawCardAt, getSlotDisplayName, devMode]);\n\n  // Small UI hook: show a lightweight corruption modal overlay when a target is selected\n  useEffect(() => {\n    const onTargetSelected = (ev: any) => {\n      const { player, targetUid } = ev.detail || {};\n      if (!player || !targetUid) return;\n      // create transient overlay element if not present\n      try {\n        const id = 'pc-corruption-modal';\n        let el = document.getElementById(id);\n        if (!el) {\n          el = document.createElement('div');\n          el.id = id;\n          el.style.position = 'fixed';\n          el.style.left = '50%';\n          el.style.top = '40%';\n          el.style.transform = 'translate(-50%, -50%)';\n          el.style.padding = '12px 16px';\n          el.style.background = 'rgba(6,10,15,0.9)';\n          el.style.border = '1px solid rgba(255,255,255,0.12)';\n          el.style.borderRadius = '8px';\n          el.style.zIndex = '3000';\n          el.style.color = '#e5e7eb';\n          el.style.fontFamily = 'monospace';\n          el.style.fontSize = '14px';\n          document.body.appendChild(el);\n        }\n        const card = (gameState as any).board?.[player === 1 ? 1 : 2]?.aussen?.find((c:any)=>c.uid===targetUid) || (gameState as any).board?.[player === 1 ? 2 : 1]?.aussen?.find((c:any)=>c.uid===targetUid);\n        el.innerHTML = `<div style=\"display:flex;flex-direction:column;gap:8px;min-width:260px;\">\n          <div style=\"font-weight:700\">Bestechungsskandal 2.0 â€” Ziel gewÃ¤hlt</div>\n          <div>GewÃ¤hltes Ziel: <b>${card ? card.name : 'UID '+targetUid}</b></div>\n          <div>Probe: W6 â‰¥ Einfluss (inkl. Oligarch-Bonus)</div>\n          <div style=\"display:flex;gap:8px;justify-content:flex-end;\">\n            <button id=\"pc-corruption-roll\" style=\"background:#2563eb;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\">WÃ¼rfeln</button>\n            <button id=\"pc-corruption-cancel\" style=\"background:#374151;color:white;border:none;padding:6px 10px;border-radius:6px;cursor:pointer;\">Abbrechen</button>\n          </div>\n        </div>`;\n\n        const rollBtn = document.getElementById('pc-corruption-roll');\n        const cancelBtn = document.getElementById('pc-corruption-cancel');\n        if (rollBtn) {\n          rollBtn.onclick = () => {\n            try {\n              console.log('ðŸ”¥ CORRUPTION WÃœRFELN CLICKED - triggering dice roll');\n              // Trigger the dice component to roll\n              window.dispatchEvent(new CustomEvent('pc:ui_request_dice_roll', { detail: { player, targetUid } }));\n              window.dispatchEvent(new CustomEvent('pc:corruption_request_roll', { detail: { player, targetUid } }));\n            } catch(e) {\n              console.error('ðŸ”¥ ERROR triggering dice roll:', e);\n            }\n            // disable until result\n            (rollBtn as HTMLButtonElement).disabled = true;\n            (rollBtn as HTMLButtonElement).innerText = 'WÃ¼rfelt...';\n          };\n        }\n        if (cancelBtn) {\n          cancelBtn.onclick = () => {\n            el!.remove();\n          };\n        }\n      } catch (e) { console.debug('corruption modal create failed', e); }\n    };\n\n    window.addEventListener('pc:corruption_target_selected', onTargetSelected as EventListener);\n    return () => window.removeEventListener('pc:corruption_target_selected', onTargetSelected as EventListener);\n  }, [gameState]);\n\n  // Draw permanent slots for player\n  const drawPermanentSlotsP1 = useCallback((ctx: CanvasRenderingContext2D) => {\n    drawSingleSlot(ctx, 'slot.permanent.government.player', gameState.permanentSlots[1].government, 'permanent_government', 1);\n    drawSingleSlot(ctx, 'slot.permanent.public.player', gameState.permanentSlots[1].public, 'permanent_public', 1);\n  }, [gameState.permanentSlots, drawSingleSlot]);\n\n  // Draw permanent slots for opponent\n  const drawPermanentSlotsP2 = useCallback((ctx: CanvasRenderingContext2D) => {\n    drawSingleSlot(ctx, 'slot.permanent.government.opponent', gameState.permanentSlots[2].government, 'permanent_government', 2);\n    drawSingleSlot(ctx, 'slot.permanent.public.opponent', gameState.permanentSlots[2].public, 'permanent_public', 2);\n  }, [gameState.permanentSlots, drawSingleSlot]);\n\n  // Draw instant slots\n  const drawInstantSlots = useCallback((ctx: CanvasRenderingContext2D) => {\n    // Sofort-Initiative-Slots aus dem Board zeichnen\n    const sofortPlayerCard = gameState.board[1].sofort[0];\n    const sofortOppCard = gameState.board[2].sofort[0];\n\n    drawSingleSlot(ctx, 'slot.instant.player', sofortPlayerCard, 'instant', 1);\n    drawSingleSlot(ctx, 'slot.instant.opponent', sofortOppCard, 'instant', 2);\n  }, [gameState.board, drawSingleSlot]);\n\n  // Aktive SchlÃ¼sselwÃ¶rter und Unterkategorien ermitteln\n  const getActiveKeywordsAndSubcategories = useCallback((player: Player) => {\n    const board = gameState.board[player];\n    const permanentSlots = gameState.permanentSlots[player];\n    const allCards = [\n      ...board.innen,\n      ...board.aussen,\n      permanentSlots.government,\n      permanentSlots.public\n    ].filter(c => c && c.kind === 'pol') as PoliticianCard[];\n\n    const keywords = new Set<string>();\n    const subcategories = new Set<string>();\n\n    allCards.forEach(card => {\n      if (!card.deactivated) {\n        // Regierungskarten-SchlÃ¼sselwÃ¶rter\n        if (card.tag === 'Leadership') {\n          keywords.add('Leadership');\n        }\n        if (card.tag === 'Diplomat') {\n          keywords.add('Diplomat');\n        }\n\n        // Ã–ffentlichkeits-Unterkategorien (fÃ¼r Karten in Ã–ffentlichkeitsreihe)\n        if (board.innen.includes(card)) {\n          const publicCard = card as any;\n          if (publicCard.tag) {\n            // Oligarch\n            const oligarchNames = ['Elon Musk', 'Bill Gates', 'George Soros', 'Warren Buffett', 'Mukesh Ambani', 'Jeff Bezos', 'Alisher Usmanov', 'Gautam Adani', 'Jack Ma', 'Zhang Yiming', 'Roman Abramovich'];\n            if (oligarchNames.includes(publicCard.name)) {\n              subcategories.add('Oligarch');\n            }\n\n            // Plattform\n            const platformNames = ['Mark Zuckerberg', 'Tim Cook', 'Sam Altman', 'Jack Ma'];\n            if (platformNames.includes(publicCard.name)) {\n              subcategories.add('Plattform');\n            }\n\n            // Bewegung\n            const movementNames = ['Greta Thunberg', 'Malala Yousafzai', 'Ai Weiwei', 'Alexei Navalny'];\n            if (movementNames.includes(publicCard.name)) {\n              subcategories.add('Bewegung');\n            }\n\n            // NGO/Think-Tank\n            const ngoNames = ['Bill Gates', 'George Soros', 'Jennifer Doudna', 'Noam Chomsky', 'Anthony Fauci'];\n            if (ngoNames.includes(publicCard.name)) {\n              subcategories.add('NGO/Think-Tank');\n            }\n\n            // Intelligenz\n            const intelligenceNames = ['Jennifer Doudna', 'Noam Chomsky', 'Edward Snowden', 'Julian Assange', 'Yuval Noah Harari', 'Ai Weiwei', 'Alexei Navalny', 'Anthony Fauci'];\n            if (intelligenceNames.includes(publicCard.name)) {\n              subcategories.add('Intelligenz');\n            }\n\n            // Medien\n            const mediaNames = ['Oprah Winfrey'];\n            if (mediaNames.includes(publicCard.name)) {\n              subcategories.add('Medien');\n            }\n          }\n        }\n      }\n    });\n\n    return {\n      keywords: Array.from(keywords),\n      subcategories: Array.from(subcategories)\n    };\n  }, [gameState]);\n\n  // Info-Panels zeichnen\n  const drawInfoPanels = useCallback((ctx: CanvasRenderingContext2D) => {\n    const { keywords, subcategories } = getActiveKeywordsAndSubcategories(1);\n\n    // Panel fÃ¼r RegierungsschlÃ¼sselwÃ¶rter (rechts neben Regierungsslots)\n    const govPanelX = 1640 + 256 + 20; // Nach dem letzten permanenten Slot\n    const govPanelY = 300; // Auf HÃ¶he der Regierungsslots\n    const govPanelW = 120;\n    const govPanelH = 256;\n\n    // Regierungspanel Hintergrund\n    ctx.fillStyle = 'rgba(255, 197, 0, 0.15)';\n    ctx.fillRect(govPanelX, govPanelY, govPanelW, govPanelH);\n    ctx.strokeStyle = 'rgba(255, 197, 0, 0.3)';\n    ctx.strokeRect(govPanelX + 0.5, govPanelY + 0.5, govPanelW - 1, govPanelH - 1);\n\n    // Regierungspanel Titel\n    ctx.fillStyle = 'rgba(255, 197, 0, 0.9)';\n    ctx.font = 'bold 12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Regierung', govPanelX + govPanelW/2, govPanelY + 16);\n\n    // SchlÃ¼sselwÃ¶rter auflisten\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    if (keywords.length > 0) {\n      keywords.forEach((keyword, idx) => {\n        ctx.fillText(`â€¢ ${keyword}`, govPanelX + 8, govPanelY + 36 + idx * 16);\n      });\n    } else {\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.fillText('Keine aktiven', govPanelX + 8, govPanelY + 36);\n      ctx.fillText('SchlÃ¼sselwÃ¶rter', govPanelX + 8, govPanelY + 52);\n    }\n\n    // Panel fÃ¼r Ã–ffentlichkeits-Unterkategorien (rechts neben Ã–ffentlichkeitsslots)\n    const pubPanelX = 1640 + 256 + 20;\n    const pubPanelY = 580; // Auf HÃ¶he der Ã–ffentlichkeitsslots\n    const pubPanelW = 120;\n    const pubPanelH = 256;\n\n    // Ã–ffentlichkeitspanel Hintergrund\n    ctx.fillStyle = 'rgba(0, 255, 0, 0.15)';\n    ctx.fillRect(pubPanelX, pubPanelY, pubPanelW, pubPanelH);\n    ctx.strokeStyle = 'rgba(0, 255, 0, 0.3)';\n    ctx.strokeRect(pubPanelX + 0.5, pubPanelY + 0.5, pubPanelW - 1, pubPanelH - 1);\n\n    // Ã–ffentlichkeitspanel Titel\n    ctx.fillStyle = 'rgba(0, 255, 0, 0.9)';\n    ctx.font = 'bold 12px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('Ã–ffentlichkeit', pubPanelX + pubPanelW/2, pubPanelY + 16);\n\n    // Unterkategorien auflisten\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\n    ctx.font = '11px sans-serif';\n    ctx.textAlign = 'left';\n    if (subcategories.length > 0) {\n      subcategories.forEach((subcategory, idx) => {\n        const displayName = subcategory.length > 12 ? subcategory.substring(0, 10) + '...' : subcategory;\n        ctx.fillText(`â€¢ ${displayName}`, pubPanelX + 8, pubPanelY + 36 + idx * 16);\n      });\n    } else {\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.fillText('Keine aktiven', pubPanelX + 8, pubPanelY + 36);\n      ctx.fillText('Unterkategorien', pubPanelX + 8, pubPanelY + 52);\n    }\n  }, [getActiveKeywordsAndSubcategories]);\n\n  // Move diagnostics to draw callback to ensure they run after canvas is actually rendered\n  const runDiagnostics = useCallback(() => {\n    try {\n      const handZones = clickZonesRef.current.filter(z => z.data && z.data.type === 'hand_p1');\n      const uiUIDs = handZones.map(z => (z.data.card && (z.data.card.uid ?? z.data.card.id)) ).filter(Boolean);\n      const stateHand = gameState.hands && gameState.hands[1] ? gameState.hands[1] : [];\n      const stateUIDs = stateHand.map((c: any) => c.uid ?? c.id).filter(Boolean);\n\n      const missingInState = uiUIDs.filter((u: any) => !stateUIDs.includes(u));\n      const missingInUI = stateUIDs.filter((u: any) => !uiUIDs.includes(u));\n\n      // Only warn if there are cards in UI that don't exist in state (real error)\n      // Don't warn about missing UI cards due to limited slot capacity\n      if (missingInState.length > 0) {\n        const mismatch = {\n          ts: Date.now(),\n          uiCount: uiUIDs.length,\n          stateCount: stateUIDs.length,\n          uiUIDs,\n          stateUIDs,\n          missingInState,\n          missingInUI,\n          stack: (new Error('mismatch-stack')).stack\n        };\n        (window as any).__politicardDebug = {\n          ...(window as any).__politicardDebug,\n          mismatch: [ ...(window as any).__politicardDebug?.mismatch || [] ].slice(-19).concat([mismatch])\n        };\n        // Clear, then log to console so user can copy/paste trace\n        console.warn('POLITICARD DIAGNOSTIC: hand mismatch detected', mismatch);\n      }\n    } catch (e) {\n      // swallow diagnostic errors to avoid breaking rendering\n      console.error('Diagnostic error', e);\n    }\n  }, [gameState.hands]);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Detect influence increases and start animations\n    try {\n      const currSnapshot: Record<string, number> = {};\n      const collect = (c: any) => {\n        if (!c) return;\n        if ((c as any).kind !== 'pol') return;\n        const uid = c.uid ?? (c.id != null ? String(c.id) : null);\n        if (!uid) return;\n        currSnapshot[uid] = (c.influence ?? 0) as number;\n      };\n      // board rows\n      (gameState.board[1].aussen || []).forEach(collect);\n      (gameState.board[2].aussen || []).forEach(collect);\n      (gameState.board[1].innen || []).forEach(collect);\n      (gameState.board[2].innen || []).forEach(collect);\n      // permanent slots\n      collect(gameState.permanentSlots[1].government as any);\n      collect(gameState.permanentSlots[2].government as any);\n      collect(gameState.permanentSlots[1].public as any);\n      collect(gameState.permanentSlots[2].public as any);\n\n      const now = performance.now();\n      Object.keys(currSnapshot).forEach(uid => {\n        const curr = currSnapshot[uid] ?? 0;\n        const prev = prevInfluencesRef.current[uid] ?? curr;\n        if (curr > prev) {\n          const delta = curr - prev;\n          const list = influenceAnimRef.current.get(uid) || [];\n          list.push({ start: now, duration: 900, amount: delta });\n          influenceAnimRef.current.set(uid, list);\n        }\n        prevInfluencesRef.current[uid] = curr;\n      });\n    } catch (e) {\n      // ignore\n    }\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Clear click zones\n    clickZonesRef.current = [];\n\n    // Background: prefer PNG if configured\n    if (LAYOUT.background?.enabled && LAYOUT.background?.src) {\n      if (backgroundImageRef.current) {\n        ctx.drawImage(backgroundImageRef.current, 0, 0, canvas.width, canvas.height);\n      } else {\n        ctx.fillStyle = '#0c131b';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n    } else {\n      ctx.fillStyle = '#0c131b';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // Apply UI transform (new signature)\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    ctx.save();\n    ctx.translate(offsetX, offsetY);\n    ctx.scale(scale, scale);\n\n    // Draw opponent board (top rows) - clickable im Dev Mode\n    // Draw opponent board using new layout system\n    const opponentPublicRects = getPublicRects('opponent');\n    const opponentGovRects = getGovernmentRects('opponent');\n\n    // Draw opponent public slots\n    opponentPublicRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[2].innen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 2);\n        // Register click zone in dev mode\n        if (devMode) {\n          clickZonesRef.current.push({\n            ...clickZone,\n            data: { type: 'slot_card', player: 2, lane: 'innen', index: idx, card }\n          });\n        }\n      }\n      else {\n        // draw placeholder symbol for empty public slot\n        const img = slotSymbolImgsRef.current.get('public');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.4);\n        // Register empty slot click zone in dev mode\n        if (devMode) {\n          clickZonesRef.current.push({\n            x: s.x, y: s.y, w: s.w, h: s.h,\n            data: { type: 'row_slot', player: 2, lane: 'innen', index: idx }\n          });\n        }\n      }\n    });\n\n    // Draw opponent government slots\n    opponentGovRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[2].aussen[idx];\n      const corrActive = !!((gameState as any).pendingAbilitySelect && (gameState as any).pendingAbilitySelect.type === 'corruption_steal');\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 2);\n        // In dev mode, register click zone based on drawCardAt result\n        if (devMode) {\n          clickZonesRef.current.push({\n            ...clickZone,\n            data: { type: 'board_card', player: 2, lane: 'aussen', index: idx, card }\n          });\n        }\n        // When corruption target selection is active, register exact slot rectangle for click detection\n        if (corrActive) {\n          clickZonesRef.current.push({\n            x: s.x,\n            y: s.y,\n            w: s.w,\n            h: s.h,\n            data: { type: 'board_card', player: 2, lane: 'aussen', index: idx, card }\n          });\n        }\n      }\n      else {\n        const img = slotSymbolImgsRef.current.get('government');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.1);\n        // Register empty slot click zone only in dev mode\n        if (devMode) {\n          clickZonesRef.current.push({\n            x: s.x, y: s.y, w: s.w, h: s.h,\n            data: { type: 'row_slot', player: 2, lane: 'aussen', index: idx }\n          });\n        }\n      }\n    });\n\n    // Draw opponent permanent slots (show icons even when not current)\n    try {\n      const permGovZoneOpp = getZone('slot.permanent.government.opponent');\n      if (permGovZoneOpp) {\n        const card = gameState.permanentSlots[2].government;\n        const [ox, oy, ow, oh] = permGovZoneOpp.rectPx;\n        if (card) {\n          drawSingleSlot(ctx, 'slot.permanent.government.opponent', card, 'permanent_government', 2);\n        } else {\n          const img = slotSymbolImgsRef.current.get('dauerhaft');\n          drawSlotIconWithPulse(ctx, img, ox, oy, ow, oh, 0.3);\n          // Register empty slot click zone in dev mode\n          if (devMode) {\n            clickZonesRef.current.push({\n              x: ox, y: oy, w: ow, h: oh,\n              data: { type: 'empty_slot', slot: 'permanent_government', player: 2 }\n            });\n          }\n        }\n      }\n    } catch (e) {}\n    try {\n      const permPubZoneOpp = getZone('slot.permanent.public.opponent');\n      if (permPubZoneOpp) {\n        const card = gameState.permanentSlots[2].public;\n        const [ox2, oy2, ow2, oh2] = permPubZoneOpp.rectPx;\n        if (card) {\n          drawSingleSlot(ctx, 'slot.permanent.public.opponent', card, 'permanent_public', 2);\n        } else {\n          const img = slotSymbolImgsRef.current.get('dauerhaft');\n          drawSlotIconWithPulse(ctx, img, ox2, oy2, ow2, oh2, 0.7);\n          // Register empty slot click zone in dev mode\n          if (devMode) {\n            clickZonesRef.current.push({\n              x: ox2, y: oy2, w: ow2, h: oh2,\n              data: { type: 'empty_slot', slot: 'permanent_public', player: 2 }\n            });\n          }\n        }\n      }\n    } catch (e) {}\n\n    // Draw player board (middle rows)\n    // Draw player board using new layout system\n    const playerPublicRects = getPublicRects('player');\n    const playerGovRects = getGovernmentRects('player');\n\n    // Draw player public slots\n    playerPublicRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[1].innen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 1);\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'row_slot', player: 1, lane: 'innen', index: idx }\n        });\n      } else {\n        // Empty slot click zone and draw public symbol\n        // Draw unified pulsing icon for empty public slot\n        const img = slotSymbolImgsRef.current.get('public');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.4);\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', player: 1, lane: 'innen', index: idx }\n        });\n      }\n    });\n\n    // Draw player government slots\n    playerGovRects.forEach((s: { x: number; y: number; w: number; h: number }, idx: number) => {\n      const card = gameState.board[1].aussen[idx];\n      if (card) {\n        const clickZone = drawCardAt(ctx, card, s.x, s.y, s.w, false, false, 1);\n        clickZonesRef.current.push({\n          ...clickZone,\n          data: { type: 'row_slot', player: 1, lane: 'aussen', index: idx }\n        });\n      } else {\n        // Empty slot click zone and draw government symbol\n        const img = slotSymbolImgsRef.current.get('government');\n        drawSlotIconWithPulse(ctx, img, s.x, s.y, s.w, s.h, 0.1);\n        clickZonesRef.current.push({\n          x: s.x, y: s.y, w: s.w, h: s.h,\n          data: { type: 'row_slot', player: 1, lane: 'aussen', index: idx }\n        });\n      }\n    });\n\n    // --- GOV PLACEMENT SPRITESHEET OVERLAY (frame-based) ---\n    try {\n      const sprites = govSpritesRef.current;\n      const gif = govGifRef.current;\n      const anims = (visualEffects && visualEffects.playAnimsRef && visualEffects.playAnimsRef.current) || [];\n\n      // Start sprite animation when a playAnim for a gov-card is active and maps to a slot\n      const now = performance.now();\n      // handle specialized 'hit:' playAnims which indicate target-hit sprites by slot key\n      anims.forEach((a: { uid: string | number; started: number; duration: number; lane?: string }) => {\n        try {\n          if (typeof a.uid === 'string' && a.uid.indexOf('hit:') === 0) {\n            const inner = a.uid.slice(4); // '1.aussen.0'\n            if (!hitSpriteStateRef.current[inner]) {\n              hitSpriteStateRef.current[inner] = { started: now, frameCount: 25, frameDuration: 30 };\n            }\n            return; // don't treat as gov anim\n          }\n        } catch (e) {}\n\n        // existing gov/instant handling follows\n      });\n\n      // now run the original anims loop for gov/instant that depend on card uids\n      anims.forEach((a: { uid: string | number; started: number; duration: number; lane?: string }) => {\n        // find the zone/slot for this uid\n        const zone = clickZonesRef.current.find(z => z.data && z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === a.uid));\n        if (!zone) return;\n        // determine if gov slot\n        let isGov = false;\n        let isInstant = false;\n        try {\n          const dt = zone.data || {};\n          if (dt.type === 'row_slot' && dt.lane === 'aussen') isGov = true;\n          if (dt.type === 'board_card' && dt.lane === 'aussen') isGov = true;\n          if (dt.slot && typeof dt.slot === 'string' && dt.slot.includes('government')) isGov = true;\n          if (dt.type === 'activate_instant' || (dt.slot && typeof dt.slot === 'string' && dt.slot.includes('instant'))) isInstant = true;\n        } catch (e) {}\n        if (!isGov && !isInstant) return;\n\n        const player = zone.data.player ?? 1;\n        const lane = zone.data.lane ?? 'aussen';\n        const idx = zone.data.index ?? 0;\n        const key = `${player}.${lane}.${idx}`;\n\n        // initialize sprite state if not present\n        if (isGov) {\n          if (!govSpriteStateRef.current[key]) {\n            govSpriteStateRef.current[key] = { started: now, frameCount: 14, frameDuration: 40 }; // 14 frames @ ~40ms -> ~560ms\n          }\n        }\n        if (isInstant) {\n          const instKey = `${player}.instant.${idx}`;\n          if (!instantSpriteStateRef.current[instKey]) {\n            instantSpriteStateRef.current[instKey] = { started: now, frameCount: 14, frameDuration: 40 };\n          }\n        }\n      });\n\n      // draw running sprite animations per gov slot\n      Object.keys(govSpriteStateRef.current).forEach(k => {\n        const st = govSpriteStateRef.current[k];\n        const elapsed = now - st.started;\n        const total = st.frameCount * st.frameDuration;\n        if (elapsed > total) {\n          // animation finished; remove state\n          delete govSpriteStateRef.current[k];\n          return;\n        }\n        const frame = Math.floor(elapsed / st.frameDuration);\n\n        // parse key -> player.lane.index\n        const parts = k.split('.');\n        const player = Number(parts[0]) || 1;\n        const lane = parts[1] || 'aussen';\n        const index = Number(parts[2] || 0);\n\n        // compute slot rect for this gov slot (player or opponent board)\n        const rect = player === 1 ? playerGovRects[index] : opponentGovRects[index];\n        if (!rect) return;\n\n        // spritesheet: frame N located at x = N*256, y = 0\n        if (sprites && sprites.complete) {\n          const sx = frame * 256;\n          const sy = 0;\n          const sw = 256;\n          const sh = 256;\n          // draw exactly matching the slot rect size to avoid scaling mismatches\n          const dx = rect.x;\n          const dy = rect.y;\n          ctx.drawImage(sprites, sx, sy, sw, sh, dx, dy, rect.w, rect.h);\n        } else if (gif && gif.complete) {\n          // fallback to static gif if spritesheet missing\n          ctx.drawImage(gif, rect.x, rect.y, rect.w, rect.h);\n        }\n      });\n      // --- INSTANT INITIATIVE SPRITESHEET (draw on instant slot) ---\n      try {\n        const spritesI = instantSpritesRef.current;\n        const nowI = performance.now();\n        Object.keys(instantSpriteStateRef.current).forEach(k => {\n          const st = instantSpriteStateRef.current[k];\n          const elapsed = nowI - st.started;\n          const total = st.frameCount * st.frameDuration;\n          if (elapsed > total) { delete instantSpriteStateRef.current[k]; return; }\n          const frame = Math.floor(elapsed / st.frameDuration);\n          const parts = k.split('.');\n          const player = Number(parts[0]) || 1;\n          const index = Number(parts[2] || 0);\n          const rects = getSofortRect(player ? 'player' : 'opponent');\n          // getSofortRect returns one rect; map by player/context â€” fallback to zone\n          const instantRect = getZone('slot.instant.player').rectPx;\n          const [ix, iy, iw, ih] = instantRect;\n          if (spritesI && spritesI.complete) {\n            const sx = frame * 256; const sy = 0; const sw = 256; const sh = 256;\n            ctx.drawImage(spritesI, sx, sy, sw, sh, ix, iy, iw, ih);\n          }\n        });\n      } catch (e) {}\n      // --- HIT / TARGET SPRITESHEET (draw as overlay on targeted slot) ---\n      try {\n        const spritesH = hitSpritesRef.current;\n        const nowH = performance.now();\n        Object.keys(hitSpriteStateRef.current).forEach(k => {\n          const st = hitSpriteStateRef.current[k];\n          const elapsed = nowH - st.started;\n          const total = st.frameCount * st.frameDuration;\n          if (elapsed > total) { delete hitSpriteStateRef.current[k]; return; }\n          const frame = Math.floor(elapsed / st.frameDuration);\n\n          // parse key -> player.lane.index\n          const parts = k.split('.');\n          const player = Number(parts[0]) || 1;\n          const lane = parts[1] || 'aussen';\n          const index = Number(parts[2] || 0);\n\n          // compute slot rect for this gov slot (attempt gov then public)\n          const rect = (player === 1 ? playerGovRects : opponentGovRects)[index] || (player === 1 ? playerPublicRects : opponentPublicRects)[index];\n          if (!rect) return;\n\n          if (spritesH && spritesH.complete) {\n            const sx = frame * 256;\n            const sy = 0;\n            const sw = 256;\n            const sh = 256;\n            const dx = rect.x;\n            const dy = rect.y;\n            ctx.drawImage(spritesH, sx, sy, sw, sh, dx, dy, rect.w, rect.h);\n          }\n        });\n      } catch (e) {}\n    } catch (e) {}\n\n    // Draw player permanent slots (draw symbols if empty)\n    // permanent government\n    const permGovZone = getZone('slot.permanent.government.player');\n    if (permGovZone) {\n      const card = gameState.permanentSlots[1].government;\n      const [x, y, w, h] = permGovZone.rectPx;\n      if (card) {\n        drawSingleSlot(ctx, 'slot.permanent.government.player', card, 'permanent_government', 1);\n      } else {\n        // Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent gov slot)\n        const img = slotSymbolImgsRef.current.get('dauerhaft');\n        drawSlotIconWithPulse(ctx, img, x, y, w, h, 0.2);\n      }\n    }\n    // permanent public\n    const permPubZone = getZone('slot.permanent.public.player');\n    if (permPubZone) {\n      const card = gameState.permanentSlots[1].public;\n      const [x2, y2, w2, h2] = permPubZone.rectPx;\n      if (card) {\n        drawSingleSlot(ctx, 'slot.permanent.public.player', card, 'permanent_public', 1);\n      } else {\n        // Draw all slot icons using unified helper (so 'dauerhaft' used visually for empty permanent public slot)\n        const img = slotSymbolImgsRef.current.get('dauerhaft');\n        drawSlotIconWithPulse(ctx, img, x2, y2, w2, h2, 0.9);\n      }\n    }\n\n    // Draw instant slots (both players) and placeholder if empty\n    const instantPlayerZone = getZone('slot.instant.player');\n    if (instantPlayerZone) {\n      const card = gameState.board[1].sofort[0];\n      const [x, y, w, h] = instantPlayerZone.rectPx;\n      if (card) drawSingleSlot(ctx, 'slot.instant.player', card, 'instant', 1);\n      else {\n        // Use unified icon draw helper for instant slot\n        const img = slotSymbolImgsRef.current.get('sofort');\n        drawSlotIconWithPulse(ctx, img, x, y, w, h, 0.0);\n      }\n    }\n\n    // Draw interventions strip (player)\n    // We draw symbol if empty\n    const interventionsZone = getZone('interventions.player');\n    if (interventionsZone) {\n      const [zx, zy, zw, zh] = interventionsZone.rectPx;\n      const card = gameState.traps[1] && gameState.traps[1][0];\n      if (card) drawInterventionsP1(ctx);\n      else {\n        const img = slotSymbolImgsRef.current.get('intervention');\n        drawSlotIconWithPulse(ctx, img, zx, zy, zw, zh, 0.6);\n      }\n    }\n\n    // Draw interventions strip (opponent) - nur im Dev Mode\n    if (devMode) {\n      drawInterventionsP2(ctx);\n    }\n\n    // Draw hand (P1)\n    drawHandP1(ctx);\n\n    // ðŸ”§ DEV MODE: Draw hand (P2) - nur im Dev Mode\n    if (devMode) {\n      drawHandP2(ctx);\n    }\n\n    // Draw info panels\n    drawInfoPanels(ctx);\n\n    // Draw corruption mode indicator\n    const corrActive = !!((gameState as any).pendingAbilitySelect && (gameState as any).pendingAbilitySelect.type === 'corruption_steal');\n    if (corrActive) {\n      ctx.save();\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.8)';\n      ctx.font = 'bold 32px sans-serif';\n      ctx.textAlign = 'center';\n      ctx.fillText('ðŸ”¥ CORRUPTION TARGET SELECTION ACTIVE ðŸ”¥', 960, 100);\n\n      ctx.fillStyle = 'rgba(255, 255, 0, 0.9)';\n      ctx.font = 'bold 24px sans-serif';\n      ctx.fillText('Click on opponent government card to target', 960, 140);\n      ctx.restore();\n    }\n\n    // --- VISUAL EFFECTS: Particle bursts, card pop scale, initiative ripple & AP pop ---\n    try {\n      const now = performance.now();\n      const { particlesRef, popsRef, ripplesRef, apLabelsRef, reducedMotion } = (visualEffects || {}) as any;\n\n      const parts: any[] = particlesRef.current || [];\n      if (!reducedMotion) {\n        for (let i = parts.length - 1; i >= 0; i--) {\n          const p = parts[i];\n          const age = now - p.start;\n          if (age > p.life) {\n            parts.splice(i, 1);\n            continue;\n          }\n          p.vy += (p.gravity || 0.09);\n          p.x += p.vx;\n          p.y += p.vy;\n          const t = 1 - age / p.life;\n          ctx.save();\n          ctx.globalAlpha = Math.max(0, Math.min(1, t));\n          ctx.fillStyle = p.color || '#ffd166';\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, (p.size || 4) * t, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n        }\n        particlesRef.current = parts;\n\n        const pops: any[] = popsRef.current || [];\n        pops.forEach((pop) => {\n          const p = Math.min(1, Math.max(0, (now - pop.started) / pop.duration));\n          const eased = 1 + 0.12 * (1 - Math.pow(1 - p, 3));\n          const zone = clickZonesRef.current.find(z => z.data && z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === pop.uid));\n          if (!zone) return;\n          ctx.save();\n          ctx.translate(zone.x + zone.w / 2, zone.y + zone.h / 2);\n          ctx.scale(eased, eased);\n          ctx.globalAlpha = 0.12 * (1 - p);\n          ctx.fillStyle = '#ffffff';\n          ctx.fillRect(-zone.w / 2, -zone.h / 2, zone.w, zone.h);\n          ctx.restore();\n        });\n\n        const ripples: any[] = ripplesRef.current || [];\n        for (let i = ripples.length - 1; i >= 0; i--) {\n          const r = ripples[i];\n          const p = Math.min(1, Math.max(0, (now - r.started) / r.duration));\n          if (p >= 1) { ripples.splice(i, 1); continue; }\n          const radius = r.radius * (0.8 + 1.8 * p);\n          ctx.save();\n          const g = ctx.createRadialGradient(r.cx, r.cy, radius * 0.1, r.cx, r.cy, radius);\n          g.addColorStop(0, `rgba(255,255,255,${0.12 * (1 - p)})`);\n          g.addColorStop(1, `rgba(255,255,255,0)`);\n          ctx.fillStyle = g as any;\n          ctx.beginPath();\n          ctx.arc(r.cx, r.cy, radius, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n\n          if (r.showAp && !r._apSpawned) {\n            apLabelsRef.current = apLabelsRef.current || [];\n            apLabelsRef.current.push({ x: r.apX, y: r.apY, started: now, duration: 800, text: '+1' });\n            r._apSpawned = true;\n          }\n        }\n        ripplesRef.current = ripples;\n\n        const apl: any[] = apLabelsRef.current || [];\n        for (let i = apl.length - 1; i >= 0; i--) {\n          const l = apl[i];\n          const p = Math.min(1, Math.max(0, (now - l.started) / l.duration));\n          if (p >= 1) { apl.splice(i, 1); continue; }\n          ctx.save();\n          ctx.globalAlpha = 1 - p;\n          ctx.fillStyle = '#ffdd57';\n          ctx.font = 'bold 22px sans-serif';\n          ctx.textAlign = 'center';\n          ctx.fillText(l.text, l.x, l.y - 20 * p);\n          ctx.restore();\n        }\n        apLabelsRef.current = apl;\n      } else {\n        const apl: any[] = apLabelsRef.current || [];\n        for (let i = apl.length - 1; i >= 0; i--) {\n          const l = apl[i];\n          const p = Math.min(1, Math.max(0, (now - l.started) / l.duration));\n          if (p >= 1) { apl.splice(i, 1); continue; }\n          ctx.save();\n          ctx.globalAlpha = 1 - p;\n          ctx.fillStyle = '#ffdd57';\n          ctx.font = 'bold 18px sans-serif';\n          ctx.textAlign = 'center';\n          ctx.fillText(l.text, l.x, l.y - 10 * p);\n          ctx.restore();\n        }\n        apLabelsRef.current = apl;\n      }\n    } catch (e) {}\n\n    // --- Overlay pass: draw influence pulse ring and +N labels on top of all cards ---\n    try {\n      const now = performance.now();\n      // iterate over stored anims\n      influenceAnimRef.current.forEach((anims, uid) => {\n        // find card position by scanning clickZones\n        const zone = clickZonesRef.current.find(z => z.data && ((z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === uid)) || (z.data.card && z.data.card.uid === uid)) );\n        if (!zone) return;\n        const cx = zone.x + zone.w / 2;\n        const cy = zone.y + zone.h / 2;\n        // calculate aggregate pulse for this uid\n        let maxPulse = 0;\n        let totalAmount = 0;\n        const remaining: Array<{ start: number; duration: number; amount: number }> = [];\n        anims.forEach(a => {\n          const p = Math.min(1, Math.max(0, (now - a.start) / a.duration));\n          const pulse = Math.pow(Math.max(0, 1 - p), 2);\n          if (pulse > maxPulse) maxPulse = pulse;\n          if (p < 1) {\n            remaining.push(a);\n            totalAmount += a.amount;\n          }\n        });\n\n        // update list\n        if (remaining.length > 0) influenceAnimRef.current.set(uid, remaining);\n        else influenceAnimRef.current.delete(uid);\n\n        if (maxPulse > 0.001) {\n          // draw a soft ring to the right-bottom of influence number\n          const ringRadius = Math.max(8, zone.w * 0.08) * (1 + maxPulse * 0.6);\n          const ringX = zone.x + zone.w - 28; // near bottom-right where influence text lives\n          const ringY = zone.y + zone.h - 20;\n\n          ctx.save();\n          ctx.beginPath();\n          ctx.strokeStyle = `rgba(46, 204, 113, ${0.9 * maxPulse})`;\n          ctx.lineWidth = Math.max(2, Math.ceil(6 * maxPulse));\n          ctx.arc(ringX, ringY, ringRadius, 0, Math.PI * 2);\n          ctx.stroke();\n          ctx.restore();\n        }\n\n        if (totalAmount > 0) {\n          // floating +N to the right of influence number\n          const labelX = zone.x + zone.w - 12;\n          const labelY = zone.y + zone.h - 32 - (Math.random() * 6); // slight jitter\n          ctx.save();\n          ctx.fillStyle = '#2ecc71';\n          ctx.font = 'bold 16px sans-serif';\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'middle';\n          ctx.fillText(`+${totalAmount}`, labelX, labelY);\n          ctx.restore();\n        }\n      });\n    } catch (e) {\n      // ignore overlay errors\n    }\n\n    // --- Outline pass: draw a subtle, slightly pulsing 257x257 square around 256x256 slots ---\n    try {\n      const now2 = performance.now();\n      clickZonesRef.current.forEach((z, i) => {\n        if (!z) return;\n        const w = z.w || 0;\n        const h = z.h || 0;\n        // only target 256x256 slot-sized zones (covers the icons)\n        if (Math.abs(w - 256) > 0.1 || Math.abs(h - 256) > 0.1) return;\n        const x = z.x;\n        const y = z.y;\n\n        // Color palette (rgb)\n        const rgbTeal = '20,184,166';\n        const rgbBurg = '127,29,29';\n        const rgbPurple = '139,92,246';\n        const rgbYellow = '250,204,21';\n        const rgbOrange = '251,146,60';\n\n        // Determine slot semantic\n        let slotType: 'government' | 'public' | 'permanent' | 'instant' | 'intervention' | 'default' = 'default';\n        try {\n          const dt = z.data || {};\n          if (dt.slot && typeof dt.slot === 'string') {\n            if (dt.slot.includes('government')) slotType = 'government';\n            else if (dt.slot.includes('public')) slotType = 'public';\n            else if (dt.slot.includes('permanent')) slotType = 'permanent';\n            else if (dt.slot.includes('instant')) slotType = 'instant';\n          }\n          if (dt.type === 'row_slot' && dt.lane === 'aussen') slotType = 'government';\n          if (dt.type === 'row_slot' && dt.lane === 'innen') slotType = 'public';\n          if (dt.type === 'trap_p1' || dt.type === 'trap_p2' || (dt.card && dt.card.kind === 'trap')) slotType = 'intervention';\n          if (dt.type === 'activate_instant' || dt.slot === 'instant') slotType = 'instant';\n          if (dt.slot === 'permanent_government' || dt.slot === 'permanent_public' || dt.slot === 'permanent') slotType = 'permanent';\n        } catch (e) {}\n\n        const pulse = 0.5 + 0.5 * Math.sin(now2 / 350 + i);\n        const alpha = 0.06 + 0.12 * pulse; // subtle alpha\n        const lw = 1 + 2 * pulse; // line width between 1 and 3\n\n        // Create gradient based on slot type\n        let grad: CanvasGradient | null = null;\n        try {\n          grad = ctx.createLinearGradient(x, y, x + w, y + h);\n          if (slotType === 'government') {\n            grad.addColorStop(0, `rgba(${rgbTeal},1)`);\n            grad.addColorStop(1, `rgba(${rgbBurg},1)`);\n          } else if (slotType === 'public') {\n            grad.addColorStop(0, `rgba(${rgbBurg},1)`);\n            grad.addColorStop(1, `rgba(${rgbTeal},1)`);\n          } else if (slotType === 'permanent') {\n            grad.addColorStop(0, `rgba(${rgbPurple},1)`);\n            grad.addColorStop(1, `rgba(${rgbPurple},1)`);\n          } else if (slotType === 'instant') {\n            grad.addColorStop(0, `rgba(${rgbYellow},1)`);\n            grad.addColorStop(1, `rgba(${rgbYellow},1)`);\n          } else if (slotType === 'intervention') {\n            grad.addColorStop(0, `rgba(${rgbOrange},1)`);\n            grad.addColorStop(1, `rgba(${rgbOrange},1)`);\n          } else {\n            grad.addColorStop(0, `rgba(255,255,255,1)`);\n            grad.addColorStop(1, `rgba(255,255,255,1)`);\n          }\n        } catch (e) {\n          grad = null;\n        }\n\n        ctx.save();\n        if (grad) ctx.strokeStyle = grad as any;\n        else ctx.strokeStyle = `rgba(255,255,255,${alpha.toFixed(3)})`;\n        ctx.globalAlpha = alpha;\n        ctx.lineWidth = lw;\n        // draw 257x257 centered so that it encloses the 256 slot\n        ctx.strokeRect(x - 0.5, y - 0.5, w + 1, h + 1);\n        ctx.restore();\n      });\n    } catch (e) {\n      // ignore outline errors\n    }\n\n    ctx.restore();\n\n    // expose zones for debug snapshot\n    (window as any).__politicardDebug = {\n      uiTransform: getUiTransform(canvas.width, canvas.height),\n      canvasSize: { width: canvas.width, height: canvas.height },\n      zones: LAYOUT.zones,\n      clickZones: clickZonesRef.current.slice(0, 1000)\n    };\n\n    // Build canonical slotPositions map for animations/debugging\n    try {\n      const map: Record<string, { x: number; y: number; w: number; h: number; cx: number; cy: number }> = {};\n      clickZonesRef.current.forEach(z => {\n        const d = z.data || {};\n        // support row_slot, board_card, slot_card shapes\n        if (d.type === 'row_slot' || d.type === 'board_card' || d.type === 'slot_card' || d.type === 'hand_p1' || d.type === 'hand_p2') {\n          const player = d.player ?? (d.type === 'hand_p2' ? 2 : 1);\n          const lane = d.lane ?? (typeof d.slot === 'string' ? d.slot : (d.type === 'hand_p2' ? 'hand' : 'unknown'));\n          let index: number;\n          if (d.index != null) {\n            index = d.index;\n          } else if (d.card) {\n            // prefer explicit slotIndex, fallback to card.index, otherwise 0\n            index = (d.card.slotIndex != null) ? d.card.slotIndex : ((d.card.index != null) ? d.card.index : 0);\n          } else {\n            index = 0;\n          }\n          const key = `${player}.${lane}.${index}`;\n          map[key] = { x: z.x, y: z.y, w: z.w, h: z.h, cx: z.x + z.w / 2, cy: z.y + z.h / 2 };\n        }\n      });\n      slotPositionsRef.current = map;\n      (window as any).__politicardDebug = { ...(window as any).__politicardDebug, slotPositions: slotPositionsRef.current };\n    } catch (e) {\n      // don't let debug mapping break rendering\n    }\n\n    // Run diagnostics after canvas is fully rendered\n    runDiagnostics();\n  }, [drawLane, drawHandP1, drawHandP2, drawInterventionsP1, drawInterventionsP2, drawPermanentSlotsP1, drawPermanentSlotsP2, drawInstantSlots, drawInfoPanels, devMode, runDiagnostics]);\n\n  const DRAW_LAYOUT_OVERLAY = false; // force off per new layout system\n\n  // Load slot symbol images once\n  useEffect(() => {\n    const load = (key: string, src: string) => {\n      const img = new Image();\n      img.onload = () => { slotSymbolImgsRef.current.set(key, img); };\n      img.onerror = () => { console.warn('Failed to load slot icon', src); };\n      img.src = src;\n    };\n    // load all slot icons\n    load('public', publicSymbolUrl);\n    load('sofort', sofortSymbolUrl);\n    load('dauerhaft', dauerhaftSymbolUrl);\n    load('government', governmentSymbolUrl);\n    load('intervention', interventionSymbolUrl);\n\n    // load test GIF for gov overlay\n    try {\n      const img = new Image();\n      img.onload = () => { govGifRef.current = img; };\n      img.onerror = () => { console.warn('Failed to load gov overlay gif', govPlaceGifUrl); };\n      img.src = govPlaceGifUrl;\n    } catch (e) {}\n    // load spritesheet for placement animation\n    try {\n      const s = new Image();\n      s.onload = () => { govSpritesRef.current = s; };\n      s.onerror = () => { console.warn('Failed to load gov spritesheet', govPlaceSpritesheetUrl); };\n      s.src = govPlaceSpritesheetUrl;\n    } catch (e) {}\n    // load spritesheet for instant initiative activation\n    try {\n      const si = new Image();\n      si.onload = () => { instantSpritesRef.current = si; };\n      si.onerror = () => { console.warn('Failed to load instant spritesheet', instantSpritesheetUrl); };\n      si.src = instantSpritesheetUrl;\n    } catch (e) {}\n\n    // load spritesheet for hit/target animation (25 frames)\n    try {\n      const h = new Image();\n      h.onload = () => { hitSpritesRef.current = h; };\n      h.onerror = () => { console.warn('Failed to load hit spritesheet', hitSpritesheetUrl); };\n      h.src = hitSpritesheetUrl;\n    } catch (e) {}\n\n    // ensure first draw\n    requestAnimationFrame(draw);\n  }, [draw]);\n\n  // Expose debug trigger to manually start gov sprite animation by slot-key or uid\n  useEffect(() => {\n    (window as any).__pc_triggerGovAnim = (id: any) => {\n      try {\n        const now = performance.now();\n        // if id is slot key like '1.aussen.2'\n        if (typeof id === 'string' && id.indexOf('.') >= 0) {\n          govSpriteStateRef.current[id] = { started: now, frameCount: 14, frameDuration: 40 };\n          return;\n        }\n\n        // otherwise try to resolve as uid/id to a clickZone\n        const uid = id;\n        const zone = clickZonesRef.current.find(z => z.data && (z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === uid || (z.data.card.id === uid))));\n        if (!zone) {\n          console.warn('pc_triggerGovAnim: no slot found for uid', uid);\n          return;\n        }\n        const player = zone.data.player ?? 1;\n        const lane = zone.data.lane ?? (zone.data.slot && typeof zone.data.slot === 'string' ? zone.data.slot : 'aussen');\n        const index = zone.data.index ?? 0;\n        const key = `${player}.${lane}.${index}`;\n        govSpriteStateRef.current[key] = { started: now, frameCount: 14, frameDuration: 40 };\n      } catch (e) {\n        console.warn('pc_triggerGovAnim error', e);\n      }\n    };\n    // expose easy alias\n    try { (window as any).pc_triggerGovAnim = (window as any).__pc_triggerGovAnim; } catch (e) {}\n    return () => { delete (window as any).__pc_triggerGovAnim; };\n  }, []);\n\n  // Expose debug trigger for hit animation (key: '1.aussen.0' or uid)\n  useEffect(() => {\n    (window as any).__pc_triggerHitAnim = (id: any) => {\n      try {\n        const now = performance.now();\n        // if id is slot key like '1.aussen.2'\n        if (typeof id === 'string' && id.indexOf('.') >= 0) {\n          hitSpriteStateRef.current[id] = { started: now, frameCount: 25, frameDuration: 30 };\n          return;\n        }\n\n        // otherwise try to resolve as uid/id to a clickZone\n        const uid = id;\n        const zone = clickZonesRef.current.find(z => z.data && (z.data.card && ((z.data.card.uid ?? String(z.data.card.id)) === uid || (z.data.card.id === uid))));\n        if (!zone) {\n          console.warn('pc_triggerHitAnim: no slot found for uid', uid);\n          return;\n        }\n        const player = zone.data.player ?? 1;\n        const lane = zone.data.lane ?? (zone.data.slot && typeof zone.data.slot === 'string' ? zone.data.slot : 'aussen');\n        const index = zone.data.index ?? 0;\n        const key = `${player}.${lane}.${index}`;\n        hitSpriteStateRef.current[key] = { started: now, frameCount: 25, frameDuration: 30 };\n      } catch (e) {\n        console.warn('pc_triggerHitAnim error', e);\n      }\n    };\n    try { (window as any).pc_triggerHitAnim = (window as any).__pc_triggerHitAnim; } catch (e) {}\n    return () => { delete (window as any).__pc_triggerHitAnim; };\n  }, []);\n\n  // Redraw when game state or selection changes\n  useEffect(() => {\n    requestAnimationFrame(draw);\n  }, [gameState, selectedHandIndex, draw]);\n\n  // Continuous render loop to keep canvas updated without relying on external state refs\n  useEffect(() => {\n    let frame: number;\n    const loop = () => {\n      draw();\n      frame = requestAnimationFrame(loop);\n    };\n    frame = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frame);\n  }, [draw]);\n\n  const handleCardClick = useCallback((data: any) => {\n    // Corruption target selection: intercept board card clicks for opponent government\n    if (corruptionSelectActorRef.current && data && data.type === 'board_card') {\n      try {\n        const actor = corruptionSelectActorRef.current as Player;\n        const victim = actor === 1 ? 2 : 1;\n        if (data.player === victim && (data.lane === 'aussen' || data.lane === 'government')) {\n          const uid = data.card?.uid ?? data.card?.id;\n          if (uid != null) {\n            corruptionSelectActorRef.current = null;\n            try { window.dispatchEvent(new CustomEvent('pc:corruption_target_selected', { detail: { player: actor, targetUid: uid } })); } catch (e) {}\n            return; // do not propagate\n          }\n        }\n      } catch (e) {}\n    }\n    // Hand-Klick\n    if (data.type === 'hand_p1') {\n      const uid = data.card?.uid ?? data.card?.id;\n      const stateHand = gameState.hands?.[1] || [];\n      const idxInState = stateHand.findIndex((c: any) => (c.uid ?? c.id) === uid);\n      onCardClick(data);\n      return;\n    }\n\n    // Slot-Klick\n    if (data.type === 'row_slot') {\n      const lane: 'public' | 'government' = data.lane;\n      const cap = getLaneCapacity(lane);\n\n      // Hole aktuelle Row-LÃ¤nge aus gameState\n      const rowCards = lane === 'public'\n        ? gameState.board?.[1]?.innen ?? []\n        : gameState.board?.[1]?.aussen ?? [];\n\n      if (rowCards.length >= cap) {\n        // Optional: UI Feedback\n        console.warn(`Row ${lane} is full (${rowCards.length}/${cap})`);\n        return;\n      }\n\n      onCardClick(data);\n      return;\n    }\n\n    // Andere Klicks (empty_slot, board_card, etc.)\n    onCardClick(data);\n  }, [gameState, onCardClick]);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    const mx = (e.clientX - rect.left - offsetX) / scale;\n    const my = (e.clientY - rect.top - offsetY) / scale;\n\n    const hit = clickZonesRef.current.find(z => mx >= z.x && mx <= z.x + z.w && my >= z.y && my <= z.y + z.h);\n    if (hit) {\n      console.debug('[CanvasClick] mx,my,hit:', mx, my, hit.data);\n      try {\n        // If user clicked a drawn card in an instant slot, normalize to activate_instant\n        const d = hit.data || {};\n        if (d.type === 'slot_card' && d.slot === 'instant') {\n          handleCardClick({ type: 'activate_instant', player: d.player || 1, card: d.card });\n          return;\n        }\n        // Fallback: if there's an explicit activate_instant zone, pass through\n        if (d.type === 'activate_instant') {\n          handleCardClick(d);\n          return;\n        }\n      } catch (err) {}\n      handleCardClickInternal(hit.data);\n    }\n  }, [handleCardClick]);\n\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const { scale, offsetX, offsetY } = getUiTransform(canvas.width, canvas.height);\n    const mx = (e.clientX - rect.left - offsetX) / scale;\n    const my = (e.clientY - rect.top - offsetY) / scale;\n\n    const hit = clickZonesRef.current.find(z => mx >= z.x && mx <= z.x + z.w && my >= z.y && my <= z.y + z.h);\n    if (hit) {\n      console.log('[hover]', hit.data.type, hit.data.card?.name);\n      onCardHover({ ...hit.data, x: e.clientX, y: e.clientY });\n    } else {\n      onCardHover(null);\n    }\n  }, [onCardHover]);\n\n  const handleWheel = useCallback((e: React.WheelEvent<HTMLCanvasElement>) => {\n    // only enable when player1 has more slots than visible\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    const zone = getZone('hand.player');\n    if (!zone) return;\n    if (handLen <= 5) return; // nothing to scroll\n\n    // Prevent page scrolling when over canvas\n    e.preventDefault();\n\n    // accumulate target offset (invert so wheel down moves cards up)\n    // Each wheel step moves by 48px per delta unit\n    const delta = Math.sign(e.deltaY) * 48;\n    // compute slot height more robustly\n    const slots = computeSlotRects(zone);\n    const slotH = slots && slots.length > 0 ? slots[0].h : zone.rectPx[3] / 5;\n    const visible = 5;\n    const maxOffset = -(Math.max(0, handLen - visible) * slotH);\n    handScrollTargetRef.current = Math.max(Math.min(handScrollTargetRef.current - delta, 0), maxOffset);\n  }, [gameState.hands]);\n\n  const handleTouchStart = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    if (!e.touches || e.touches.length === 0) return;\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    if (handLen <= 5) return;\n    isTouchingRef.current = true;\n    const y = e.touches[0].clientY;\n    touchStartYRef.current = y;\n    lastTouchYRef.current = y;\n    e.preventDefault();\n  }, [gameState.hands]);\n\n  const handleTouchMove = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    if (!isTouchingRef.current) return;\n    if (!e.touches || e.touches.length === 0) return;\n    const y = e.touches[0].clientY;\n    const last = lastTouchYRef.current ?? y;\n    const dy = y - last; // positive when moving down\n    lastTouchYRef.current = y;\n\n    // invert so dragging up moves cards up\n    const delta = -dy;\n    const handLen = (gameState.hands && gameState.hands[1]) ? gameState.hands[1].length : 0;\n    const zone = getZone('hand.player');\n    if (!zone) return;\n    const slots = computeSlotRects(zone);\n    const slotH = slots && slots.length > 0 ? slots[0].h : zone.rectPx[3] / 5;\n    const visible = 5;\n    const maxOffset = -(Math.max(0, handLen - visible) * slotH);\n    handScrollTargetRef.current = Math.max(Math.min(handScrollTargetRef.current + delta, 0), maxOffset);\n    e.preventDefault();\n  }, [gameState.hands]);\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent<HTMLCanvasElement>) => {\n    isTouchingRef.current = false;\n    touchStartYRef.current = null;\n    lastTouchYRef.current = null;\n  }, []);\n\n\n\n  // Expose debug trigger to manually start instant sprite animation by slot-key or uid\n  useEffect(() => {\n    (window as any).__pc_triggerInstantAnim = (key: any) => {\n      const now = performance.now();\n      instantSpriteStateRef.current[key || '1.instant.0'] = { started: now, frameCount: 14, frameDuration: 40 };\n    };\n    // alias\n    try { (window as any).pc_triggerInstantAnim = (window as any).__pc_triggerInstantAnim; } catch (e) {}\n    return () => { delete (window as any).__pc_triggerGovAnim; delete (window as any).__pc_triggerInstantAnim; };\n  }, []);\n\n  // Click handler wrapper for corruption selection\n  const handleCardClickInternal = useCallback((data: any) => {\n    const sel: any = (gameState as any).pendingAbilitySelect;\n    if (sel && sel.type === 'corruption_steal') {\n      // Accept clicks on either actual card sprites (with uid) or on empty row_slot hitboxes.\n      if (data.player !== sel.actorPlayer && data.lane === 'aussen') {\n        let targetUid = (data as any).uid;\n\n        // If we got a row_slot hit (no uid), map indexâ†’uid from board state\n        if (!targetUid && data.type === 'row_slot') {\n          try {\n            const p = data.player;\n            const idx = data.index;\n            const card = (gameState as any).board?.[p]?.aussen?.[idx];\n            targetUid = card?.uid;\n          } catch(e) {}\n        }\n\n        if (targetUid) {\n          try {\n            console.debug('[CORR] forwarding uid', targetUid, 'actorPlayer=', sel.actorPlayer);\n            window.dispatchEvent(new CustomEvent('pc:corruption_pick_target', { detail: { player: sel.actorPlayer, targetUid } }));\n            // Also open small confirmation overlay via DOM event for modal convenience\n            try { window.dispatchEvent(new CustomEvent('pc:corruption_target_selected', { detail: { player: sel.actorPlayer, targetUid } })); } catch(e) {}\n          } catch(e) {}\n          return; // consume click\n        }\n      }\n    }\n    onCardClick(data);\n  }, [gameState, onCardClick]);\n\n  useEffect(() => {\n    const onDiceResult = () => {\n      // remove corruption modal if exists\n      const el = document.getElementById('pc-corruption-modal');\n      if (el) el.remove();\n      corruptionSelectActorRef.current = null;\n    };\n    window.addEventListener('pc:dice_result', onDiceResult as EventListener);\n    return () => window.removeEventListener('pc:dice_result', onDiceResult as EventListener);\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={1920}\n      height={1080}\n      style={{\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        imageRendering: 'auto',\n      }}\n      onClick={handleClick}\n      onMouseMove={handleMouseMove}\n      onWheel={handleWheel}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    />\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}