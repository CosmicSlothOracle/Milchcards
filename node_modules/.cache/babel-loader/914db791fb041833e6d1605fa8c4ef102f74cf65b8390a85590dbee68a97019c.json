{"ast":null,"code":"import { isInstantInitiative } from '../utils/tags';\n\n// Helper: Spieler wechseln\nconst other = p => p === 1 ? 2 : 1;\nexport function recomputeAuraFlags(state) {\n  for (const p of [1, 2]) {\n    const f = state.effectFlags[p];\n    f.scienceInitiativeBonus = false; // Jennifer Doudna: +1 influence on instant initiatives\n    f.healthInitiativeBonus = false; // Anthony Fauci: +1 influence on instant initiatives\n    f.cultureInitiativeBonus = false; // Ai Weiwei: +1 card +1 AP on instant initiatives\n    f.militaryInitiativePenalty = false; // Noam Chomsky: -1 influence on opponent instant initiatives\n    // Movement refund is per turn; leave whatever your start-of-turn sets\n    // f.govRefundAvailable is managed at turn start\n  }\n  for (const p of [1, 2]) {\n    const pub = state.board[p].innen;\n    const has = name => pub.some(c => c.name === name && !c.deactivated);\n    if (has('Jennifer Doudna')) state.effectFlags[p].scienceInitiativeBonus = true;\n    if (has('Anthony Fauci')) state.effectFlags[p].healthInitiativeBonus = true;\n    if (has('Ai Weiwei')) state.effectFlags[p].cultureInitiativeBonus = true;\n    if (has('Noam Chomsky')) state.effectFlags[p === 1 ? 2 : 1].militaryInitiativePenalty = true;\n    if (pub.some(c => ['Greta Thunberg', 'Malala Yousafzai', 'Ai Weiwei', 'Alexei Navalny'].includes(c.name) && !c.deactivated)) {\n      state.effectFlags[p].govRefundAvailable = true; // movement â†’ first gov card refund\n    }\n  }\n}\n\n/**\r\n * Wendet Einfluss-Modifikationen fÃ¼r Sofort-Initiativen an\r\n * Nur fÃ¼r Sofort-Initiativen, keine Topics/Tags\r\n */\nexport function applyInstantInitiativeInfluenceMods(state, player, baseInfluence, card) {\n  var _state$effectFlags$pl, _state$effectFlags$pl2, _state$effectFlags$pl3;\n  let influence = baseInfluence;\n  const reasons = [];\n\n  // Nur fÃ¼r Sofort-Initiativen\n  if (!isInstantInitiative(card)) {\n    return {\n      influence,\n      reasons\n    };\n  }\n\n  // Jennifer Doudna: +1 Einfluss\n  if ((_state$effectFlags$pl = state.effectFlags[player]) !== null && _state$effectFlags$pl !== void 0 && _state$effectFlags$pl.scienceInitiativeBonus) {\n    influence += 1;\n    reasons.push('Jennifer Doudna: +1 Einfluss');\n  }\n\n  // Anthony Fauci: +1 Einfluss\n  if ((_state$effectFlags$pl2 = state.effectFlags[player]) !== null && _state$effectFlags$pl2 !== void 0 && _state$effectFlags$pl2.healthInitiativeBonus) {\n    influence += 1;\n    reasons.push('Anthony Fauci: +1 Einfluss');\n  }\n\n  // Noam Chomsky: -1 Einfluss (fÃ¼r den Spieler mit der Aura)\n  if ((_state$effectFlags$pl3 = state.effectFlags[player]) !== null && _state$effectFlags$pl3 !== void 0 && _state$effectFlags$pl3.militaryInitiativePenalty) {\n    influence -= 1;\n    reasons.push('Noam Chomsky: âˆ’1 Einfluss');\n  }\n  return {\n    influence,\n    reasons\n  };\n}\n\n/**\r\n * Ai Weiwei: +1 Karte +1 AP bei jeder Sofort-Initiative (AP cap bei 4)\r\n */\nexport function maybeApplyAiWeiweiInstantBonus(state, player, card, log) {\n  var _state$effectFlags$pl4;\n  // Nur fÃ¼r Sofort-Initiativen\n  if (!isInstantInitiative(card)) return;\n\n  // Nur wenn Ai Weiwei in der Ã–ffentlichkeit ist\n  if (!((_state$effectFlags$pl4 = state.effectFlags[player]) !== null && _state$effectFlags$pl4 !== void 0 && _state$effectFlags$pl4.cultureInitiativeBonus)) return;\n\n  // +1 Karte ziehen (falls Deck nicht leer)\n  const drawn = state.decks[player].shift();\n  if (drawn) {\n    state.hands[player].push(drawn);\n    log(`ðŸ”¥ Ai Weiwei: +1 Karte gezogen (${drawn.name})`);\n  }\n\n  // +1 AP (mit Cap bei 4)\n  const before = state.actionPoints[player];\n  state.actionPoints[player] = before + 1;\n  if (before !== state.actionPoints[player]) {\n    log(`ðŸ”¥ Ai Weiwei: +1 AP (${before}â†’${state.actionPoints[player]})`);\n  }\n}","map":{"version":3,"names":["isInstantInitiative","other","p","recomputeAuraFlags","state","f","effectFlags","scienceInitiativeBonus","healthInitiativeBonus","cultureInitiativeBonus","militaryInitiativePenalty","pub","board","innen","has","name","some","c","deactivated","includes","govRefundAvailable","applyInstantInitiativeInfluenceMods","player","baseInfluence","card","_state$effectFlags$pl","_state$effectFlags$pl2","_state$effectFlags$pl3","influence","reasons","push","maybeApplyAiWeiweiInstantBonus","log","_state$effectFlags$pl4","drawn","decks","shift","hands","before","actionPoints"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/state/effects.ts"],"sourcesContent":["import { GameState, Player, Card } from '../types/game';\r\nimport { isInstantInitiative } from '../utils/tags';\r\n\r\n// Helper: Spieler wechseln\r\nconst other = (p: Player): Player => (p === 1 ? 2 : 1) as Player;\r\n\r\nexport function recomputeAuraFlags(state: GameState) {\r\n  for (const p of [1, 2] as const) {\r\n    const f = state.effectFlags[p];\r\n    f.scienceInitiativeBonus    = false; // Jennifer Doudna: +1 influence on instant initiatives\r\n    f.healthInitiativeBonus     = false; // Anthony Fauci: +1 influence on instant initiatives\r\n    f.cultureInitiativeBonus    = false; // Ai Weiwei: +1 card +1 AP on instant initiatives\r\n    f.militaryInitiativePenalty = false; // Noam Chomsky: -1 influence on opponent instant initiatives\r\n    // Movement refund is per turn; leave whatever your start-of-turn sets\r\n    // f.govRefundAvailable is managed at turn start\r\n  }\r\n\r\n  for (const p of [1, 2] as const) {\r\n    const pub = state.board[p].innen;\r\n\r\n    const has = (name: string) =>\r\n      pub.some(c => (c as any).name === name && !(c as any).deactivated);\r\n\r\n    if (has('Jennifer Doudna')) state.effectFlags[p].scienceInitiativeBonus = true;\r\n    if (has('Anthony Fauci'))   state.effectFlags[p].healthInitiativeBonus  = true;\r\n    if (has('Ai Weiwei'))       state.effectFlags[p].cultureInitiativeBonus = true;\r\n    if (has('Noam Chomsky'))    state.effectFlags[p === 1 ? 2 : 1].militaryInitiativePenalty = true;\r\n\r\n    if (pub.some(c => ['Greta Thunberg','Malala Yousafzai','Ai Weiwei','Alexei Navalny']\r\n        .includes((c as any).name) && !(c as any).deactivated)) {\r\n      state.effectFlags[p].govRefundAvailable = true; // movement â†’ first gov card refund\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Wendet Einfluss-Modifikationen fÃ¼r Sofort-Initiativen an\r\n * Nur fÃ¼r Sofort-Initiativen, keine Topics/Tags\r\n */\r\nexport function applyInstantInitiativeInfluenceMods(\r\n  state: GameState,\r\n  player: Player,\r\n  baseInfluence: number,\r\n  card: Card\r\n): { influence: number; reasons: string[] } {\r\n  let influence = baseInfluence;\r\n  const reasons: string[] = [];\r\n\r\n  // Nur fÃ¼r Sofort-Initiativen\r\n  if (!isInstantInitiative(card)) {\r\n    return { influence, reasons };\r\n  }\r\n\r\n  // Jennifer Doudna: +1 Einfluss\r\n  if (state.effectFlags[player]?.scienceInitiativeBonus) {\r\n    influence += 1;\r\n    reasons.push('Jennifer Doudna: +1 Einfluss');\r\n  }\r\n\r\n  // Anthony Fauci: +1 Einfluss\r\n  if (state.effectFlags[player]?.healthInitiativeBonus) {\r\n    influence += 1;\r\n    reasons.push('Anthony Fauci: +1 Einfluss');\r\n  }\r\n\r\n  // Noam Chomsky: -1 Einfluss (fÃ¼r den Spieler mit der Aura)\r\n  if (state.effectFlags[player]?.militaryInitiativePenalty) {\r\n    influence -= 1;\r\n    reasons.push('Noam Chomsky: âˆ’1 Einfluss');\r\n  }\r\n\r\n  return { influence, reasons };\r\n}\r\n\r\n/**\r\n * Ai Weiwei: +1 Karte +1 AP bei jeder Sofort-Initiative (AP cap bei 4)\r\n */\r\nexport function maybeApplyAiWeiweiInstantBonus(\r\n  state: GameState,\r\n  player: Player,\r\n  card: Card,\r\n  log: (s: string) => void\r\n): void {\r\n  // Nur fÃ¼r Sofort-Initiativen\r\n  if (!isInstantInitiative(card)) return;\r\n\r\n  // Nur wenn Ai Weiwei in der Ã–ffentlichkeit ist\r\n  if (!state.effectFlags[player]?.cultureInitiativeBonus) return;\r\n\r\n  // +1 Karte ziehen (falls Deck nicht leer)\r\n  const drawn = state.decks[player].shift();\r\n  if (drawn) {\r\n    state.hands[player].push(drawn);\r\n    log(`ðŸ”¥ Ai Weiwei: +1 Karte gezogen (${drawn.name})`);\r\n  }\r\n\r\n  // +1 AP (mit Cap bei 4)\r\n  const before = state.actionPoints[player];\r\n  state.actionPoints[player] = before + 1;\r\n\r\n  if (before !== state.actionPoints[player]) {\r\n    log(`ðŸ”¥ Ai Weiwei: +1 AP (${before}â†’${state.actionPoints[player]})`);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,mBAAmB,QAAQ,eAAe;;AAEnD;AACA,MAAMC,KAAK,GAAIC,CAAS,IAAcA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAY;AAEhE,OAAO,SAASC,kBAAkBA,CAACC,KAAgB,EAAE;EACnD,KAAK,MAAMF,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAW;IAC/B,MAAMG,CAAC,GAAGD,KAAK,CAACE,WAAW,CAACJ,CAAC,CAAC;IAC9BG,CAAC,CAACE,sBAAsB,GAAM,KAAK,CAAC,CAAC;IACrCF,CAAC,CAACG,qBAAqB,GAAO,KAAK,CAAC,CAAC;IACrCH,CAAC,CAACI,sBAAsB,GAAM,KAAK,CAAC,CAAC;IACrCJ,CAAC,CAACK,yBAAyB,GAAG,KAAK,CAAC,CAAC;IACrC;IACA;EACF;EAEA,KAAK,MAAMR,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAW;IAC/B,MAAMS,GAAG,GAAGP,KAAK,CAACQ,KAAK,CAACV,CAAC,CAAC,CAACW,KAAK;IAEhC,MAAMC,GAAG,GAAIC,IAAY,IACvBJ,GAAG,CAACK,IAAI,CAACC,CAAC,IAAKA,CAAC,CAASF,IAAI,KAAKA,IAAI,IAAI,CAAEE,CAAC,CAASC,WAAW,CAAC;IAEpE,IAAIJ,GAAG,CAAC,iBAAiB,CAAC,EAAEV,KAAK,CAACE,WAAW,CAACJ,CAAC,CAAC,CAACK,sBAAsB,GAAG,IAAI;IAC9E,IAAIO,GAAG,CAAC,eAAe,CAAC,EAAIV,KAAK,CAACE,WAAW,CAACJ,CAAC,CAAC,CAACM,qBAAqB,GAAI,IAAI;IAC9E,IAAIM,GAAG,CAAC,WAAW,CAAC,EAAQV,KAAK,CAACE,WAAW,CAACJ,CAAC,CAAC,CAACO,sBAAsB,GAAG,IAAI;IAC9E,IAAIK,GAAG,CAAC,cAAc,CAAC,EAAKV,KAAK,CAACE,WAAW,CAACJ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAACQ,yBAAyB,GAAG,IAAI;IAE/F,IAAIC,GAAG,CAACK,IAAI,CAACC,CAAC,IAAI,CAAC,gBAAgB,EAAC,kBAAkB,EAAC,WAAW,EAAC,gBAAgB,CAAC,CAC/EE,QAAQ,CAAEF,CAAC,CAASF,IAAI,CAAC,IAAI,CAAEE,CAAC,CAASC,WAAW,CAAC,EAAE;MAC1Dd,KAAK,CAACE,WAAW,CAACJ,CAAC,CAAC,CAACkB,kBAAkB,GAAG,IAAI,CAAC,CAAC;IAClD;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASC,mCAAmCA,CACjDjB,KAAgB,EAChBkB,MAAc,EACdC,aAAqB,EACrBC,IAAU,EACgC;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC1C,IAAIC,SAAS,GAAGL,aAAa;EAC7B,MAAMM,OAAiB,GAAG,EAAE;;EAE5B;EACA,IAAI,CAAC7B,mBAAmB,CAACwB,IAAI,CAAC,EAAE;IAC9B,OAAO;MAAEI,SAAS;MAAEC;IAAQ,CAAC;EAC/B;;EAEA;EACA,KAAAJ,qBAAA,GAAIrB,KAAK,CAACE,WAAW,CAACgB,MAAM,CAAC,cAAAG,qBAAA,eAAzBA,qBAAA,CAA2BlB,sBAAsB,EAAE;IACrDqB,SAAS,IAAI,CAAC;IACdC,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;EAC9C;;EAEA;EACA,KAAAJ,sBAAA,GAAItB,KAAK,CAACE,WAAW,CAACgB,MAAM,CAAC,cAAAI,sBAAA,eAAzBA,sBAAA,CAA2BlB,qBAAqB,EAAE;IACpDoB,SAAS,IAAI,CAAC;IACdC,OAAO,CAACC,IAAI,CAAC,4BAA4B,CAAC;EAC5C;;EAEA;EACA,KAAAH,sBAAA,GAAIvB,KAAK,CAACE,WAAW,CAACgB,MAAM,CAAC,cAAAK,sBAAA,eAAzBA,sBAAA,CAA2BjB,yBAAyB,EAAE;IACxDkB,SAAS,IAAI,CAAC;IACdC,OAAO,CAACC,IAAI,CAAC,2BAA2B,CAAC;EAC3C;EAEA,OAAO;IAAEF,SAAS;IAAEC;EAAQ,CAAC;AAC/B;;AAEA;AACA;AACA;AACA,OAAO,SAASE,8BAA8BA,CAC5C3B,KAAgB,EAChBkB,MAAc,EACdE,IAAU,EACVQ,GAAwB,EAClB;EAAA,IAAAC,sBAAA;EACN;EACA,IAAI,CAACjC,mBAAmB,CAACwB,IAAI,CAAC,EAAE;;EAEhC;EACA,IAAI,GAAAS,sBAAA,GAAC7B,KAAK,CAACE,WAAW,CAACgB,MAAM,CAAC,cAAAW,sBAAA,eAAzBA,sBAAA,CAA2BxB,sBAAsB,GAAE;;EAExD;EACA,MAAMyB,KAAK,GAAG9B,KAAK,CAAC+B,KAAK,CAACb,MAAM,CAAC,CAACc,KAAK,CAAC,CAAC;EACzC,IAAIF,KAAK,EAAE;IACT9B,KAAK,CAACiC,KAAK,CAACf,MAAM,CAAC,CAACQ,IAAI,CAACI,KAAK,CAAC;IAC/BF,GAAG,CAAC,mCAAmCE,KAAK,CAACnB,IAAI,GAAG,CAAC;EACvD;;EAEA;EACA,MAAMuB,MAAM,GAAGlC,KAAK,CAACmC,YAAY,CAACjB,MAAM,CAAC;EACzClB,KAAK,CAACmC,YAAY,CAACjB,MAAM,CAAC,GAAGgB,MAAM,GAAG,CAAC;EAEvC,IAAIA,MAAM,KAAKlC,KAAK,CAACmC,YAAY,CAACjB,MAAM,CAAC,EAAE;IACzCU,GAAG,CAAC,wBAAwBM,MAAM,IAAIlC,KAAK,CAACmC,YAAY,CAACjB,MAAM,CAAC,GAAG,CAAC;EACtE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}