{"ast":null,"code":"import _objectSpread from\"C:/Users/skank/Videos/Cards/Milchcards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useCallback,useState}from'react';import{takeTurn as aiTakeTurn}from'../ai/aiPlayer';export function useGameAI(gameState,setGameState,log){var _gameState$aiEnabled$,_gameState$aiEnabled;const aiEnabled=(_gameState$aiEnabled$=(_gameState$aiEnabled=gameState.aiEnabled)===null||_gameState$aiEnabled===void 0?void 0:_gameState$aiEnabled[2])!==null&&_gameState$aiEnabled$!==void 0?_gameState$aiEnabled$:false;const[aiPreset,setAiPreset]=useState('AUTORITAERER_REALIST');// Debug logging for AI state changes (only in development)\nif(process.env.NODE_ENV==='development'){console.log('🔧 DEBUG: useGameAI state - aiEnabled:',aiEnabled,'aiPreset:',aiPreset);}// AI enabled state - controlled by game logic\n// const forceAIEnabled = true; // Removed force-enable hack\n// Enhanced setAiEnabled with logging\nconst setAiEnabledWithLog=useCallback(enabled=>{setGameState(prev=>{var _prev$aiEnabled$,_prev$aiEnabled;return _objectSpread(_objectSpread({},prev),{},{aiEnabled:{1:(_prev$aiEnabled$=(_prev$aiEnabled=prev.aiEnabled)===null||_prev$aiEnabled===void 0?void 0:_prev$aiEnabled[1])!==null&&_prev$aiEnabled$!==void 0?_prev$aiEnabled$:false,2:enabled}});});// Only set preset when AI is enabled\nif(enabled){setAiPreset('AUTORITAERER_REALIST');}},[setGameState]);// Enhanced setAiPreset with logging - only when AI is enabled\nconst setAiPresetWithLog=useCallback(preset=>{if(aiEnabled){console.log('🔧 DEBUG: setAiPreset called with:',preset);setAiPreset(preset);}else{console.log('🔧 DEBUG: setAiPreset ignored - AI not enabled');}},[aiEnabled]);const runAITurn=useCallback(()=>{console.log('🔧 DEBUG: runAITurn called - aiEnabled:',aiEnabled,'current player:',gameState.current);// Determine difficulty mapping (default to medium)\nconst difficulty='medium';// Schedule AI execution to avoid React state update conflicts\nsetTimeout(()=>{try{aiTakeTurn(setGameState,difficulty,log);}catch(err){console.error('AI execution error',err);log('❌ AI execution error');}},50);},[aiEnabled,log,gameState.current,setGameState,aiPreset]);const canUsePutinDoubleIntervention=useCallback(player=>{const board=gameState.board[player];const allCards=[...board.innen,...board.aussen].filter(c=>c.kind==='pol');const putin=allCards.find(c=>c.name==='Vladimir Putin');if(!putin||putin.deactivated||putin._activeUsed)return false;const interventions=gameState.hands[player].filter(c=>c.kind==='spec');return interventions.length>=2;},[gameState]);const executePutinDoubleIntervention=useCallback(interventionCardIds=>{setGameState(prev=>{// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst player=prev.current;// Putin special ability implementation would go here\nlog(\"\\uD83E\\uDD16 Putin setzt doppelte Intervention ein\");return prev;});},[log]);return{runAITurn,canUsePutinDoubleIntervention,executePutinDoubleIntervention,aiEnabled,setAiEnabled:setAiEnabledWithLog,aiPreset,setAiPreset:setAiPreset// Use original function temporarily\n};}","map":{"version":3,"names":["useCallback","useState","takeTurn","aiTakeTurn","useGameAI","gameState","setGameState","log","_gameState$aiEnabled$","_gameState$aiEnabled","aiEnabled","aiPreset","setAiPreset","process","env","NODE_ENV","console","setAiEnabledWithLog","enabled","prev","_prev$aiEnabled$","_prev$aiEnabled","_objectSpread","setAiPresetWithLog","preset","runAITurn","current","difficulty","setTimeout","err","error","canUsePutinDoubleIntervention","player","board","allCards","innen","aussen","filter","c","kind","putin","find","name","deactivated","_activeUsed","interventions","hands","length","executePutinDoubleIntervention","interventionCardIds","setAiEnabled"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/hooks/useGameAI.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { GameState, Card, Player } from '../types/game';\nimport { PRESET_DECKS } from '../data/gameData';\nimport { sumRow, getCardActionPointCost } from '../utils/gameUtils';\nimport { takeTurn as aiTakeTurn, Difficulty } from '../ai/aiPlayer';\n\nexport function useGameAI(\n  gameState: GameState,\n  setGameState: React.Dispatch<React.SetStateAction<GameState>>,\n  log: (msg: string) => void\n) {\n  const aiEnabled = gameState.aiEnabled?.[2] ?? false;\n  const [aiPreset, setAiPreset] = useState<keyof typeof PRESET_DECKS>('AUTORITAERER_REALIST');\n\n  // Debug logging for AI state changes (only in development)\n  if (process.env.NODE_ENV === 'development') {\n    console.log('🔧 DEBUG: useGameAI state - aiEnabled:', aiEnabled, 'aiPreset:', aiPreset);\n  }\n\n  // AI enabled state - controlled by game logic\n  // const forceAIEnabled = true; // Removed force-enable hack\n\n  // Enhanced setAiEnabled with logging\n  const setAiEnabledWithLog = useCallback((enabled: boolean) => {\n    setGameState(prev => ({\n      ...prev,\n      aiEnabled: {\n        1: prev.aiEnabled?.[1] ?? false,\n        2: enabled\n      }\n    }));\n\n    // Only set preset when AI is enabled\n    if (enabled) {\n      setAiPreset('AUTORITAERER_REALIST');\n    }\n  }, [setGameState]);\n\n  // Enhanced setAiPreset with logging - only when AI is enabled\n  const setAiPresetWithLog = useCallback((preset: keyof typeof PRESET_DECKS) => {\n    if (aiEnabled) {\n      console.log('🔧 DEBUG: setAiPreset called with:', preset);\n      setAiPreset(preset);\n    } else {\n      console.log('🔧 DEBUG: setAiPreset ignored - AI not enabled');\n    }\n  }, [aiEnabled]);\n\n  const runAITurn = useCallback(() => {\n    console.log('🔧 DEBUG: runAITurn called - aiEnabled:', aiEnabled, 'current player:', gameState.current);\n\n    // Determine difficulty mapping (default to medium)\n    const difficulty: Difficulty = 'medium';\n\n    // Schedule AI execution to avoid React state update conflicts\n    setTimeout(() => {\n      try {\n        aiTakeTurn(setGameState, difficulty, log);\n      } catch (err) {\n        console.error('AI execution error', err);\n        log('❌ AI execution error');\n      }\n    }, 50);\n  }, [aiEnabled, log, gameState.current, setGameState, aiPreset]);\n\n  const canUsePutinDoubleIntervention = useCallback((player: Player): boolean => {\n    const board = gameState.board[player];\n    const allCards = [...board.innen, ...board.aussen].filter(c => c.kind === 'pol') as any[];\n    const putin = allCards.find(c => c.name === 'Vladimir Putin');\n\n    if (!putin || putin.deactivated || putin._activeUsed) return false;\n\n    const interventions = gameState.hands[player].filter(c => c.kind === 'spec');\n    return interventions.length >= 2;\n  }, [gameState]);\n\n  const executePutinDoubleIntervention = useCallback((interventionCardIds: number[]) => {\n    setGameState(prev => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const player = prev.current;\n      // Putin special ability implementation would go here\n      log(`🤖 Putin setzt doppelte Intervention ein`);\n      return prev;\n    });\n  }, [log]);\n\n  return {\n    runAITurn,\n    canUsePutinDoubleIntervention,\n    executePutinDoubleIntervention,\n    aiEnabled,\n    setAiEnabled: setAiEnabledWithLog,\n    aiPreset,\n    setAiPreset: setAiPreset, // Use original function temporarily\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}