{"ast":null,"code":"import _objectSpread from\"C:/Users/skank/Videos/Cards/Milchcards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{getCardImagePath,Pols,Specials}from'../data/gameData';import{makePolInstance,makeSpecInstance}from'./cardUtils';import{makeUid}from'./id';import{getLaneCapacity}from'../ui/layout';// Re-export helpers from effectUtils\nexport{EffectQueueManager,ActiveAbilitiesManager,tryApplyNegativeEffect}from'./effectUtils';// Re-export helpers from cardUtils\nexport{makePolInstance,makeSpecInstance,sortHandCards,adjustInfluence,findCardLocation,getAllowedLaneForCard,isLaneAllowedForCard,getCardActionPointCost}from'./cardUtils';// Helper functions\nexport function ceil(x){return Math.ceil(x);}export function pow(a,b){return Math.pow(a,b);}export function calcBP(influence,T){return ceil(pow(influence,1.4)+2*T);}export function shuffle(a){for(let i=a.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[a[i],a[j]]=[a[j],a[i]];}return a;}// Game logic helpers\nexport function sumRow(arr){return arr.reduce((a,c)=>{if(c.kind==='pol'){return a+c.influence;// ğŸ”¥ VEREINFACHT: Nur noch influence\n}return a;// Special cards don't contribute to influence\n},0);}// Unified scoring: Government influence including permanent auras and Joschka+NGO synergy\nexport function sumGovernmentInfluenceWithAuras(state,player){const govCards=state.board[player].aussen.filter(c=>c.kind==='pol');// Opponent reference kept for completeness of future aura checks\nlet total=0;const govSlot=state.permanentSlots[player].government;const pubSlot=state.permanentSlots[player].public;govCards.forEach(card=>{var _state$effectFlags$pl,_state$effectFlags$pl2,_state$effectFlags$pl3;let influence=card.influence;// Koalitionszwang: Tier 2 Regierungskarten +1 Einfluss\nif((govSlot===null||govSlot===void 0?void 0:govSlot.kind)==='spec'&&govSlot.name==='Koalitionszwang'){if(card.T===2)influence+=1;}// Napoleon Komplex: Tier 1 Regierungskarten +1 Einfluss\nif((govSlot===null||govSlot===void 0?void 0:govSlot.kind)==='spec'&&govSlot.name==='Napoleon Komplex'){if(card.T===1)influence+=1;}// Zivilgesellschaft: Bewegung-Karten +1 Einfluss (wenn eine Bewegung in Ã–ffentlichkeit liegt)\nif((pubSlot===null||pubSlot===void 0?void 0:pubSlot.kind)==='spec'&&pubSlot.name==='Zivilgesellschaft'){const bewegungNames=['Greta Thunberg','Malala Yousafzai','Ai Weiwei','Alexei Navalny'];const hasBewegung=state.board[player].innen.some(c=>c.kind==='spec'&&c.type==='Ã–ffentlichkeitskarte'&&bewegungNames.includes(c.name));if(hasBewegung)influence+=1;}// Joschka Fischer NGO-Boost: +1 Einfluss, wenn eine NGO-Ã–ffentlichkeitskarte liegt\nif(card.name==='Joschka Fischer'&&card.effect==='ngo_boost'){const hasNgoCard=state.board[player].innen.some(c=>c.kind==='spec'&&c.type==='Ã–ffentlichkeitskarte'&&c.tag==='NGO');if(hasNgoCard)influence+=1;}// Milchglas Transparenz: +1 Einfluss wenn keine NGO/Bewegung liegt\nif((govSlot===null||govSlot===void 0?void 0:govSlot.kind)==='spec'&&govSlot.name==='Milchglas Transparenz'){const ngoMovementNames=['Jennifer Doudna','Noam Chomsky','Bill Gates','Greta Thunberg','Malala Yousafzai','Ai Weiwei','Alexei Navalny'];const hasNgoMovement=state.board[player].innen.some(c=>c.kind==='spec'&&c.type==='Ã–ffentlichkeitskarte'&&ngoMovementNames.includes(c.name));if(!hasNgoMovement)influence+=1;}// ğŸ”¥ CLUSTER 3: TemporÃ¤re Initiative-Boni (bis Rundenende)\n// Jennifer Doudna: +1 Einfluss bei Initiativen\nif((_state$effectFlags$pl=state.effectFlags[player])!==null&&_state$effectFlags$pl!==void 0&&_state$effectFlags$pl.scienceInitiativeBonus){influence+=1;}// Anthony Fauci: +1 Einfluss bei Initiativen\nif((_state$effectFlags$pl2=state.effectFlags[player])!==null&&_state$effectFlags$pl2!==void 0&&_state$effectFlags$pl2.healthInitiativeBonus){influence+=1;}// Noam Chomsky: -1 Einfluss bei Initiativen (fÃ¼r Gegner)\nif((_state$effectFlags$pl3=state.effectFlags[player])!==null&&_state$effectFlags$pl3!==void 0&&_state$effectFlags$pl3.militaryInitiativePenalty){influence-=1;}// Alternative Fakten is applied within interventions; no direct change here\ntotal+=influence;});return total;}export function drawCards(player,count,state,log){const deck=[...state.decks[player]];const hand=[...state.hands[player]];const drawn=deck.splice(0,Math.min(count,deck.length));hand.push(...drawn);if(drawn.length>0){log(\"P\".concat(player,\" zieht \").concat(drawn.length,\" Karte(n)\"));}return{newHands:_objectSpread(_objectSpread({},state.hands),{},{[player]:hand}),newDecks:_objectSpread(_objectSpread({},state.decks),{},{[player]:deck})};}export function drawCardsAtRoundEnd(state,log){let newHands=_objectSpread({},state.hands);let newDecks=_objectSpread({},state.decks);[1,2].forEach(player=>{const targetHandSize=5;const currentHandSize=newHands[player].length;let drawCount=Math.max(0,targetHandSize-currentHandSize);// ğŸ”¥ MUKESH AMBANI EFFEKT: Gegner darf 1 Karte weniger nachziehen\nconst opponent=player===1?2:1;const opponentBoard=state.board[opponent];const mukeshAmbani=opponentBoard.innen.find(card=>card.kind==='spec'&&card.name==='Mukesh Ambani');if(mukeshAmbani&&drawCount>0){drawCount=Math.max(0,drawCount-1);log(\"\\uD83D\\uDD25 MUKESH AMBANI EFFEKT: P\".concat(player,\" zieht 1 Karte weniger (\").concat(drawCount,\" statt \").concat(drawCount+1,\")\"));}if(drawCount>0){const result=drawCards(player,drawCount,_objectSpread(_objectSpread({},state),{},{hands:newHands,decks:newDecks}),log);newHands=result.newHands;newDecks=result.newDecks;}});return{newHands,newDecks};}// Deck building utilities\nexport function currentBuilderBudget(deck){return deck.reduce((sum,entry)=>{if(entry.kind==='pol'){const pol=entry.base;return sum+((pol===null||pol===void 0?void 0:pol.BP)||0)*entry.count;}else{const spec=entry.base;return sum+((spec===null||spec===void 0?void 0:spec.bp)||0)*entry.count;}},0);}export function currentBuilderCount(deck){return deck.reduce((sum,entry)=>sum+entry.count,0);}export function buildDeckFromEntries(entries){const deck=[];entries.forEach(entry=>{for(let i=0;i<entry.count;i++){if(entry.kind==='pol'){// Support both base object (deckbuilder) and baseId (presets)\nconst base=entry.base||(entry.baseId?Pols.find(p=>p.id===entry.baseId):null);if(base)deck.push(makePolInstance(base));}else{// Support both base object (deckbuilder) and baseId (presets)\nconst base=entry.base||(entry.baseId?Specials.find(s=>s.id===entry.baseId):null);if(base)deck.push(makeSpecInstance(base));}}});// Stelle sicher, dass jede Karte eine uid besitzt\nconst deckWithUids=deck.map(c=>c&&c.uid?c:_objectSpread(_objectSpread({},c),{},{uid:makeUid('card')}));return shuffle(deckWithUids);}// Image loading utilities (Legacy function for backwards compatibility)\nexport function drawCardImage(ctx,card,dx,dy,size){let imageSize=arguments.length>5&&arguments[5]!==undefined?arguments[5]:'ui';const img=new Image();img.onload=()=>{ctx.drawImage(img,dx,dy,size,size);};img.src=getCardImagePath(card,imageSize);}// KapazitÃ¤tsprÃ¼fung fÃ¼r Reihen (verhindert zu viele Karten in kleinen Rows)\nexport function canPlayToLane(state,player,lane){var _state$board$player$i,_state$board$player,_state$board$player$a,_state$board$player2;const cap=getLaneCapacity(lane);const row=lane==='public'?(_state$board$player$i=(_state$board$player=state.board[player])===null||_state$board$player===void 0?void 0:_state$board$player.innen)!==null&&_state$board$player$i!==void 0?_state$board$player$i:[]:(_state$board$player$a=(_state$board$player2=state.board[player])===null||_state$board$player2===void 0?void 0:_state$board$player2.aussen)!==null&&_state$board$player$a!==void 0?_state$board$player$a:[];return row.length<cap;}","map":{"version":3,"names":["getCardImagePath","Pols","Specials","makePolInstance","makeSpecInstance","makeUid","getLaneCapacity","EffectQueueManager","ActiveAbilitiesManager","tryApplyNegativeEffect","sortHandCards","adjustInfluence","findCardLocation","getAllowedLaneForCard","isLaneAllowedForCard","getCardActionPointCost","ceil","x","Math","pow","a","b","calcBP","influence","T","shuffle","i","length","j","floor","random","sumRow","arr","reduce","c","kind","sumGovernmentInfluenceWithAuras","state","player","govCards","board","aussen","filter","total","govSlot","permanentSlots","government","pubSlot","public","forEach","card","_state$effectFlags$pl","_state$effectFlags$pl2","_state$effectFlags$pl3","name","bewegungNames","hasBewegung","innen","some","type","includes","effect","hasNgoCard","tag","ngoMovementNames","hasNgoMovement","effectFlags","scienceInitiativeBonus","healthInitiativeBonus","militaryInitiativePenalty","drawCards","count","log","deck","decks","hand","hands","drawn","splice","min","push","concat","newHands","_objectSpread","newDecks","drawCardsAtRoundEnd","targetHandSize","currentHandSize","drawCount","max","opponent","opponentBoard","mukeshAmbani","find","result","currentBuilderBudget","sum","entry","pol","base","BP","spec","bp","currentBuilderCount","buildDeckFromEntries","entries","baseId","p","id","s","deckWithUids","map","uid","drawCardImage","ctx","dx","dy","size","imageSize","arguments","undefined","img","Image","onload","drawImage","src","canPlayToLane","lane","_state$board$player$i","_state$board$player","_state$board$player$a","_state$board$player2","cap","row"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/gameUtils.ts"],"sourcesContent":["import { Card, PoliticianCard, SpecialCard, GameState, Player } from '../types/game';\r\nimport { getCardImagePath, Pols, Specials } from '../data/gameData';\r\nimport { makePolInstance, makeSpecInstance } from './cardUtils';\r\nimport { makeUid } from './id';\r\nimport { getLaneCapacity } from '../ui/layout';\r\n\r\n// Re-export helpers from effectUtils\r\nexport { EffectQueueManager, ActiveAbilitiesManager, tryApplyNegativeEffect } from './effectUtils';\r\n\r\n// Re-export helpers from cardUtils\r\nexport {\r\n  makePolInstance,\r\n  makeSpecInstance,\r\n  sortHandCards,\r\n  adjustInfluence,\r\n  findCardLocation,\r\n  getAllowedLaneForCard,\r\n  isLaneAllowedForCard,\r\n  getCardActionPointCost\r\n} from './cardUtils';\r\n\r\n// Helper functions\r\nexport function ceil(x: number): number {\r\n  return Math.ceil(x);\r\n}\r\n\r\nexport function pow(a: number, b: number): number {\r\n  return Math.pow(a, b);\r\n}\r\n\r\nexport function calcBP(influence: number, T: number): number {\r\n  return ceil(pow(influence, 1.4) + 2 * T);\r\n}\r\n\r\nexport function shuffle<T>(a: T[]): T[] {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\n\r\n// Game logic helpers\r\nexport function sumRow(arr: Card[]): number {\r\n  return arr.reduce((a, c) => {\r\n    if (c.kind === 'pol') {\r\n      return a + (c as PoliticianCard).influence; // ğŸ”¥ VEREINFACHT: Nur noch influence\r\n    }\r\n    return a; // Special cards don't contribute to influence\r\n  }, 0);\r\n}\r\n\r\n// Unified scoring: Government influence including permanent auras and Joschka+NGO synergy\r\nexport function sumGovernmentInfluenceWithAuras(state: GameState, player: Player): number {\r\n  const govCards = state.board[player].aussen.filter(c => c.kind === 'pol') as PoliticianCard[];\r\n  // Opponent reference kept for completeness of future aura checks\r\n\r\n  let total = 0;\r\n\r\n  const govSlot = state.permanentSlots[player].government;\r\n  const pubSlot = state.permanentSlots[player].public;\r\n\r\n  govCards.forEach(card => {\r\n    let influence = card.influence;\r\n\r\n    // Koalitionszwang: Tier 2 Regierungskarten +1 Einfluss\r\n    if (govSlot?.kind === 'spec' && (govSlot as SpecialCard).name === 'Koalitionszwang') {\r\n      if (card.T === 2) influence += 1;\r\n    }\r\n\r\n    // Napoleon Komplex: Tier 1 Regierungskarten +1 Einfluss\r\n    if (govSlot?.kind === 'spec' && (govSlot as SpecialCard).name === 'Napoleon Komplex') {\r\n      if (card.T === 1) influence += 1;\r\n    }\r\n\r\n    // Zivilgesellschaft: Bewegung-Karten +1 Einfluss (wenn eine Bewegung in Ã–ffentlichkeit liegt)\r\n    if (pubSlot?.kind === 'spec' && (pubSlot as SpecialCard).name === 'Zivilgesellschaft') {\r\n      const bewegungNames = ['Greta Thunberg', 'Malala Yousafzai', 'Ai Weiwei', 'Alexei Navalny'];\r\n      const hasBewegung = state.board[player].innen.some(c => c.kind === 'spec' && (c as SpecialCard).type === 'Ã–ffentlichkeitskarte' && bewegungNames.includes(c.name));\r\n      if (hasBewegung) influence += 1;\r\n    }\r\n\r\n    // Joschka Fischer NGO-Boost: +1 Einfluss, wenn eine NGO-Ã–ffentlichkeitskarte liegt\r\n    if (card.name === 'Joschka Fischer' && (card as any).effect === 'ngo_boost') {\r\n      const hasNgoCard = state.board[player].innen.some(c => c.kind === 'spec' && (c as SpecialCard).type === 'Ã–ffentlichkeitskarte' && (c as any).tag === 'NGO');\r\n      if (hasNgoCard) influence += 1;\r\n    }\r\n\r\n    // Milchglas Transparenz: +1 Einfluss wenn keine NGO/Bewegung liegt\r\n    if (govSlot?.kind === 'spec' && (govSlot as SpecialCard).name === 'Milchglas Transparenz') {\r\n      const ngoMovementNames = ['Jennifer Doudna', 'Noam Chomsky', 'Bill Gates', 'Greta Thunberg', 'Malala Yousafzai', 'Ai Weiwei', 'Alexei Navalny'];\r\n      const hasNgoMovement = state.board[player].innen.some(c => c.kind === 'spec' && (c as SpecialCard).type === 'Ã–ffentlichkeitskarte' && ngoMovementNames.includes(c.name));\r\n      if (!hasNgoMovement) influence += 1;\r\n    }\r\n\r\n        // ğŸ”¥ CLUSTER 3: TemporÃ¤re Initiative-Boni (bis Rundenende)\r\n\r\n    // Jennifer Doudna: +1 Einfluss bei Initiativen\r\n    if (state.effectFlags[player]?.scienceInitiativeBonus) {\r\n      influence += 1;\r\n    }\r\n\r\n    // Anthony Fauci: +1 Einfluss bei Initiativen\r\n    if (state.effectFlags[player]?.healthInitiativeBonus) {\r\n      influence += 1;\r\n    }\r\n\r\n    // Noam Chomsky: -1 Einfluss bei Initiativen (fÃ¼r Gegner)\r\n    if (state.effectFlags[player]?.militaryInitiativePenalty) {\r\n      influence -= 1;\r\n    }\r\n\r\n    // Alternative Fakten is applied within interventions; no direct change here\r\n\r\n    total += influence;\r\n  });\r\n\r\n  return total;\r\n}\r\n\r\nexport function drawCards(\r\n  player: Player,\r\n  count: number,\r\n  state: GameState,\r\n  log: (msg: string) => void\r\n): { newHands: GameState['hands']; newDecks: GameState['decks'] } {\r\n  const deck = [...state.decks[player]];\r\n  const hand = [...state.hands[player]];\r\n\r\n  const drawn = deck.splice(0, Math.min(count, deck.length));\r\n  hand.push(...drawn);\r\n\r\n  if (drawn.length > 0) {\r\n    log(`P${player} zieht ${drawn.length} Karte(n)`);\r\n  }\r\n\r\n  return {\r\n    newHands: { ...state.hands, [player]: hand },\r\n    newDecks: { ...state.decks, [player]: deck }\r\n  };\r\n}\r\n\r\nexport function drawCardsAtRoundEnd(\r\n  state: GameState,\r\n  log: (msg: string) => void\r\n): { newHands: GameState['hands']; newDecks: GameState['decks'] } {\r\n  let newHands = { ...state.hands };\r\n  let newDecks = { ...state.decks };\r\n\r\n  [1, 2].forEach(player => {\r\n    const targetHandSize = 5;\r\n    const currentHandSize = newHands[player as Player].length;\r\n    let drawCount = Math.max(0, targetHandSize - currentHandSize);\r\n\r\n    // ğŸ”¥ MUKESH AMBANI EFFEKT: Gegner darf 1 Karte weniger nachziehen\r\n    const opponent = player === 1 ? 2 : 1;\r\n    const opponentBoard = state.board[opponent];\r\n    const mukeshAmbani = opponentBoard.innen.find(card =>\r\n      card.kind === 'spec' && (card as any).name === 'Mukesh Ambani'\r\n    );\r\n\r\n    if (mukeshAmbani && drawCount > 0) {\r\n      drawCount = Math.max(0, drawCount - 1);\r\n      log(`ğŸ”¥ MUKESH AMBANI EFFEKT: P${player} zieht 1 Karte weniger (${drawCount} statt ${drawCount + 1})`);\r\n    }\r\n\r\n    if (drawCount > 0) {\r\n      const result = drawCards(player as Player, drawCount,\r\n        { ...state, hands: newHands, decks: newDecks }, log);\r\n      newHands = result.newHands;\r\n      newDecks = result.newDecks;\r\n    }\r\n  });\r\n\r\n  return { newHands, newDecks };\r\n}\r\n\r\n// Deck building utilities\r\nexport function currentBuilderBudget(deck: any[]): number {\r\n  return deck.reduce((sum, entry) => {\r\n    if (entry.kind === 'pol') {\r\n      const pol = entry.base;\r\n      return sum + (pol?.BP || 0) * entry.count;\r\n  } else {\r\n      const spec = entry.base;\r\n      return sum + (spec?.bp || 0) * entry.count;\r\n    }\r\n  }, 0);\r\n}\r\n\r\nexport function currentBuilderCount(deck: any[]): number {\r\n  return deck.reduce((sum, entry) => sum + entry.count, 0);\r\n}\r\n\r\nexport function buildDeckFromEntries(entries: any[]): Card[] {\r\n  const deck: Card[] = [];\r\n\r\n  entries.forEach(entry => {\r\n    for (let i = 0; i < entry.count; i++) {\r\n      if (entry.kind === 'pol') {\r\n        // Support both base object (deckbuilder) and baseId (presets)\r\n        const base = entry.base || (entry.baseId ? Pols.find(p => p.id === entry.baseId) : null);\r\n        if (base) deck.push(makePolInstance(base));\r\n      } else {\r\n        // Support both base object (deckbuilder) and baseId (presets)\r\n        const base = entry.base || (entry.baseId ? Specials.find(s => s.id === entry.baseId) : null);\r\n        if (base) deck.push(makeSpecInstance(base));\r\n      }\r\n    }\r\n  });\r\n\r\n  // Stelle sicher, dass jede Karte eine uid besitzt\r\n  const deckWithUids = deck.map((c: any) => (c && c.uid) ? c : { ...c, uid: makeUid('card') });\r\n  return shuffle(deckWithUids);\r\n}\r\n\r\n// Image loading utilities (Legacy function for backwards compatibility)\r\nexport function drawCardImage(\r\n  ctx: CanvasRenderingContext2D,\r\n  card: Card,\r\n  dx: number,\r\n  dy: number,\r\n  size: number,\r\n  imageSize: 'ui' | 'modal' = 'ui'\r\n): void {\r\n  const img = new Image();\r\n  img.onload = () => {\r\n    ctx.drawImage(img, dx, dy, size, size);\r\n  };\r\n  img.src = getCardImagePath(card, imageSize);\r\n}\r\n\r\n// KapazitÃ¤tsprÃ¼fung fÃ¼r Reihen (verhindert zu viele Karten in kleinen Rows)\r\nexport function canPlayToLane(state: GameState, player: Player, lane: 'public' | 'government'): boolean {\r\n  const cap = getLaneCapacity(lane);\r\n  const row = lane === 'public'\r\n    ? state.board[player]?.innen ?? []\r\n    : state.board[player]?.aussen ?? [];\r\n  return row.length < cap;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}