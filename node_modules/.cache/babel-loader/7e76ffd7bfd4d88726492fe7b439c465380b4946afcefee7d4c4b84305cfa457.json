{"ast":null,"code":"// Row: government = aussen, public = innen, plus sofort lane for instant initiatives\nexport function createDefaultEffectFlags(){return{// AP system\ninitiativeDiscount:0,initiativeRefund:0,govRefundAvailable:false,// Initiative auras\ninitiativeInfluenceBonus:0,initiativeInfluencePenaltyForOpponent:0,initiativeOnPlayDraw1Ap1:false,// Trap system\ntrapTriggered:false,trapProtection:false,// Special flags\nmarkZuckerbergUsed:false,opportunistActive:false};}// Effect Event model (used by utils/queue.ts)\n// EffectEvent moved to types/effects.ts\nexport function createEmptyBoardRow(){return{innen:[],aussen:[],sofort:[]};}","map":{"version":3,"names":["createDefaultEffectFlags","initiativeDiscount","initiativeRefund","govRefundAvailable","initiativeInfluenceBonus","initiativeInfluencePenaltyForOpponent","initiativeOnPlayDraw1Ap1","trapTriggered","trapProtection","markZuckerbergUsed","opportunistActive","createEmptyBoardRow","innen","aussen","sofort"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/types/game.ts"],"sourcesContent":["import type { UID } from './primitives';\r\nimport type { EffectEvent } from './effects';\r\n\r\nexport type Player = 1 | 2;\r\n\r\nexport type CardKind = 'pol' | 'spec';\r\n\r\nexport interface Card {\r\n  id: number;\r\n  key: string;\r\n  name: string;\r\n  kind: CardKind;\r\n  baseId: number;\r\n  uid: number;\r\n  // optional card-specific fields\r\n  deactivated?: boolean;  // runtime disabled status\r\n  protectedOnce?: boolean;// runtime shield flag (consumed once)\r\n}\r\n\r\nexport interface PoliticianCard extends Card {\r\n  kind: 'pol';\r\n  tag: string;\r\n  T: number;\r\n  BP: number;\r\n  influence: number;\r\n  effect?: string;\r\n  protected: boolean;\r\n  protectedUntil?: number | null;\r\n  tempDebuffs: number;\r\n  tempBuffs: number;\r\n  _activeUsed: boolean;\r\n  _pledgeDown?: { amount: number; round: number } | null;\r\n  _hypedRoundFlag?: boolean;\r\n}\r\n\r\nexport interface SpecialCard extends Card {\r\n  kind: 'spec';\r\n  type: string;\r\n  impl: string;\r\n  bp: number;\r\n  tag?: string;\r\n}\r\n\r\nexport interface BasePolitician {\r\n  id: number;\r\n  key: string;\r\n  name: string;\r\n  influence: number;\r\n  tag?: string;\r\n  T: number;\r\n  BP?: number;\r\n  effect?: string;\r\n}\r\n\r\nexport interface BaseSpecial {\r\n  id: number;\r\n  key: string;\r\n  name: string;\r\n  type: string;\r\n  speed?: string;\r\n  bp: number;\r\n  effect?: string;\r\n  tier: number;\r\n  impl: string;\r\n  tag?: string;\r\n  effectKey?: string;\r\n}\r\n\r\n// Row: government = aussen, public = innen, plus sofort lane for instant initiatives\r\nexport type BoardRow = {\r\n  innen: Card[];   // PUBLIC\r\n  aussen: Card[];  // GOVERNMENT\r\n  sofort: Card[];  // INSTANT (Sofort-Initiativen, warten auf Aktivierung)\r\n};\r\n\r\nexport type Board = {\r\n  1: BoardRow;\r\n  2: BoardRow;\r\n};\r\n\r\nexport type PermanentSlots = {\r\n  1: { government: Card | null; public: Card | null };\r\n  2: { government: Card | null; public: Card | null };\r\n};\r\n\r\nexport interface EffectFlags {\r\n  // AP system â€” single source of truth\r\n  initiativeDiscount: number;        // Discount for next initiative(s), consumes 1 per use\r\n  initiativeRefund: number;          // Refund-pool for initiatives, consumes 1 per use\r\n  govRefundAvailable: boolean;       // First government card per turn gets +1 AP refund (Greta/Movement)\r\n\r\n  // Round-scoped Initiative \"Cluster 3\" auras (active while round lasts)\r\n  initiativeInfluenceBonus: number;         // e.g., Jennifer (+1) + Fauci (+1)\r\n  initiativeInfluencePenaltyForOpponent: number; // Noam gives opponent -1 (we store on owner, apply against enemy)\r\n  initiativeOnPlayDraw1Ap1: boolean;        // Ai Weiwei\r\n\r\n  // Trap system flags\r\n  trapTriggered?: boolean;           // Set when a trap was triggered this turn\r\n  trapProtection?: boolean;          // Trap protection active for next card\r\n\r\n  // Mark Zuckerberg special flag\r\n  markZuckerbergUsed: boolean;       // Tracks if Mark Zuckerberg's once-per-turn effect was used\r\n\r\n  // Opportunist system\r\n  opportunistActive?: boolean;       // Opportunist mirror effect active\r\n\r\n  // Legacy flags for compatibility (deprecated)\r\n  nextGovPlus2?: boolean;\r\n  diplomatInfluenceTransferUsed?: boolean;\r\n  influenceTransferBlocked?: boolean;\r\n  scienceInitiativeBonus?: boolean;\r\n  healthInitiativeBonus?: boolean;\r\n  cultureInitiativeBonus?: boolean;\r\n  militaryInitiativePenalty?: boolean;\r\n  nextInitiativeMinus1?: boolean;\r\n  freeInitiativeAvailable?: boolean;\r\n  platformRefundAvailable?: boolean;\r\n  platformRefundUsed?: boolean;\r\n  ngoInitiativeDiscount?: number;\r\n  platformInitiativeDiscount?: number;\r\n  nextGovernmentCardBonus?: number;\r\n  publicEffectDoubled?: boolean;\r\n  cannotPlayInitiatives?: boolean;\r\n  nextCardProtected?: boolean;\r\n  platformAfterInitiativeBonus?: boolean;\r\n  interventionEffectReduced?: boolean;\r\n  nextInitiativeRefund?: number;\r\n  nextInitiativeDiscounted?: boolean;\r\n}\r\n\r\nexport function createDefaultEffectFlags(): EffectFlags {\r\n  return {\r\n    // AP system\r\n    initiativeDiscount: 0,\r\n    initiativeRefund: 0,\r\n    govRefundAvailable: false,\r\n\r\n    // Initiative auras\r\n    initiativeInfluenceBonus: 0,\r\n    initiativeInfluencePenaltyForOpponent: 0,\r\n    initiativeOnPlayDraw1Ap1: false,\r\n\r\n    // Trap system\r\n    trapTriggered: false,\r\n    trapProtection: false,\r\n\r\n    // Special flags\r\n    markZuckerbergUsed: false,\r\n    opportunistActive: false,\r\n  };\r\n}\r\n\r\nexport interface GameState {\r\n  round: number;\r\n  current: Player;\r\n  passed: { 1: boolean; 2: boolean };\r\n  actionPoints: { 1: number; 2: number };\r\n  actionsUsed: { 1: number; 2: number };\r\n  decks: { 1: Card[]; 2: Card[] };\r\n  hands: { 1: Card[]; 2: Card[] };\r\n  traps: { 1: Card[]; 2: Card[] };\r\n  board: Board;\r\n  permanentSlots: PermanentSlots;\r\n  discard: Card[];\r\n  log: string[];\r\n  activeRefresh: { 1: number; 2: number };\r\n  roundsWon: { 1: number; 2: number };\r\n  aiEnabled?: { 1: boolean; 2: boolean };\r\n  gameWinner?: 1 | 2 | null;\r\n  blocked?: { initiatives?: boolean };\r\n  shields?: Set<UID>;\r\n  _queue?: EffectEvent[];\r\n  _effectQueue?: EffectEvent[];\r\n  effectFlags: {\r\n    1: EffectFlags;\r\n    2: EffectFlags;\r\n  };\r\n  effectQueue?: EffectQueue;\r\n  activeAbilities?: {\r\n    1: ActiveAbility[];\r\n    2: ActiveAbility[];\r\n  };\r\n  pendingAbilitySelect?: AbilitySelect;\r\n  isEndingTurn?: boolean;\r\n}\r\n\r\nexport interface BuilderState {\r\n  open: boolean;\r\n  deck: BuilderEntry[];\r\n}\r\n\r\nexport interface BuilderEntry {\r\n  kind: 'pol' | 'spec';\r\n  baseId: number;\r\n  count: number;\r\n}\r\n\r\nexport type BoardSide = {\r\n  innen: Card[];\r\n  aussen: Card[];\r\n  sofort: Card[];\r\n};\r\n\r\nexport interface UIZone {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n}\r\n\r\nexport interface ClickZone {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  data: any;\r\n}\r\n\r\nexport interface FXState {\r\n  p1Activation: ActivationFX | null;\r\n  p2Activation: ActivationFX | null;\r\n}\r\n\r\nexport interface ActivationFX {\r\n  card: Card;\r\n  until: number;\r\n}\r\n\r\nexport interface SelectedState {\r\n  handIndex: number | null;\r\n}\r\n\r\nexport interface AbilitySelect {\r\n  type: 'hardliner' | 'putin_double_intervention' | 'oligarch_influence' | 'diplomat_transfer';\r\n  actorCard: PoliticianCard;\r\n  actorPlayer: 1 | 2;\r\n  lane?: 'innen' | 'aussen';\r\n  targetCard?: PoliticianCard;\r\n  amount?: number;\r\n  advanceAfterResolve?: boolean;\r\n  consumeRefresh?: boolean;\r\n}\r\n\r\nexport interface ActiveAbility {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  cardName: string;\r\n  cooldown: number;\r\n  usedThisRound: boolean;\r\n  type: AbilitySelect['type'];\r\n  cost?: number;\r\n  requirements?: string[];\r\n}\r\n\r\nexport interface EffectQueueItem {\r\n  id: string;\r\n  type: 'intervention' | 'sofort' | 'passiv' | 'aktiv';\r\n  priority: number;\r\n  source: Card;\r\n  target?: Card;\r\n  effect: () => void;\r\n  description: string;\r\n  player: Player;\r\n  round: number;\r\n}\r\n\r\nexport interface EffectQueue {\r\n  items: EffectQueueItem[];\r\n  processing: boolean;\r\n  nextId: number;\r\n}\r\n\r\nexport type Lane = 'innen' | 'aussen';\r\n\r\n// Effect Event model (used by utils/queue.ts)\r\n// EffectEvent moved to types/effects.ts\r\n\r\n\r\nexport function createEmptyBoardRow(): BoardRow {\r\n  return { innen: [], aussen: [], sofort: [] };\r\n}"],"mappings":"AAoEA;AA8DA,MAAO,SAAS,CAAAA,wBAAwBA,CAAA,CAAgB,CACtD,MAAO,CACL;AACAC,kBAAkB,CAAE,CAAC,CACrBC,gBAAgB,CAAE,CAAC,CACnBC,kBAAkB,CAAE,KAAK,CAEzB;AACAC,wBAAwB,CAAE,CAAC,CAC3BC,qCAAqC,CAAE,CAAC,CACxCC,wBAAwB,CAAE,KAAK,CAE/B;AACAC,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,KAAK,CAErB;AACAC,kBAAkB,CAAE,KAAK,CACzBC,iBAAiB,CAAE,KACrB,CAAC,CACH,CA6HA;AACA;AAGA,MAAO,SAAS,CAAAC,mBAAmBA,CAAA,CAAa,CAC9C,MAAO,CAAEC,KAAK,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAC,CAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}