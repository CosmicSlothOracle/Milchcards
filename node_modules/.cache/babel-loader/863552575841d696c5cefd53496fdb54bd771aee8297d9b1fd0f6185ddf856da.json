{"ast":null,"code":"import { isInstantInitiative } from '../utils/tags';\n\n// Helper: Spieler wechseln\nconst other = p => p === 1 ? 2 : 1;\nexport function recomputeAuraFlags(state) {\n  // Legacy aura flags removed - auras are now calculated on-demand via Board-Check\n  // No more direct flag mutations - everything is event-driven\n\n  // Government refund is now handled via events in the card activation flow\n  // No need to pre-compute flags\n}\n\n/**\r\n * Wendet Einfluss-Modifikationen fÃ¼r Sofort-Initiativen an\r\n * Nur fÃ¼r Sofort-Initiativen, keine Topics/Tags\r\n */\nexport function applyInstantInitiativeInfluenceMods(state, player, baseInfluence, card) {\n  var _state$effectFlags$pl, _state$effectFlags$pl2, _state$effectFlags$pl3;\n  let influence = baseInfluence;\n  const reasons = [];\n\n  // Nur fÃ¼r Sofort-Initiativen\n  if (!isInstantInitiative(card)) {\n    return {\n      influence,\n      reasons\n    };\n  }\n\n  // Jennifer Doudna: +1 Einfluss\n  if ((_state$effectFlags$pl = state.effectFlags[player]) !== null && _state$effectFlags$pl !== void 0 && _state$effectFlags$pl.scienceInitiativeBonus) {\n    influence += 1;\n    reasons.push('Jennifer Doudna: +1 Einfluss');\n  }\n\n  // Anthony Fauci: +1 Einfluss\n  if ((_state$effectFlags$pl2 = state.effectFlags[player]) !== null && _state$effectFlags$pl2 !== void 0 && _state$effectFlags$pl2.healthInitiativeBonus) {\n    influence += 1;\n    reasons.push('Anthony Fauci: +1 Einfluss');\n  }\n\n  // Noam Chomsky: -1 Einfluss (fÃ¼r den Spieler mit der Aura)\n  if ((_state$effectFlags$pl3 = state.effectFlags[player]) !== null && _state$effectFlags$pl3 !== void 0 && _state$effectFlags$pl3.militaryInitiativePenalty) {\n    influence -= 1;\n    reasons.push('Noam Chomsky: âˆ’1 Einfluss');\n  }\n  return {\n    influence,\n    reasons\n  };\n}\n\n/**\r\n * Ai Weiwei: +1 Karte +1 AP bei jeder Sofort-Initiative (AP cap bei 4)\r\n */\nexport function maybeApplyAiWeiweiInstantBonus(state, player, card, log) {\n  var _state$effectFlags$pl4;\n  // Nur fÃ¼r Sofort-Initiativen\n  if (!isInstantInitiative(card)) return;\n\n  // Nur wenn Ai Weiwei in der Ã–ffentlichkeit ist\n  if (!((_state$effectFlags$pl4 = state.effectFlags[player]) !== null && _state$effectFlags$pl4 !== void 0 && _state$effectFlags$pl4.cultureInitiativeBonus)) return;\n\n  // +1 Karte ziehen (falls Deck nicht leer)\n  const drawn = state.decks[player].shift();\n  if (drawn) {\n    state.hands[player].push(drawn);\n    log(`ðŸ”¥ Ai Weiwei: +1 Karte gezogen (${drawn.name})`);\n  }\n\n  // +1 AP (mit Cap bei 4)\n  const before = state.actionPoints[player];\n  state.actionPoints[player] = before + 1;\n  if (before !== state.actionPoints[player]) {\n    log(`ðŸ”¥ Ai Weiwei: +1 AP (${before}â†’${state.actionPoints[player]})`);\n  }\n}","map":{"version":3,"names":["isInstantInitiative","other","p","recomputeAuraFlags","state","applyInstantInitiativeInfluenceMods","player","baseInfluence","card","_state$effectFlags$pl","_state$effectFlags$pl2","_state$effectFlags$pl3","influence","reasons","effectFlags","scienceInitiativeBonus","push","healthInitiativeBonus","militaryInitiativePenalty","maybeApplyAiWeiweiInstantBonus","log","_state$effectFlags$pl4","cultureInitiativeBonus","drawn","decks","shift","hands","name","before","actionPoints"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/state/effects.ts"],"sourcesContent":["import { GameState, Player, Card } from '../types/game';\r\nimport { isInstantInitiative } from '../utils/tags';\r\n\r\n// Helper: Spieler wechseln\r\nconst other = (p: Player): Player => (p === 1 ? 2 : 1) as Player;\r\n\r\nexport function recomputeAuraFlags(state: GameState) {\r\n  // Legacy aura flags removed - auras are now calculated on-demand via Board-Check\r\n  // No more direct flag mutations - everything is event-driven\r\n  \r\n  // Government refund is now handled via events in the card activation flow\r\n  // No need to pre-compute flags\r\n}\r\n\r\n/**\r\n * Wendet Einfluss-Modifikationen fÃ¼r Sofort-Initiativen an\r\n * Nur fÃ¼r Sofort-Initiativen, keine Topics/Tags\r\n */\r\nexport function applyInstantInitiativeInfluenceMods(\r\n  state: GameState,\r\n  player: Player,\r\n  baseInfluence: number,\r\n  card: Card\r\n): { influence: number; reasons: string[] } {\r\n  let influence = baseInfluence;\r\n  const reasons: string[] = [];\r\n\r\n  // Nur fÃ¼r Sofort-Initiativen\r\n  if (!isInstantInitiative(card)) {\r\n    return { influence, reasons };\r\n  }\r\n\r\n  // Jennifer Doudna: +1 Einfluss\r\n  if (state.effectFlags[player]?.scienceInitiativeBonus) {\r\n    influence += 1;\r\n    reasons.push('Jennifer Doudna: +1 Einfluss');\r\n  }\r\n\r\n  // Anthony Fauci: +1 Einfluss\r\n  if (state.effectFlags[player]?.healthInitiativeBonus) {\r\n    influence += 1;\r\n    reasons.push('Anthony Fauci: +1 Einfluss');\r\n  }\r\n\r\n  // Noam Chomsky: -1 Einfluss (fÃ¼r den Spieler mit der Aura)\r\n  if (state.effectFlags[player]?.militaryInitiativePenalty) {\r\n    influence -= 1;\r\n    reasons.push('Noam Chomsky: âˆ’1 Einfluss');\r\n  }\r\n\r\n  return { influence, reasons };\r\n}\r\n\r\n/**\r\n * Ai Weiwei: +1 Karte +1 AP bei jeder Sofort-Initiative (AP cap bei 4)\r\n */\r\nexport function maybeApplyAiWeiweiInstantBonus(\r\n  state: GameState,\r\n  player: Player,\r\n  card: Card,\r\n  log: (s: string) => void\r\n): void {\r\n  // Nur fÃ¼r Sofort-Initiativen\r\n  if (!isInstantInitiative(card)) return;\r\n\r\n  // Nur wenn Ai Weiwei in der Ã–ffentlichkeit ist\r\n  if (!state.effectFlags[player]?.cultureInitiativeBonus) return;\r\n\r\n  // +1 Karte ziehen (falls Deck nicht leer)\r\n  const drawn = state.decks[player].shift();\r\n  if (drawn) {\r\n    state.hands[player].push(drawn);\r\n    log(`ðŸ”¥ Ai Weiwei: +1 Karte gezogen (${drawn.name})`);\r\n  }\r\n\r\n  // +1 AP (mit Cap bei 4)\r\n  const before = state.actionPoints[player];\r\n  state.actionPoints[player] = before + 1;\r\n\r\n  if (before !== state.actionPoints[player]) {\r\n    log(`ðŸ”¥ Ai Weiwei: +1 AP (${before}â†’${state.actionPoints[player]})`);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,mBAAmB,QAAQ,eAAe;;AAEnD;AACA,MAAMC,KAAK,GAAIC,CAAS,IAAcA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAY;AAEhE,OAAO,SAASC,kBAAkBA,CAACC,KAAgB,EAAE;EACnD;EACA;;EAEA;EACA;AAAA;;AAGF;AACA;AACA;AACA;AACA,OAAO,SAASC,mCAAmCA,CACjDD,KAAgB,EAChBE,MAAc,EACdC,aAAqB,EACrBC,IAAU,EACgC;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC1C,IAAIC,SAAS,GAAGL,aAAa;EAC7B,MAAMM,OAAiB,GAAG,EAAE;;EAE5B;EACA,IAAI,CAACb,mBAAmB,CAACQ,IAAI,CAAC,EAAE;IAC9B,OAAO;MAAEI,SAAS;MAAEC;IAAQ,CAAC;EAC/B;;EAEA;EACA,KAAAJ,qBAAA,GAAIL,KAAK,CAACU,WAAW,CAACR,MAAM,CAAC,cAAAG,qBAAA,eAAzBA,qBAAA,CAA2BM,sBAAsB,EAAE;IACrDH,SAAS,IAAI,CAAC;IACdC,OAAO,CAACG,IAAI,CAAC,8BAA8B,CAAC;EAC9C;;EAEA;EACA,KAAAN,sBAAA,GAAIN,KAAK,CAACU,WAAW,CAACR,MAAM,CAAC,cAAAI,sBAAA,eAAzBA,sBAAA,CAA2BO,qBAAqB,EAAE;IACpDL,SAAS,IAAI,CAAC;IACdC,OAAO,CAACG,IAAI,CAAC,4BAA4B,CAAC;EAC5C;;EAEA;EACA,KAAAL,sBAAA,GAAIP,KAAK,CAACU,WAAW,CAACR,MAAM,CAAC,cAAAK,sBAAA,eAAzBA,sBAAA,CAA2BO,yBAAyB,EAAE;IACxDN,SAAS,IAAI,CAAC;IACdC,OAAO,CAACG,IAAI,CAAC,2BAA2B,CAAC;EAC3C;EAEA,OAAO;IAAEJ,SAAS;IAAEC;EAAQ,CAAC;AAC/B;;AAEA;AACA;AACA;AACA,OAAO,SAASM,8BAA8BA,CAC5Cf,KAAgB,EAChBE,MAAc,EACdE,IAAU,EACVY,GAAwB,EAClB;EAAA,IAAAC,sBAAA;EACN;EACA,IAAI,CAACrB,mBAAmB,CAACQ,IAAI,CAAC,EAAE;;EAEhC;EACA,IAAI,GAAAa,sBAAA,GAACjB,KAAK,CAACU,WAAW,CAACR,MAAM,CAAC,cAAAe,sBAAA,eAAzBA,sBAAA,CAA2BC,sBAAsB,GAAE;;EAExD;EACA,MAAMC,KAAK,GAAGnB,KAAK,CAACoB,KAAK,CAAClB,MAAM,CAAC,CAACmB,KAAK,CAAC,CAAC;EACzC,IAAIF,KAAK,EAAE;IACTnB,KAAK,CAACsB,KAAK,CAACpB,MAAM,CAAC,CAACU,IAAI,CAACO,KAAK,CAAC;IAC/BH,GAAG,CAAC,mCAAmCG,KAAK,CAACI,IAAI,GAAG,CAAC;EACvD;;EAEA;EACA,MAAMC,MAAM,GAAGxB,KAAK,CAACyB,YAAY,CAACvB,MAAM,CAAC;EACzCF,KAAK,CAACyB,YAAY,CAACvB,MAAM,CAAC,GAAGsB,MAAM,GAAG,CAAC;EAEvC,IAAIA,MAAM,KAAKxB,KAAK,CAACyB,YAAY,CAACvB,MAAM,CAAC,EAAE;IACzCc,GAAG,CAAC,wBAAwBQ,MAAM,IAAIxB,KAAK,CAACyB,YAAY,CAACvB,MAAM,CAAC,GAAG,CAAC;EACtE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}