{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skank\\\\Videos\\\\Cards\\\\Milchcards\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { logger } from './debug/logger';\nimport { GameCanvas } from './components/GameCanvas';\nimport { DeckBuilder } from './components/DeckBuilder';\nimport { GameInfoModal } from './components/GameInfoModal';\nimport { EventLogModal } from './components/EventLogModal';\nimport { HandCardModal } from './components/HandCardModal';\nimport { GameLogModal } from './components/GameLogModal';\nimport UILayoutEditor from './components/UILayoutEditor';\nimport CardEffectTestSuite from './test/CardEffectTestSuite';\nimport { useGameState } from './hooks/useGameState';\nimport { PRESET_DECKS } from './data/gameData';\nimport { buildDeckFromEntries } from './utils/gameUtils';\nimport { copyDebugSnapshotToClipboard, downloadDebugSnapshot } from './utils/debugExport';\nimport { GameProvider } from './context/GameContext';\nimport { CardHoverInfoPanel } from './components/CardHoverInfoPanel';\n// Temporarily disabled for build\n// import { hasAnyZeroApPlay } from './utils/ap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  // Old image atlas/background removed; cards load their own images per file mapping\n\n  const [deckBuilderOpen, setDeckBuilderOpen] = useState(true);\n  const [gameInfoModalOpen, setGameInfoModalOpen] = useState(true);\n  const [eventLogModalOpen, setEventLogModalOpen] = useState(false);\n  const [handCardModalOpen, setHandCardModalOpen] = useState(false);\n  const [gameLogModalOpen, setGameLogModalOpen] = useState(false);\n  const [hoveredCard, setHoveredCard] = useState(null);\n\n  // 🔧 DEV MODE: Toggle für lokales Testing ohne KI\n  const [devMode, setDevMode] = useState(false);\n\n  // UI Layout Editor Route\n  const [currentRoute, setCurrentRoute] = useState('game');\n  const {\n    gameState,\n    selectedHandIndex,\n    log,\n    startMatchWithDecks,\n    startMatchVsAI,\n    playCard,\n    activateInstantInitiative,\n    runAITurn,\n    selectHandCard,\n    passTurn,\n    nextTurn\n  } = useGameState();\n\n  // No global image preloading required\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'i' || event.key === 'I') {\n        setGameInfoModalOpen(!gameInfoModalOpen);\n      }\n      if (event.key === 'l' || event.key === 'L') {\n        setEventLogModalOpen(!eventLogModalOpen);\n      }\n      if (event.key === 'g' || event.key === 'G') {\n        setGameLogModalOpen(!gameLogModalOpen);\n      }\n      // 🔧 DEV MODE: Toggle mit 'M' Taste (M für Manual-Mode)\n      if (event.key === 'm' || event.key === 'M') {\n        const newDevMode = !devMode;\n        setDevMode(newDevMode);\n        log(`🔧 DEV MODE ${newDevMode ? 'AKTIVIERT' : 'DEAKTIVIERT'} - KI ist ${newDevMode ? 'AUS' : 'AN'}`);\n      }\n      // 🔧 DEV MODE: Zusätzliche Controls für manuelles Testen\n      if (devMode) {\n        // 'P' für Pass (aktueller Spieler)\n        if (event.key === 'p' || event.key === 'P') {\n          passTurn(gameState.current);\n          log(`⏭️ Player ${gameState.current} passt`);\n        }\n\n        // 'E' für Zug beenden (aktueller Spieler)\n        if (event.key === 'e' || event.key === 'E') {\n          nextTurn();\n          log(`⏭️ Player ${gameState.current} beendet Zug`);\n        }\n\n        // 'A' für Sofort-Initiative aktivieren (aktueller Spieler)\n        if (event.key === 'a' || event.key === 'A') {\n          activateInstantInitiative(gameState.current);\n          log(`🎯 Player ${gameState.current} aktiviert Sofort-Initiative`);\n        }\n      }\n\n      // UI Layout Editor Toggle mit 'U' Taste\n      if (event.key === 'u' || event.key === 'U') {\n        setCurrentRoute(currentRoute === 'game' ? 'ui-editor' : 'game');\n      }\n\n      // Test Suite Toggle mit 'T' Taste\n      if (event.key === 't' || event.key === 'T') {\n        setCurrentRoute(currentRoute === 'game' ? 'test-suite' : 'game');\n      }\n\n      // Debug snapshot: Ctrl+D copies to clipboard, Shift+D downloads file\n      if ((event.key === 'd' || event.key === 'D') && event.ctrlKey) {\n        copyDebugSnapshotToClipboard(gameState).then(() => {\n          logger.info('Debug snapshot copied to clipboard');\n        }).catch(() => {});\n      }\n      if ((event.key === 'd' || event.key === 'D') && event.shiftKey) {\n        downloadDebugSnapshot(gameState);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [gameInfoModalOpen, eventLogModalOpen, gameLogModalOpen, devMode, log, gameState, passTurn, nextTurn, currentRoute, activateInstantInitiative]);\n  const handleCardClick = useCallback(data => {\n    logger.info('🔧 DEBUG: handleCardClick called with:', data);\n    if (!data) return;\n\n    // Handle game control buttons\n\n    if (data.type === 'button_pass_turn') {\n      const currentPlayer = gameState.current;\n      logger.info(`🔧 DEBUG: button_pass_turn clicked - currentPlayer: ${currentPlayer}`);\n      log(`🎯 UI: Passen-Button geklickt - Spieler ${currentPlayer} passt`);\n      log(`📊 FLOW: UI → passTurn(${currentPlayer}) | Button click | Data: { type: \"button_pass_turn\", current: ${currentPlayer} }`);\n      passTurn(currentPlayer);\n      return;\n    }\n    if (data.type === 'button_end_turn') {\n      const currentPlayer = gameState.current;\n      logger.info(`🔧 DEBUG: button_end_turn clicked - currentPlayer: ${currentPlayer}`);\n      log(`🎯 UI: Zug-beenden-Button geklickt - Spieler ${currentPlayer} beendet Zug`);\n      log(`📊 FLOW: UI → nextTurn() | Button click | Data: { type: \"button_end_turn\", current: ${currentPlayer} }`);\n      nextTurn();\n      return;\n    }\n    if (data.type === 'hand_p1') {\n      if (gameState.current !== 1) {\n        log('❌ ERROR: Handkarte geklickt aber nicht Spieler-Zug - Current: ' + gameState.current);\n        return;\n      }\n      const same = selectedHandIndex === data.index;\n      log('🎯 UI: Handkarte geklickt - ' + data.card.name + ' (Index: ' + data.index + ', Selected: ' + selectedHandIndex + ')');\n      log('📊 FLOW: UI → handleCardClick | Card selection | Data: { card: \"' + data.card.name + '\", index: ' + data.index + ', same: ' + same + ' }');\n      if (!same) {\n        // Single click → Modal öffnen\n        log('🎯 UI: Handkarte einfach geklickt → öffne Modal - ' + data.card.name);\n        setHandCardModalOpen(true);\n        selectHandCard(data.index);\n      } else {\n        // Double click → Karte direkt spielen (Auto-Platzierung)\n        const card = data.card;\n        const currentPlayer = gameState.current;\n        const targetLane = card.kind === 'pol' ? ['Staatsoberhaupt', 'Regierungschef', 'Diplomat'].includes(card.tag) ? 'aussen' : 'aussen' : 'innen';\n        log('🎯 UI: Handkarte doppelgeklickt → direkt spielen - ' + card.name + ' in ' + targetLane);\n        playCard(currentPlayer, data.index, targetLane);\n        selectHandCard(null);\n      }\n      return;\n    }\n\n    // 🔧 DEV MODE: Player 2 Hand Clicks\n    if (data.type === 'hand_p2') {\n      if (gameState.current !== 2) {\n        log('❌ ERROR: P2 Handkarte geklickt aber nicht P2-Zug - Current: ' + gameState.current);\n        return;\n      }\n      const same = selectedHandIndex === data.index;\n      log('🎯 UI: P2 Handkarte geklickt - ' + data.card.name + ' (Index: ' + data.index + ', Selected: ' + selectedHandIndex + ')');\n      log('📊 FLOW: UI → handleCardClick | P2 Card selection | Data: { card: \"' + data.card.name + '\", index: ' + data.index + ', same: ' + same + ' }');\n      if (same) {\n        // Double-click to open modal for P2\n        log('🎯 UI: P2 Handkarte doppelgeklickt - ' + data.card.name);\n        log('📊 FLOW: UI → setHandCardModalOpen(true) | P2 Double click | Data: { card: \"' + data.card.name + '\" }');\n        setHandCardModalOpen(true);\n      } else {\n        var _data$card$uid, _data$card, _data$card2, _gameState$hands;\n        // Fallback: UI index may not match authoritative state. Prefer UID lookup for P2.\n        const uid = (_data$card$uid = (_data$card = data.card) === null || _data$card === void 0 ? void 0 : _data$card.uid) !== null && _data$card$uid !== void 0 ? _data$card$uid : (_data$card2 = data.card) === null || _data$card2 === void 0 ? void 0 : _data$card2.id;\n        const stateHand = ((_gameState$hands = gameState.hands) === null || _gameState$hands === void 0 ? void 0 : _gameState$hands[2]) || [];\n        let idxInState = stateHand.findIndex(c => {\n          var _c$uid;\n          return ((_c$uid = c.uid) !== null && _c$uid !== void 0 ? _c$uid : c.id) === uid;\n        });\n        if (idxInState === -1) {\n          console.warn('[DIAG] P2 hand click: card uid not found in state.hands[2]', {\n            uid,\n            data\n          });\n          log('❌ ERROR: P2 Karte nicht in Hand gefunden - UID: ' + uid);\n          window.__politicardDebug = {\n            ...window.__politicardDebug,\n            lastClickMismatch: {\n              ts: Date.now(),\n              uid,\n              data,\n              player: 2\n            }\n          };\n          return;\n        }\n        log('🎯 UI: P2 Handkarte ausgewählt - ' + data.card.name + ' (Index: ' + idxInState + ')');\n        log('📊 FLOW: UI → selectHandCard(' + idxInState + ') | P2 Card selection | Data: { card: \"' + data.card.name + '\", stateIndex: ' + idxInState + ' }');\n        selectHandCard(idxInState);\n      }\n      return;\n    }\n    if (data.type === 'row_slot') {\n      var _gameState$hands2;\n      const currentPlayer = gameState.current;\n      if (selectedHandIndex === null) {\n        console.log('❌ ERROR: Slot geklickt aber keine Karte ausgewählt');\n        return;\n      }\n      const playerHand = (_gameState$hands2 = gameState.hands) === null || _gameState$hands2 === void 0 ? void 0 : _gameState$hands2[currentPlayer];\n      if (!playerHand || selectedHandIndex < 0 || selectedHandIndex >= playerHand.length) {\n        console.log('❌ ERROR: Ungültige Hand oder Index - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer + ', Hand-Größe: ' + ((playerHand === null || playerHand === void 0 ? void 0 : playerHand.length) || 0));\n        return;\n      }\n      const card = playerHand[selectedHandIndex];\n      if (!card) {\n        console.log('❌ ERROR: Ausgewählte Karte nicht gefunden - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer);\n        return;\n      }\n      const lane = data.lane;\n      console.log('🎯 UI: Karte auf Slot gespielt - ' + card.name + ' nach ' + (lane === 'aussen' ? 'Regierungsreihe' : 'Öffentlichkeitsreihe') + ' (Slot ' + (data.index + 1) + ') für Player ' + currentPlayer);\n      console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ', \"' + lane + '\") | Card placement | Data: { card: \"' + card.name + '\", lane: \"' + lane + '\", slot: ' + (data.index + 1) + ', player: ' + currentPlayer + ' }');\n      playCard(currentPlayer, selectedHandIndex, lane);\n      selectHandCard(null);\n      return;\n    }\n    if (data.type === 'empty_slot') {\n      var _gameState$hands3;\n      const currentPlayer = gameState.current;\n      const clickedSlotType = data.slot;\n\n      // Spezielle Behandlung für leere Instant-Slots\n      if (clickedSlotType === 'instant') {\n        if (selectedHandIndex === null) {\n          console.log('ℹ️ INFO: Leerer Sofort-Initiative-Slot geklickt - wähle eine Sofort-Initiative aus der Hand aus');\n          return;\n        }\n        // Fall durch zur normalen Slot-Logik\n      } else if (selectedHandIndex === null) {\n        console.log('❌ ERROR: Leerer Slot geklickt aber keine Karte ausgewählt');\n        return;\n      }\n      const playerHand = (_gameState$hands3 = gameState.hands) === null || _gameState$hands3 === void 0 ? void 0 : _gameState$hands3[currentPlayer];\n      if (!playerHand || selectedHandIndex < 0 || selectedHandIndex >= playerHand.length) {\n        console.log('❌ ERROR: Ungültige Hand oder Index - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer + ', Hand-Größe: ' + ((playerHand === null || playerHand === void 0 ? void 0 : playerHand.length) || 0));\n        return;\n      }\n      const card = playerHand[selectedHandIndex];\n      if (!card || card.kind !== 'spec') {\n        console.log('❌ ERROR: Ausgewählte Karte ist keine Spezialkarte - Kind: ' + ((card === null || card === void 0 ? void 0 : card.kind) || 'null') + ', Player: ' + currentPlayer);\n        return;\n      }\n      const specCard = card; // Cast to access type property\n      const slotType = data.slot;\n      console.log('🎯 UI: Leerer Slot geklickt - ' + card.name + ' auf ' + slotType);\n      console.log('📊 FLOW: UI → handleCardClick | Empty slot click | Data: { card: \"' + card.name + '\", type: \"' + specCard.type + '\", slot: \"' + slotType + '\" }');\n\n      // Check if card type matches slot\n      if (slotType === 'permanent_government' && specCard.type === 'Dauerhaft-Initiative') {\n        // Place permanent initiative in government slot\n        console.log('🎯 UI: Dauerhafte Initiative in Regierungs-Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Permanent initiative | Data: { card: \"' + card.name + '\", slot: \"government\", player: ' + currentPlayer + ' }');\n        playCard(currentPlayer, selectedHandIndex);\n        selectHandCard(null);\n        return;\n      }\n      if (slotType === 'permanent_public' && specCard.type === 'Dauerhaft-Initiative') {\n        // Place permanent initiative in public slot\n        console.log('🎯 UI: Dauerhafte Initiative in Öffentlichkeits-Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Permanent initiative | Data: { card: \"' + card.name + '\", slot: \"public\", player: ' + currentPlayer + ' }');\n        playCard(currentPlayer, selectedHandIndex);\n        selectHandCard(null);\n        return;\n      }\n      if (slotType === 'instant' && specCard.type === 'Sofort-Initiative') {\n        // Place instant initiative in sofort slot\n        console.log('🎯 UI: Sofort-Initiative in Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Instant initiative | Data: { card: \"' + card.name + '\", type: \"Sofort-Initiative\", player: ' + currentPlayer + ' }');\n        playCard(currentPlayer, selectedHandIndex);\n        selectHandCard(null);\n        return;\n      }\n      console.log('❌ ERROR: Karten-Typ passt nicht zum Slot - Card: ' + specCard.type + ', Slot: ' + slotType);\n      return;\n    }\n\n    // 🔧 NEU: Sofort-Initiative aus dem Slot aktivieren\n    if (data.type === 'activate_instant') {\n      const player = data.player;\n      const card = data.card;\n      console.log('🎯 UI: Sofort-Initiative aus Slot aktiviert - ' + card.name + ' für Player ' + player);\n      activateInstantInitiative(player);\n      return;\n    }\n  }, [gameState, selectedHandIndex, playCard, selectHandCard, passTurn, nextTurn, log]);\n  const handleCardHover = useCallback(data => {\n    setHoveredCard(data);\n  }, []);\n  const handleApplyDeck = useCallback(deck => {\n    const cardDeck = buildDeckFromEntries(deck);\n    console.log('Applied deck:', cardDeck);\n  }, []);\n  const handleStartMatch = useCallback((p1Deck, p2Deck) => {\n    if (p1Deck && p1Deck.length > 0 && p2Deck && p2Deck.length > 0) {\n      startMatchWithDecks(p1Deck, p2Deck);\n    } else if (p1Deck && p1Deck.length > 0) {\n      if (devMode) {\n        // Dev Mode: Beide Spieler manuell steuern - nutze preset für P2 aber ohne KI\n        const defaultP2Deck = PRESET_DECKS.AUTORITAERER_REALIST;\n        startMatchWithDecks(p1Deck, defaultP2Deck);\n        log('🔧 DEV MODE: Spiel gestartet ohne KI - beide Spieler manuell steuerbar');\n      } else {\n        // Versus AI with a default preset if only P1 provided\n        startMatchVsAI(p1Deck, 'AUTORITAERER_REALIST');\n        log('🤖 KI-Spiel gestartet');\n      }\n    } else {\n      // Use default preset decks if no decks are provided\n      const defaultP1Deck = PRESET_DECKS.NEOLIBERAL_TECHNOKRAT;\n      const defaultP2Deck = PRESET_DECKS.AUTORITAERER_REALIST;\n      startMatchWithDecks(defaultP1Deck, defaultP2Deck);\n      log('🎮 Spiel gestartet mit Standard-Decks');\n    }\n  }, [startMatchWithDecks, startMatchVsAI, devMode, log]);\n  const handlePlayCardFromModal = useCallback((index, targetSlot) => {\n    var _gameState$hands4;\n    console.log('🔧 DEBUG: handlePlayCardFromModal called with:', index, targetSlot);\n    const currentPlayer = gameState.current;\n    const playerHand = (_gameState$hands4 = gameState.hands) === null || _gameState$hands4 === void 0 ? void 0 : _gameState$hands4[currentPlayer];\n    if (!playerHand || index < 0 || index >= playerHand.length) {\n      console.log('❌ DEBUG: Invalid hand or index:', index, 'for player:', currentPlayer, 'hand size:', (playerHand === null || playerHand === void 0 ? void 0 : playerHand.length) || 0);\n      return;\n    }\n    const card = playerHand[index];\n    if (!card) {\n      console.log('❌ DEBUG: No card found at index:', index, 'for player:', currentPlayer);\n      return;\n    }\n\n    // effectKey sicherstellen (Legacy-Namen → Keys)\n    try {\n      const {\n        resolveEffectKey\n      } = require('./effects/resolveEffectKey');\n      const k = resolveEffectKey(card.name, card.effectKey);\n      if (k) card.effectKey = k;\n    } catch {}\n    console.log('🔧 DEBUG: Card found:', card.name, 'for player:', currentPlayer);\n    if (targetSlot === 'aussen' || targetSlot === 'innen') {\n      console.log('🔧 DEBUG: Calling playCard with lane:', targetSlot);\n      playCard(currentPlayer, index, targetSlot);\n    } else {\n      // Handle special slots\n      console.log('🔧 DEBUG: Calling playCard without lane');\n      log(`🃏 Player ${currentPlayer}: ${card.name} gespielt in ${targetSlot}`);\n      // TODO: Implement special slot placement\n      playCard(currentPlayer, index);\n    }\n    selectHandCard(null);\n    // nextTurn() wird jetzt automatisch in playCard aufgerufen wenn nötig\n  }, [gameState, playCard, selectHandCard, log]);\n\n  // Auto-run AI turn whenever it's AI's turn (nur wenn nicht im Dev Mode)\n  useEffect(() => {\n    var _gameState$aiEnabled;\n    // Debug: Log auto-AI trigger checks\n    if (gameState.current === 2) {\n      console.log('🔍 AUTO_AI_CHECK: current=2, aiEnabled=', gameState.aiEnabled);\n    }\n    if (gameState.current === 2 && !devMode && (_gameState$aiEnabled = gameState.aiEnabled) !== null && _gameState$aiEnabled !== void 0 && _gameState$aiEnabled[2]) {\n      console.log('🔔 AUTO_AI_RUN scheduled');\n      const t = setTimeout(() => {\n        console.log('🔔 AUTO_AI_RUN executing runAITurn');\n        runAITurn();\n      }, 120);\n      return () => clearTimeout(t);\n    }\n  }, [gameState, runAITurn, devMode]);\n\n  // Old renderTooltip removed; using CardHoverInfoPanel component instead.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 0,\n      padding: 0,\n      background: '#0b0f14',\n      color: '#e8f0f8',\n      fontFamily: 'ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, \"Apple Color Emoji\", \"Segoe UI Emoji\"',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        left: '10px',\n        zIndex: 1001,\n        display: 'flex',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentRoute('game'),\n        style: {\n          background: currentRoute === 'game' ? '#3b82f6' : '#374151',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '6px',\n          fontSize: '12px',\n          fontWeight: 600,\n          cursor: 'pointer'\n        },\n        children: \"\\uD83C\\uDFAE Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Start a quick match vs AI using default presets\n          try {\n            startMatchVsAI(PRESET_DECKS.NEOLIBERAL_TECHNOKRAT);\n            log('🤖 Schnellstart: Spiel vs KI gestartet');\n          } catch (e) {\n            console.error('Start vs AI failed', e);\n            log('❌ Fehler: KI-Start fehlgeschlagen');\n          }\n        },\n        style: {\n          background: '#10b981',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '6px',\n          fontSize: '12px',\n          fontWeight: 600,\n          cursor: 'pointer'\n        },\n        children: \"\\uD83E\\uDD16 Start vs KI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentRoute('ui-editor'),\n        style: {\n          background: currentRoute === 'ui-editor' ? '#3b82f6' : '#374151',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '6px',\n          fontSize: '12px',\n          fontWeight: 600,\n          cursor: 'pointer'\n        },\n        children: \"\\uD83C\\uDFA8 UI Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentRoute('test-suite'),\n        style: {\n          background: currentRoute === 'test-suite' ? '#3b82f6' : '#374151',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '6px',\n          fontSize: '12px',\n          fontWeight: 600,\n          cursor: 'pointer'\n        },\n        children: \"\\uD83E\\uDDEA Test Suite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), currentRoute === 'ui-editor' ? /*#__PURE__*/_jsxDEV(UILayoutEditor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }, this) : currentRoute === 'test-suite' ? /*#__PURE__*/_jsxDEV(CardEffectTestSuite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        inset: 0,\n        display: 'grid',\n        gridTemplateRows: '1fr',\n        gap: 0,\n        padding: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          overflow: 'hidden',\n          background: '#0e141b'\n        },\n        children: [/*#__PURE__*/_jsxDEV(GameCanvas, {\n          gameState: gameState,\n          selectedHandIndex: selectedHandIndex,\n          onCardClick: handleCardClick,\n          onCardHover: handleCardHover,\n          devMode: devMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeckBuilder, {\n          isOpen: deckBuilderOpen,\n          onClose: () => setDeckBuilderOpen(false),\n          onApplyDeck: handleApplyDeck,\n          onStartMatch: handleStartMatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), !deckBuilderOpen && /*#__PURE__*/_jsxDEV(GameInfoModal, {\n          gameState: gameState,\n          isVisible: gameInfoModalOpen,\n          onToggle: () => setGameInfoModalOpen(!gameInfoModalOpen),\n          onPassTurn: passTurn,\n          onToggleLog: () => setGameLogModalOpen(!gameLogModalOpen),\n          onCardClick: handleCardClick,\n          devMode: devMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 15\n        }, this), !deckBuilderOpen && /*#__PURE__*/_jsxDEV(EventLogModal, {\n          gameState: gameState,\n          isVisible: eventLogModalOpen,\n          onToggle: () => setEventLogModalOpen(!eventLogModalOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }, this), !deckBuilderOpen && /*#__PURE__*/_jsxDEV(HandCardModal, {\n          gameState: gameState,\n          selectedHandIndex: selectedHandIndex,\n          isVisible: handCardModalOpen,\n          onClose: () => setHandCardModalOpen(false),\n          onPlayCard: handlePlayCardFromModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 15\n        }, this), !deckBuilderOpen && /*#__PURE__*/_jsxDEV(GameLogModal, {\n          gameState: gameState,\n          isVisible: gameLogModalOpen,\n          onToggle: () => setGameLogModalOpen(!gameLogModalOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardHoverInfoPanel, {\n          hovered: hoveredCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), devMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: '10px',\n            right: '10px',\n            background: '#ff6b35',\n            color: 'white',\n            padding: '8px 12px',\n            borderRadius: '6px',\n            fontSize: '12px',\n            fontWeight: 600,\n            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',\n            zIndex: 1000\n          },\n          children: \"\\uD83D\\uDD27 DEV MODE - KI AUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 15\n        }, this), devMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: '60px',\n            right: '10px',\n            background: gameState.current === 1 ? '#4ade80' : '#ef4444',\n            color: 'white',\n            padding: '12px 16px',\n            borderRadius: '8px',\n            fontSize: '16px',\n            fontWeight: 700,\n            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',\n            zIndex: 1000,\n            border: '2px solid rgba(255, 255, 255, 0.3)'\n          },\n          children: [\"\\uD83C\\uDFAE Player \", gameState.current, \" am Zug\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '11px',\n              fontWeight: 400,\n              opacity: 0.9,\n              marginTop: '4px'\n            },\n            children: [\"AP: \", gameState.actionPoints[gameState.current]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContent, \"YCOTerVxRCGadOCEg98Gz35HZ+A=\", false, function () {\n  return [useGameState];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(GameProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 624,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","logger","GameCanvas","DeckBuilder","GameInfoModal","EventLogModal","HandCardModal","GameLogModal","UILayoutEditor","CardEffectTestSuite","useGameState","PRESET_DECKS","buildDeckFromEntries","copyDebugSnapshotToClipboard","downloadDebugSnapshot","GameProvider","CardHoverInfoPanel","jsxDEV","_jsxDEV","AppContent","_s","deckBuilderOpen","setDeckBuilderOpen","gameInfoModalOpen","setGameInfoModalOpen","eventLogModalOpen","setEventLogModalOpen","handCardModalOpen","setHandCardModalOpen","gameLogModalOpen","setGameLogModalOpen","hoveredCard","setHoveredCard","devMode","setDevMode","currentRoute","setCurrentRoute","gameState","selectedHandIndex","log","startMatchWithDecks","startMatchVsAI","playCard","activateInstantInitiative","runAITurn","selectHandCard","passTurn","nextTurn","handleKeyDown","event","key","newDevMode","current","ctrlKey","then","info","catch","shiftKey","window","addEventListener","removeEventListener","handleCardClick","data","type","currentPlayer","same","index","card","name","targetLane","kind","includes","tag","_data$card$uid","_data$card","_data$card2","_gameState$hands","uid","id","stateHand","hands","idxInState","findIndex","c","_c$uid","console","warn","__politicardDebug","lastClickMismatch","ts","Date","now","player","_gameState$hands2","playerHand","length","lane","_gameState$hands3","clickedSlotType","slot","specCard","slotType","handleCardHover","handleApplyDeck","deck","cardDeck","handleStartMatch","p1Deck","p2Deck","defaultP2Deck","AUTORITAERER_REALIST","defaultP1Deck","NEOLIBERAL_TECHNOKRAT","handlePlayCardFromModal","targetSlot","_gameState$hands4","resolveEffectKey","require","k","effectKey","_gameState$aiEnabled","aiEnabled","t","setTimeout","clearTimeout","style","margin","padding","background","color","fontFamily","height","overflow","children","position","top","left","zIndex","display","gap","onClick","border","borderRadius","fontSize","fontWeight","cursor","fileName","_jsxFileName","lineNumber","columnNumber","e","error","inset","gridTemplateRows","onCardClick","onCardHover","isOpen","onClose","onApplyDeck","onStartMatch","isVisible","onToggle","onPassTurn","onToggleLog","onPlayCard","hovered","right","boxShadow","opacity","marginTop","actionPoints","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { logger } from './debug/logger';\r\nimport { GameCanvas } from './components/GameCanvas';\r\nimport { DeckBuilder } from './components/DeckBuilder';\r\nimport { GameInfoModal } from './components/GameInfoModal';\r\nimport { EventLogModal } from './components/EventLogModal';\r\nimport { HandCardModal } from './components/HandCardModal';\r\nimport { GameLogModal } from './components/GameLogModal';\r\nimport UILayoutEditor from './components/UILayoutEditor';\r\nimport CardEffectTestSuite from './test/CardEffectTestSuite';\r\nimport { useGameState } from './hooks/useGameState';\r\nimport { BuilderEntry, PoliticianCard, Player } from './types/game';\r\nimport { Specials, PRESET_DECKS, Pols } from './data/gameData';\r\nimport { buildDeckFromEntries } from './utils/gameUtils';\r\nimport { copyDebugSnapshotToClipboard, downloadDebugSnapshot } from './utils/debugExport';\r\nimport { GameProvider } from './context/GameContext';\r\nimport { getCardDetails } from './data/cardDetails';\r\nimport { CardHoverInfoPanel } from './components/CardHoverInfoPanel';\r\n// Temporarily disabled for build\r\n// import { hasAnyZeroApPlay } from './utils/ap';\r\n\r\nfunction AppContent() {\r\n  // Old image atlas/background removed; cards load their own images per file mapping\r\n\r\n  const [deckBuilderOpen, setDeckBuilderOpen] = useState(true);\r\n  const [gameInfoModalOpen, setGameInfoModalOpen] = useState(true);\r\n  const [eventLogModalOpen, setEventLogModalOpen] = useState(false);\r\n  const [handCardModalOpen, setHandCardModalOpen] = useState(false);\r\n  const [gameLogModalOpen, setGameLogModalOpen] = useState(false);\r\n  const [hoveredCard, setHoveredCard] = useState<any>(null);\r\n\r\n  // 🔧 DEV MODE: Toggle für lokales Testing ohne KI\r\n  const [devMode, setDevMode] = useState(false);\r\n\r\n  // UI Layout Editor Route\r\n  const [currentRoute, setCurrentRoute] = useState<'game' | 'ui-editor' | 'test-suite'>('game');\r\n\r\n  const {\r\n    gameState,\r\n    selectedHandIndex,\r\n    log,\r\n    startMatchWithDecks,\r\n    startMatchVsAI,\r\n    playCard,\r\n    activateInstantInitiative,\r\n    runAITurn,\r\n    selectHandCard,\r\n    passTurn,\r\n    nextTurn,\r\n  } = useGameState();\r\n\r\n  // No global image preloading required\r\n\r\n  // Keyboard shortcuts\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'i' || event.key === 'I') {\r\n        setGameInfoModalOpen(!gameInfoModalOpen);\r\n      }\r\n      if (event.key === 'l' || event.key === 'L') {\r\n        setEventLogModalOpen(!eventLogModalOpen);\r\n      }\r\n      if (event.key === 'g' || event.key === 'G') {\r\n        setGameLogModalOpen(!gameLogModalOpen);\r\n      }\r\n      // 🔧 DEV MODE: Toggle mit 'M' Taste (M für Manual-Mode)\r\n      if (event.key === 'm' || event.key === 'M') {\r\n        const newDevMode = !devMode;\r\n        setDevMode(newDevMode);\r\n        log(`🔧 DEV MODE ${newDevMode ? 'AKTIVIERT' : 'DEAKTIVIERT'} - KI ist ${newDevMode ? 'AUS' : 'AN'}`);\r\n      }\r\n      // 🔧 DEV MODE: Zusätzliche Controls für manuelles Testen\r\n      if (devMode) {\r\n        // 'P' für Pass (aktueller Spieler)\r\n        if (event.key === 'p' || event.key === 'P') {\r\n          passTurn(gameState.current);\r\n          log(`⏭️ Player ${gameState.current} passt`);\r\n        }\r\n\r\n        // 'E' für Zug beenden (aktueller Spieler)\r\n        if (event.key === 'e' || event.key === 'E') {\r\n          nextTurn();\r\n          log(`⏭️ Player ${gameState.current} beendet Zug`);\r\n        }\r\n\r\n        // 'A' für Sofort-Initiative aktivieren (aktueller Spieler)\r\n        if (event.key === 'a' || event.key === 'A') {\r\n          activateInstantInitiative(gameState.current);\r\n          log(`🎯 Player ${gameState.current} aktiviert Sofort-Initiative`);\r\n        }\r\n      }\r\n\r\n      // UI Layout Editor Toggle mit 'U' Taste\r\n      if (event.key === 'u' || event.key === 'U') {\r\n        setCurrentRoute(currentRoute === 'game' ? 'ui-editor' : 'game');\r\n      }\r\n\r\n      // Test Suite Toggle mit 'T' Taste\r\n      if (event.key === 't' || event.key === 'T') {\r\n        setCurrentRoute(currentRoute === 'game' ? 'test-suite' : 'game');\r\n      }\r\n\r\n      // Debug snapshot: Ctrl+D copies to clipboard, Shift+D downloads file\r\n      if ((event.key === 'd' || event.key === 'D') && event.ctrlKey) {\r\n        copyDebugSnapshotToClipboard(gameState).then(() => {\r\n          logger.info('Debug snapshot copied to clipboard');\r\n        }).catch(() => {});\r\n      }\r\n      if ((event.key === 'd' || event.key === 'D') && event.shiftKey) {\r\n        downloadDebugSnapshot(gameState);\r\n      }\r\n\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [gameInfoModalOpen, eventLogModalOpen, gameLogModalOpen, devMode, log, gameState, passTurn, nextTurn, currentRoute, activateInstantInitiative]);\r\n\r\n  const handleCardClick = useCallback((data: any) => {\r\n    logger.info('🔧 DEBUG: handleCardClick called with:', data);\r\n    if (!data) return;\r\n\r\n    // Handle game control buttons\r\n\r\n\r\n    if (data.type === 'button_pass_turn') {\r\n      const currentPlayer = gameState.current;\r\n      logger.info(`🔧 DEBUG: button_pass_turn clicked - currentPlayer: ${currentPlayer}`);\r\n      log(`🎯 UI: Passen-Button geklickt - Spieler ${currentPlayer} passt`);\r\n      log(`📊 FLOW: UI → passTurn(${currentPlayer}) | Button click | Data: { type: \"button_pass_turn\", current: ${currentPlayer} }`);\r\n      passTurn(currentPlayer);\r\n      return;\r\n    }\r\n\r\n    if (data.type === 'button_end_turn') {\r\n      const currentPlayer = gameState.current;\r\n      logger.info(`🔧 DEBUG: button_end_turn clicked - currentPlayer: ${currentPlayer}`);\r\n      log(`🎯 UI: Zug-beenden-Button geklickt - Spieler ${currentPlayer} beendet Zug`);\r\n      log(`📊 FLOW: UI → nextTurn() | Button click | Data: { type: \"button_end_turn\", current: ${currentPlayer} }`);\r\n      nextTurn();\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    if (data.type === 'hand_p1') {\r\n      if (gameState.current !== 1) {\r\n        log('❌ ERROR: Handkarte geklickt aber nicht Spieler-Zug - Current: ' + gameState.current);\r\n        return;\r\n      }\r\n\r\n      const same = selectedHandIndex === data.index;\r\n      log('🎯 UI: Handkarte geklickt - ' + data.card.name + ' (Index: ' + data.index + ', Selected: ' + selectedHandIndex + ')');\r\n      log('📊 FLOW: UI → handleCardClick | Card selection | Data: { card: \"' + data.card.name + '\", index: ' + data.index + ', same: ' + same + ' }');\r\n\r\n      if (!same) {\r\n        // Single click → Modal öffnen\r\n        log('🎯 UI: Handkarte einfach geklickt → öffne Modal - ' + data.card.name);\r\n        setHandCardModalOpen(true);\r\n        selectHandCard(data.index);\r\n      } else {\r\n        // Double click → Karte direkt spielen (Auto-Platzierung)\r\n        const card: any = data.card;\r\n        const currentPlayer = gameState.current;\r\n        const targetLane = card.kind === 'pol' ? (['Staatsoberhaupt','Regierungschef','Diplomat'].includes(card.tag) ? 'aussen' : 'aussen') : 'innen';\r\n        log('🎯 UI: Handkarte doppelgeklickt → direkt spielen - ' + card.name + ' in ' + targetLane);\r\n        playCard(currentPlayer, data.index, targetLane);\r\n        selectHandCard(null);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // 🔧 DEV MODE: Player 2 Hand Clicks\r\n    if (data.type === 'hand_p2') {\r\n      if (gameState.current !== 2) {\r\n        log('❌ ERROR: P2 Handkarte geklickt aber nicht P2-Zug - Current: ' + gameState.current);\r\n        return;\r\n      }\r\n\r\n      const same = selectedHandIndex === data.index;\r\n      log('🎯 UI: P2 Handkarte geklickt - ' + data.card.name + ' (Index: ' + data.index + ', Selected: ' + selectedHandIndex + ')');\r\n      log('📊 FLOW: UI → handleCardClick | P2 Card selection | Data: { card: \"' + data.card.name + '\", index: ' + data.index + ', same: ' + same + ' }');\r\n\r\n      if (same) {\r\n        // Double-click to open modal for P2\r\n        log('🎯 UI: P2 Handkarte doppelgeklickt - ' + data.card.name);\r\n        log('📊 FLOW: UI → setHandCardModalOpen(true) | P2 Double click | Data: { card: \"' + data.card.name + '\" }');\r\n        setHandCardModalOpen(true);\r\n      } else {\r\n        // Fallback: UI index may not match authoritative state. Prefer UID lookup for P2.\r\n        const uid = data.card?.uid ?? data.card?.id;\r\n        const stateHand = gameState.hands?.[2] || [];\r\n        let idxInState = stateHand.findIndex((c: any) => (c.uid ?? c.id) === uid);\r\n\r\n        if (idxInState === -1) {\r\n          console.warn('[DIAG] P2 hand click: card uid not found in state.hands[2]', { uid, data });\r\n          log('❌ ERROR: P2 Karte nicht in Hand gefunden - UID: ' + uid);\r\n          (window as any).__politicardDebug = {\r\n            ...(window as any).__politicardDebug,\r\n            lastClickMismatch: { ts: Date.now(), uid, data, player: 2 }\r\n          };\r\n          return;\r\n        }\r\n\r\n        log('🎯 UI: P2 Handkarte ausgewählt - ' + data.card.name + ' (Index: ' + idxInState + ')');\r\n        log('📊 FLOW: UI → selectHandCard(' + idxInState + ') | P2 Card selection | Data: { card: \"' + data.card.name + '\", stateIndex: ' + idxInState + ' }');\r\n        selectHandCard(idxInState);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (data.type === 'row_slot') {\r\n      const currentPlayer = gameState.current;\r\n      if (selectedHandIndex === null) {\r\n        console.log('❌ ERROR: Slot geklickt aber keine Karte ausgewählt');\r\n        return;\r\n      }\r\n\r\n      const playerHand = gameState.hands?.[currentPlayer];\r\n      if (!playerHand || selectedHandIndex < 0 || selectedHandIndex >= playerHand.length) {\r\n        console.log('❌ ERROR: Ungültige Hand oder Index - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer + ', Hand-Größe: ' + (playerHand?.length || 0));\r\n        return;\r\n      }\r\n\r\n      const card = playerHand[selectedHandIndex];\r\n      if (!card) {\r\n        console.log('❌ ERROR: Ausgewählte Karte nicht gefunden - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer);\r\n        return;\r\n      }\r\n\r\n      const lane = data.lane;\r\n      console.log('🎯 UI: Karte auf Slot gespielt - ' + card.name + ' nach ' + (lane === 'aussen' ? 'Regierungsreihe' : 'Öffentlichkeitsreihe') + ' (Slot ' + (data.index + 1) + ') für Player ' + currentPlayer);\r\n      console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ', \"' + lane + '\") | Card placement | Data: { card: \"' + card.name + '\", lane: \"' + lane + '\", slot: ' + (data.index + 1) + ', player: ' + currentPlayer + ' }');\r\n      playCard(currentPlayer, selectedHandIndex, lane);\r\n      selectHandCard(null);\r\n      return;\r\n    }\r\n\r\n    if (data.type === 'empty_slot') {\r\n      const currentPlayer = gameState.current;\r\n      const clickedSlotType = data.slot;\r\n\r\n      // Spezielle Behandlung für leere Instant-Slots\r\n      if (clickedSlotType === 'instant') {\r\n        if (selectedHandIndex === null) {\r\n          console.log('ℹ️ INFO: Leerer Sofort-Initiative-Slot geklickt - wähle eine Sofort-Initiative aus der Hand aus');\r\n          return;\r\n        }\r\n        // Fall durch zur normalen Slot-Logik\r\n      } else if (selectedHandIndex === null) {\r\n        console.log('❌ ERROR: Leerer Slot geklickt aber keine Karte ausgewählt');\r\n        return;\r\n      }\r\n\r\n      const playerHand = gameState.hands?.[currentPlayer];\r\n      if (!playerHand || selectedHandIndex < 0 || selectedHandIndex >= playerHand.length) {\r\n        console.log('❌ ERROR: Ungültige Hand oder Index - Index: ' + selectedHandIndex + ', Player: ' + currentPlayer + ', Hand-Größe: ' + (playerHand?.length || 0));\r\n        return;\r\n      }\r\n\r\n      const card = playerHand[selectedHandIndex];\r\n      if (!card || card.kind !== 'spec') {\r\n        console.log('❌ ERROR: Ausgewählte Karte ist keine Spezialkarte - Kind: ' + (card?.kind || 'null') + ', Player: ' + currentPlayer);\r\n        return;\r\n      }\r\n\r\n      const specCard = card as any; // Cast to access type property\r\n      const slotType = data.slot;\r\n\r\n      console.log('🎯 UI: Leerer Slot geklickt - ' + card.name + ' auf ' + slotType);\r\n      console.log('📊 FLOW: UI → handleCardClick | Empty slot click | Data: { card: \"' + card.name + '\", type: \"' + specCard.type + '\", slot: \"' + slotType + '\" }');\r\n\r\n      // Check if card type matches slot\r\n      if (slotType === 'permanent_government' && specCard.type === 'Dauerhaft-Initiative') {\r\n        // Place permanent initiative in government slot\r\n        console.log('🎯 UI: Dauerhafte Initiative in Regierungs-Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\r\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Permanent initiative | Data: { card: \"' + card.name + '\", slot: \"government\", player: ' + currentPlayer + ' }');\r\n        playCard(currentPlayer, selectedHandIndex);\r\n        selectHandCard(null);\r\n        return;\r\n      }\r\n\r\n      if (slotType === 'permanent_public' && specCard.type === 'Dauerhaft-Initiative') {\r\n        // Place permanent initiative in public slot\r\n        console.log('🎯 UI: Dauerhafte Initiative in Öffentlichkeits-Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\r\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Permanent initiative | Data: { card: \"' + card.name + '\", slot: \"public\", player: ' + currentPlayer + ' }');\r\n        playCard(currentPlayer, selectedHandIndex);\r\n        selectHandCard(null);\r\n        return;\r\n      }\r\n\r\n      if (slotType === 'instant' && specCard.type === 'Sofort-Initiative') {\r\n        // Place instant initiative in sofort slot\r\n        console.log('🎯 UI: Sofort-Initiative in Slot gelegt - ' + card.name + ' für Player ' + currentPlayer);\r\n        console.log('📊 FLOW: UI → playCard(' + currentPlayer + ', ' + selectedHandIndex + ') | Instant initiative | Data: { card: \"' + card.name + '\", type: \"Sofort-Initiative\", player: ' + currentPlayer + ' }');\r\n        playCard(currentPlayer, selectedHandIndex);\r\n        selectHandCard(null);\r\n        return;\r\n      }\r\n\r\n      console.log('❌ ERROR: Karten-Typ passt nicht zum Slot - Card: ' + specCard.type + ', Slot: ' + slotType);\r\n      return;\r\n    }\r\n\r\n    // 🔧 NEU: Sofort-Initiative aus dem Slot aktivieren\r\n    if (data.type === 'activate_instant') {\r\n      const player = data.player as Player;\r\n      const card = data.card;\r\n      console.log('🎯 UI: Sofort-Initiative aus Slot aktiviert - ' + card.name + ' für Player ' + player);\r\n      activateInstantInitiative(player);\r\n      return;\r\n    }\r\n  }, [gameState, selectedHandIndex, playCard, selectHandCard, passTurn, nextTurn, log]);\r\n\r\n  const handleCardHover = useCallback((data: any) => {\r\n    setHoveredCard(data);\r\n  }, []);\r\n\r\n  const handleApplyDeck = useCallback((deck: BuilderEntry[]) => {\r\n    const cardDeck = buildDeckFromEntries(deck);\r\n    console.log('Applied deck:', cardDeck);\r\n  }, []);\r\n\r\n  const handleStartMatch = useCallback((p1Deck: BuilderEntry[], p2Deck: BuilderEntry[]) => {\r\n    if (p1Deck && p1Deck.length > 0 && p2Deck && p2Deck.length > 0) {\r\n      startMatchWithDecks(p1Deck, p2Deck);\r\n    } else if (p1Deck && p1Deck.length > 0) {\r\n      if (devMode) {\r\n        // Dev Mode: Beide Spieler manuell steuern - nutze preset für P2 aber ohne KI\r\n        const defaultP2Deck = PRESET_DECKS.AUTORITAERER_REALIST as BuilderEntry[];\r\n        startMatchWithDecks(p1Deck, defaultP2Deck);\r\n        log('🔧 DEV MODE: Spiel gestartet ohne KI - beide Spieler manuell steuerbar');\r\n      } else {\r\n        // Versus AI with a default preset if only P1 provided\r\n        startMatchVsAI(p1Deck, 'AUTORITAERER_REALIST');\r\n        log('🤖 KI-Spiel gestartet');\r\n      }\r\n    } else {\r\n      // Use default preset decks if no decks are provided\r\n      const defaultP1Deck = PRESET_DECKS.NEOLIBERAL_TECHNOKRAT as BuilderEntry[];\r\n      const defaultP2Deck = PRESET_DECKS.AUTORITAERER_REALIST as BuilderEntry[];\r\n      startMatchWithDecks(defaultP1Deck, defaultP2Deck);\r\n      log('🎮 Spiel gestartet mit Standard-Decks');\r\n    }\r\n  }, [startMatchWithDecks, startMatchVsAI, devMode, log]);\r\n\r\n  const handlePlayCardFromModal = useCallback((index: number, targetSlot?: string) => {\r\n    console.log('🔧 DEBUG: handlePlayCardFromModal called with:', index, targetSlot);\r\n    const currentPlayer = gameState.current;\r\n    const playerHand = gameState.hands?.[currentPlayer];\r\n    if (!playerHand || index < 0 || index >= playerHand.length) {\r\n      console.log('❌ DEBUG: Invalid hand or index:', index, 'for player:', currentPlayer, 'hand size:', (playerHand?.length || 0));\r\n      return;\r\n    }\r\n\r\n    const card = playerHand[index];\r\n    if (!card) {\r\n      console.log('❌ DEBUG: No card found at index:', index, 'for player:', currentPlayer);\r\n      return;\r\n    }\r\n\r\n    // effectKey sicherstellen (Legacy-Namen → Keys)\r\n    try {\r\n      const { resolveEffectKey } = require('./effects/resolveEffectKey');\r\n      const k = resolveEffectKey(card.name, (card as any).effectKey);\r\n      if (k) (card as any).effectKey = k;\r\n    } catch {}\r\n\r\n    console.log('🔧 DEBUG: Card found:', card.name, 'for player:', currentPlayer);\r\n\r\n    if (targetSlot === 'aussen' || targetSlot === 'innen') {\r\n      console.log('🔧 DEBUG: Calling playCard with lane:', targetSlot);\r\n      playCard(currentPlayer, index, targetSlot as any);\r\n    } else {\r\n      // Handle special slots\r\n      console.log('🔧 DEBUG: Calling playCard without lane');\r\n      log(`🃏 Player ${currentPlayer}: ${card.name} gespielt in ${targetSlot}`);\r\n      // TODO: Implement special slot placement\r\n      playCard(currentPlayer, index);\r\n    }\r\n\r\n    selectHandCard(null);\r\n    // nextTurn() wird jetzt automatisch in playCard aufgerufen wenn nötig\r\n  }, [gameState, playCard, selectHandCard, log]);\r\n\r\n  // Auto-run AI turn whenever it's AI's turn (nur wenn nicht im Dev Mode)\r\n  useEffect(() => {\r\n    // Debug: Log auto-AI trigger checks\r\n    if (gameState.current === 2) {\r\n      console.log('🔍 AUTO_AI_CHECK: current=2, aiEnabled=', gameState.aiEnabled);\r\n    }\r\n    if (gameState.current === 2 && !devMode && gameState.aiEnabled?.[2]) {\r\n      console.log('🔔 AUTO_AI_RUN scheduled');\r\n      const t = setTimeout(() => {\r\n        console.log('🔔 AUTO_AI_RUN executing runAITurn');\r\n        runAITurn();\r\n      }, 120);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [gameState, runAITurn, devMode]);\r\n\r\n\r\n\r\n  // Old renderTooltip removed; using CardHoverInfoPanel component instead.\r\n\r\n  return (\r\n    <div style={{\r\n      margin: 0,\r\n      padding: 0,\r\n      background: '#0b0f14',\r\n      color: '#e8f0f8',\r\n      fontFamily: 'ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, \"Apple Color Emoji\", \"Segoe UI Emoji\"',\r\n      height: '100vh',\r\n      overflow: 'hidden',\r\n    }}>\r\n      {/* Route Navigation */}\r\n      <div style={{\r\n        position: 'fixed',\r\n        top: '10px',\r\n        left: '10px',\r\n        zIndex: 1001,\r\n        display: 'flex',\r\n        gap: '8px',\r\n      }}>\r\n        <button\r\n          onClick={() => setCurrentRoute('game')}\r\n          style={{\r\n            background: currentRoute === 'game' ? '#3b82f6' : '#374151',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '6px',\r\n            fontSize: '12px',\r\n            fontWeight: 600,\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          🎮 Game\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            // Start a quick match vs AI using default presets\r\n            try {\r\n              startMatchVsAI(PRESET_DECKS.NEOLIBERAL_TECHNOKRAT as any);\r\n              log('🤖 Schnellstart: Spiel vs KI gestartet');\r\n            } catch (e) {\r\n              console.error('Start vs AI failed', e);\r\n              log('❌ Fehler: KI-Start fehlgeschlagen');\r\n            }\r\n          }}\r\n          style={{\r\n            background: '#10b981',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '6px',\r\n            fontSize: '12px',\r\n            fontWeight: 600,\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          🤖 Start vs KI\r\n        </button>\r\n        <button\r\n          onClick={() => setCurrentRoute('ui-editor')}\r\n          style={{\r\n            background: currentRoute === 'ui-editor' ? '#3b82f6' : '#374151',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '6px',\r\n            fontSize: '12px',\r\n            fontWeight: 600,\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          🎨 UI Editor\r\n        </button>\r\n        <button\r\n          onClick={() => setCurrentRoute('test-suite')}\r\n          style={{\r\n            background: currentRoute === 'test-suite' ? '#3b82f6' : '#374151',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '6px',\r\n            fontSize: '12px',\r\n            fontWeight: 600,\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          🧪 Test Suite\r\n        </button>\r\n      </div>\r\n\r\n      {currentRoute === 'ui-editor' ? (\r\n        <UILayoutEditor />\r\n      ) : currentRoute === 'test-suite' ? (\r\n        <CardEffectTestSuite />\r\n      ) : (\r\n        <div style={{\r\n          position: 'fixed',\r\n          inset: 0,\r\n          display: 'grid',\r\n          gridTemplateRows: '1fr',\r\n          gap: 0,\r\n          padding: 0,\r\n        }}>\r\n          <div style={{\r\n            position: 'relative',\r\n            overflow: 'hidden',\r\n            background: '#0e141b',\r\n          }}>\r\n            <GameCanvas\r\n              gameState={gameState}\r\n              selectedHandIndex={selectedHandIndex}\r\n              onCardClick={handleCardClick}\r\n              onCardHover={handleCardHover}\r\n              devMode={devMode}\r\n            />\r\n\r\n            <DeckBuilder\r\n              isOpen={deckBuilderOpen}\r\n              onClose={() => setDeckBuilderOpen(false)}\r\n              onApplyDeck={handleApplyDeck}\r\n              onStartMatch={handleStartMatch}\r\n            />\r\n\r\n            {!deckBuilderOpen && (\r\n              <GameInfoModal\r\n                gameState={gameState}\r\n                isVisible={gameInfoModalOpen}\r\n                onToggle={() => setGameInfoModalOpen(!gameInfoModalOpen)}\r\n                onPassTurn={passTurn}\r\n                onToggleLog={() => setGameLogModalOpen(!gameLogModalOpen)}\r\n                onCardClick={handleCardClick}\r\n                devMode={devMode}\r\n              />\r\n            )}\r\n\r\n            {!deckBuilderOpen && (\r\n              <EventLogModal\r\n                gameState={gameState}\r\n                isVisible={eventLogModalOpen}\r\n                onToggle={() => setEventLogModalOpen(!eventLogModalOpen)}\r\n              />\r\n            )}\r\n\r\n            {!deckBuilderOpen && (\r\n              <HandCardModal\r\n                gameState={gameState}\r\n                selectedHandIndex={selectedHandIndex}\r\n                isVisible={handCardModalOpen}\r\n                onClose={() => setHandCardModalOpen(false)}\r\n                onPlayCard={handlePlayCardFromModal}\r\n              />\r\n            )}\r\n\r\n            {!deckBuilderOpen && (\r\n              <GameLogModal\r\n                gameState={gameState}\r\n                isVisible={gameLogModalOpen}\r\n                onToggle={() => setGameLogModalOpen(!gameLogModalOpen)}\r\n              />\r\n            )}\r\n\r\n            <CardHoverInfoPanel hovered={hoveredCard} />\r\n\r\n            {/* 🔧 DEV MODE Indikator */}\r\n            {devMode && (\r\n              <div style={{\r\n                position: 'fixed',\r\n                top: '10px',\r\n                right: '10px',\r\n                background: '#ff6b35',\r\n                color: 'white',\r\n                padding: '8px 12px',\r\n                borderRadius: '6px',\r\n                fontSize: '12px',\r\n                fontWeight: 600,\r\n                boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',\r\n                zIndex: 1000,\r\n              }}>\r\n                🔧 DEV MODE - KI AUS\r\n              </div>\r\n            )}\r\n\r\n          {/* 🎯 Current Player Indicator (immer sichtbar im Dev Mode) */}\r\n          {devMode && (\r\n            <div style={{\r\n              position: 'fixed',\r\n              top: '60px',\r\n              right: '10px',\r\n              background: gameState.current === 1 ? '#4ade80' : '#ef4444',\r\n              color: 'white',\r\n              padding: '12px 16px',\r\n              borderRadius: '8px',\r\n              fontSize: '16px',\r\n              fontWeight: 700,\r\n              boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',\r\n              zIndex: 1000,\r\n              border: '2px solid rgba(255, 255, 255, 0.3)',\r\n            }}>\r\n              🎮 Player {gameState.current} am Zug\r\n              <div style={{\r\n                fontSize: '11px',\r\n                fontWeight: 400,\r\n                opacity: 0.9,\r\n                marginTop: '4px',\r\n              }}>\r\n                AP: {gameState.actionPoints[gameState.current]}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <GameProvider>\r\n      <AppContent />\r\n    </GameProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}