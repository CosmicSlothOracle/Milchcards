{"ast":null,"code":"// src/ui/layout.ts\nimport baseLayout from './ui_layout_1920x1080.json';\nimport bgImg from '../assets/images/ui_layout_background_ingame.png';\nexport const UI_BASE = {\n  width: 1920,\n  height: 1080\n};\n// attach background so GameCanvas can read LAYOUT.background\nexport const LAYOUT = {\n  ...baseLayout,\n  background: {\n    enabled: true,\n    src: bgImg\n  }\n};\n\n// ---------- helpers ----------\n\nexport function getZone(id) {\n  const z = LAYOUT.zones.find(z => z.id === id);\n  if (!z) throw new Error(`UI zone not found: ${id}`);\n  return z;\n}\nexport function getUiTransform(canvasW, canvasH) {\n  const sx = canvasW / UI_BASE.width;\n  const sy = canvasH / UI_BASE.height;\n  const scale = Math.min(sx, sy);\n  const offsetX = Math.floor((canvasW - UI_BASE.width * scale) / 2);\n  const offsetY = Math.floor((canvasH - UI_BASE.height * scale) / 2);\n  return {\n    scale,\n    offsetX,\n    offsetY\n  };\n}\nexport function computeSlotRects(zone) {\n  const [x, y, w, h] = zone.rectPx;\n  if (!zone.layout) return [{\n    x,\n    y,\n    w,\n    h\n  }];\n  if (zone.layout.type === 'singleSlot') {\n    const [sw, sh] = zone.layout.slotSize;\n    return [{\n      x: x + Math.floor((w - sw) / 2),\n      y: y + Math.floor((h - sh) / 2),\n      w: sw,\n      h: sh\n    }];\n  }\n  // fixedSlots\n  const {\n    slots,\n    slotSize,\n    gap,\n    direction,\n    alignment\n  } = zone.layout;\n  const [sw, sh] = slotSize;\n  const rects = [];\n  if (direction === 'horizontal') {\n    const totalW = sw * slots + gap * (slots - 1);\n    let startX = x;\n    if (alignment === 'center') startX = x + Math.floor((w - totalW) / 2);\n    if (alignment === 'right') startX = x + (w - totalW);\n    for (let i = 0; i < slots; i++) {\n      rects.push({\n        x: startX + i * (sw + gap),\n        y,\n        w: sw,\n        h: sh\n      });\n    }\n  } else {\n    const totalH = sh * slots + gap * (slots - 1);\n    let startY = y;\n    if (alignment === 'center') startY = y + Math.floor((h - totalH) / 2);\n    if (alignment === 'right') startY = y + (h - totalH); // 'right' used as bottom for vertical\n    for (let i = 0; i < slots; i++) {\n      rects.push({\n        x,\n        y: startY + i * (sh + gap),\n        w: sw,\n        h: sh\n      });\n    }\n  }\n  return rects;\n}\n\n// Hands\nexport function computeHandRects(side) {\n  const id = side === 'player' ? 'hand.player' : 'hand.opponent';\n  return computeSlotRects(getZone(id));\n}\n\n// Rows\nexport function getGovernmentRects(side) {\n  const id = side === 'player' ? 'row.government.player' : 'row.government.opponent';\n  return computeSlotRects(getZone(id));\n}\nexport function getPublicRects(side) {\n  const id = side === 'player' ? 'row.public.player' : 'row.public.opponent';\n  return computeSlotRects(getZone(id));\n}\n\n// Instant initiative single slot\nexport function getSofortRect(side) {\n  const id = side === 'player' ? 'slot.instant.player' : 'slot.instant.opponent';\n  return computeSlotRects(getZone(id))[0];\n}\n\n// Interventions single slot (kept for draw code)\nexport function getInterventionsRect(side) {\n  const id = side === 'player' ? 'interventions.player' : 'interventions.opponent';\n  return computeSlotRects(getZone(id))[0];\n}\n\n// capacities used by canvas/utils\nexport function getLaneCapacity(lane) {\n  return lane === 'government' ? 5 : 3;\n}","map":{"version":3,"names":["baseLayout","bgImg","UI_BASE","width","height","LAYOUT","background","enabled","src","getZone","id","z","zones","find","Error","getUiTransform","canvasW","canvasH","sx","sy","scale","Math","min","offsetX","floor","offsetY","computeSlotRects","zone","x","y","w","h","rectPx","layout","type","sw","sh","slotSize","slots","gap","direction","alignment","rects","totalW","startX","i","push","totalH","startY","computeHandRects","side","getGovernmentRects","getPublicRects","getSofortRect","getInterventionsRect","getLaneCapacity","lane"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/ui/layout.ts"],"sourcesContent":["// src/ui/layout.ts\r\nimport baseLayout from './ui_layout_1920x1080.json';\r\nimport bgImg from '../assets/images/ui_layout_background_ingame.png';\r\n\r\nexport const UI_BASE = { width: 1920, height: 1080 } as const;\r\n\r\ntype Dir = 'horizontal' | 'vertical';\r\ntype Align = 'left' | 'center' | 'right';\r\n\r\ntype FixedSlots = {\r\n  type: 'fixedSlots';\r\n  slots: number;\r\n  slotSize: [number, number];\r\n  gap: number;\r\n  alignment: Align;\r\n  direction: Dir;\r\n};\r\n\r\ntype SingleSlot = {\r\n  type: 'singleSlot';\r\n  slotSize: [number, number];\r\n};\r\n\r\ntype ZoneLayout = FixedSlots | SingleSlot;\r\n\r\nexport type UiZone = {\r\n  id: string;\r\n  rectPx: [number, number, number, number];\r\n  layout?: ZoneLayout;\r\n  z?: number;\r\n};\r\n\r\nexport type UiLayout = {\r\n  version: number;\r\n  canvas: { width: number; height: number; aspect: string };\r\n  scaling: { mode: 'fit' | 'fill' | 'stretch'; letterbox: boolean };\r\n  zones: UiZone[];\r\n  background?: { enabled: boolean; src?: string };\r\n};\r\n\r\n// attach background so GameCanvas can read LAYOUT.background\r\nexport const LAYOUT: UiLayout = {\r\n  ...(baseLayout as UiLayout),\r\n  background: { enabled: true, src: bgImg }\r\n};\r\n\r\n// ---------- helpers ----------\r\n\r\nexport function getZone(id: string): UiZone {\r\n  const z = LAYOUT.zones.find(z => z.id === id);\r\n  if (!z) throw new Error(`UI zone not found: ${id}`);\r\n  return z;\r\n}\r\n\r\nexport function getUiTransform(canvasW: number, canvasH: number) {\r\n  const sx = canvasW / UI_BASE.width;\r\n  const sy = canvasH / UI_BASE.height;\r\n  const scale = Math.min(sx, sy);\r\n  const offsetX = Math.floor((canvasW - UI_BASE.width * scale) / 2);\r\n  const offsetY = Math.floor((canvasH - UI_BASE.height * scale) / 2);\r\n  return { scale, offsetX, offsetY };\r\n}\r\n\r\ntype Rect = { x: number; y: number; w: number; h: number };\r\n\r\nexport function computeSlotRects(zone: UiZone): Rect[] {\r\n  const [x, y, w, h] = zone.rectPx;\r\n  if (!zone.layout) return [{ x, y, w, h }];\r\n  if (zone.layout.type === 'singleSlot') {\r\n    const [sw, sh] = zone.layout.slotSize;\r\n    return [{ x: x + Math.floor((w - sw) / 2), y: y + Math.floor((h - sh) / 2), w: sw, h: sh }];\r\n  }\r\n  // fixedSlots\r\n  const { slots, slotSize, gap, direction, alignment } = zone.layout;\r\n  const [sw, sh] = slotSize;\r\n  const rects: Rect[] = [];\r\n  if (direction === 'horizontal') {\r\n    const totalW = sw * slots + gap * (slots - 1);\r\n    let startX = x;\r\n    if (alignment === 'center') startX = x + Math.floor((w - totalW) / 2);\r\n    if (alignment === 'right') startX = x + (w - totalW);\r\n    for (let i = 0; i < slots; i++) {\r\n      rects.push({ x: startX + i * (sw + gap), y, w: sw, h: sh });\r\n    }\r\n  } else {\r\n    const totalH = sh * slots + gap * (slots - 1);\r\n    let startY = y;\r\n    if (alignment === 'center') startY = y + Math.floor((h - totalH) / 2);\r\n    if (alignment === 'right') startY = y + (h - totalH); // 'right' used as bottom for vertical\r\n    for (let i = 0; i < slots; i++) {\r\n      rects.push({ x, y: startY + i * (sh + gap), w: sw, h: sh });\r\n    }\r\n  }\r\n  return rects;\r\n}\r\n\r\n// Hands\r\nexport function computeHandRects(side: 'player' | 'opponent'): Rect[] {\r\n  const id = side === 'player' ? 'hand.player' : 'hand.opponent';\r\n  return computeSlotRects(getZone(id));\r\n}\r\n\r\n// Rows\r\nexport function getGovernmentRects(side: 'player' | 'opponent'): Rect[] {\r\n  const id = side === 'player' ? 'row.government.player' : 'row.government.opponent';\r\n  return computeSlotRects(getZone(id));\r\n}\r\n\r\nexport function getPublicRects(side: 'player' | 'opponent'): Rect[] {\r\n  const id = side === 'player' ? 'row.public.player' : 'row.public.opponent';\r\n  return computeSlotRects(getZone(id));\r\n}\r\n\r\n// Instant initiative single slot\r\nexport function getSofortRect(side: 'player' | 'opponent'): Rect {\r\n  const id = side === 'player' ? 'slot.instant.player' : 'slot.instant.opponent';\r\n  return computeSlotRects(getZone(id))[0];\r\n}\r\n\r\n// Interventions single slot (kept for draw code)\r\nexport function getInterventionsRect(side: 'player' | 'opponent'): Rect {\r\n  const id = side === 'player' ? 'interventions.player' : 'interventions.opponent';\r\n  return computeSlotRects(getZone(id))[0];\r\n}\r\n\r\n// capacities used by canvas/utils\r\nexport function getLaneCapacity(lane: 'public' | 'government'): number {\r\n  return lane === 'government' ? 5 : 3;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}