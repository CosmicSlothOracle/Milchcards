{"ast":null,"code":"import _objectSpread from\"C:/Users/skank/Videos/Cards/Milchcards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useCallback,useState}from'react';import{sumRow,getCardActionPointCost}from'../utils/gameUtils';export function useGameAI(gameState,setGameState,log){var _gameState$aiEnabled$,_gameState$aiEnabled;const aiEnabled=(_gameState$aiEnabled$=(_gameState$aiEnabled=gameState.aiEnabled)===null||_gameState$aiEnabled===void 0?void 0:_gameState$aiEnabled[2])!==null&&_gameState$aiEnabled$!==void 0?_gameState$aiEnabled$:false;const[aiPreset,setAiPreset]=useState('AUTORITAERER_REALIST');// Debug logging for AI state changes (only in development)\nif(process.env.NODE_ENV==='development'){console.log('ðŸ”§ DEBUG: useGameAI state - aiEnabled:',aiEnabled,'aiPreset:',aiPreset);}// AI enabled state - controlled by game logic\n// const forceAIEnabled = true; // Removed force-enable hack\n// Enhanced setAiEnabled with logging\nconst setAiEnabledWithLog=useCallback(enabled=>{setGameState(prev=>{var _prev$aiEnabled$,_prev$aiEnabled;return _objectSpread(_objectSpread({},prev),{},{aiEnabled:{1:(_prev$aiEnabled$=(_prev$aiEnabled=prev.aiEnabled)===null||_prev$aiEnabled===void 0?void 0:_prev$aiEnabled[1])!==null&&_prev$aiEnabled$!==void 0?_prev$aiEnabled$:false,2:enabled}});});// Only set preset when AI is enabled\nif(enabled){setAiPreset('AUTORITAERER_REALIST');}},[setGameState]);// Enhanced setAiPreset with logging - only when AI is enabled\nconst setAiPresetWithLog=useCallback(preset=>{if(aiEnabled){console.log('ðŸ”§ DEBUG: setAiPreset called with:',preset);setAiPreset(preset);}else{console.log('ðŸ”§ DEBUG: setAiPreset ignored - AI not enabled');}},[aiEnabled]);const runAITurn=useCallback(()=>{console.log('ðŸ”§ DEBUG: runAITurn called - aiEnabled:',aiEnabled,'current player:',gameState.current);setGameState(prev=>{// Check if AI is enabled and it's AI's turn\nif(!aiEnabled||prev.current!==2){console.log('ðŸ”§ DEBUG: AI not enabled or not AI turn - aiEnabled:',aiEnabled,'current:',prev.current);console.log('ðŸ”§ DEBUG: Full AI state check - aiEnabled:',aiEnabled,'current:',prev.current,'aiPreset:',aiPreset);console.log('ðŸ”§ DEBUG: AI state check failed - returning early');return prev;}console.log('ðŸ”§ DEBUG: AI turn starting - analyzing hand and board...');if(process.env.NODE_ENV==='development'){console.log('ðŸ”§ DEBUG: AI hand size:',prev.hands[2].length);console.log('ðŸ”§ DEBUG: AI AP:',prev.actionPoints[2]);console.log('ðŸ”§ DEBUG: AI hand cards:',prev.hands[2].map(c=>c.name));}const hand=prev.hands[2];const playerBoard=prev.board[1];// Player Board for analysis\nconst aiBoard=prev.board[2];// AI Board for analysis\nconst aiAP=prev.actionPoints[2];// Strategy Analysis\nconst playerInfluence=sumRow([...playerBoard.aussen]);const aiInfluence=sumRow([...aiBoard.aussen]);const influenceDiff=playerInfluence-aiInfluence;log(\"\\uD83E\\uDD16 KI-Analyse: Spieler \".concat(playerInfluence,\" vs KI \").concat(aiInfluence,\" (Diff: \").concat(influenceDiff,\")\"));// Check if AI should pass\nif(aiAP<=0){log('ðŸ¤– KI passt - keine AP mehr.');return _objectSpread(_objectSpread({},prev),{},{passed:_objectSpread(_objectSpread({},prev.passed),{},{2:true})});}// AI Strategy: Prioritize based on situation\nconst candidates=[];hand.forEach((card,idx)=>{const apCost=getCardActionPointCost(card,prev,2);// Debug logging for card analysis\nconsole.log(\"\\uD83D\\uDD27 DEBUG: AI card analysis - \".concat(card.name,\": AP cost \").concat(apCost,\", AI AP \").concat(aiAP,\", playable: \").concat(apCost<=aiAP));// Skip if not enough AP\nif(apCost>aiAP)return;if(card.kind==='pol'){const polCard=card;const lane=polCard.tag==='Staatsoberhaupt'||polCard.tag==='Regierungschef'||polCard.tag==='Diplomat'?'aussen':'innen';if(prev.board[2][lane].length<5){let priority=0;let reason='';// High priority for strong government cards when behind\nif(lane==='aussen'&&influenceDiff>5){priority=100+polCard.influence;reason='Einfluss-Aufholjagd';}// High priority for Leadership/Diplomat synergy\nelse if(polCard.tag==='Leadership'||polCard.tag==='Diplomat'){priority=80+polCard.influence;reason='FÃ¤higkeiten-Synergie';}// Medium priority for government building\nelse if(lane==='aussen'){priority=60+polCard.influence;reason='Regierungsaufbau';}// Lower priority for public cards\nelse{priority=30+polCard.influence;reason='Ã–ffentlichkeits-UnterstÃ¼tzung';}candidates.push({index:idx,card,priority,reason,apCost});}}else if(card.kind==='spec'){const specCard=card;// Initiatives\nif(specCard.type==='Sofort-Initiative'||specCard.type==='Dauerhaft-Initiative'){let priority=0;let reason='';// High priority for opponent weakening\nif(specCard.name.includes('Offensive')||specCard.name.includes('Skandal')){priority=90;reason='Gegner-SchwÃ¤chung';}// High priority for influence boost\nelse if(specCard.name.includes('Wirtschaftlicher Druck')||specCard.name.includes('Koalitionszwang')){if(influenceDiff>3){priority=85;reason='Einfluss-VerstÃ¤rkung';}else{priority=40;reason='Defensiver Boost';}}// Medium priority for other initiatives\nelse{priority=50;reason='Allgemeine Initiative';}candidates.push({index:idx,card,priority,reason,apCost});}// Interventions (Traps)\nelse if(specCard.type==='Intervention'){let priority=0;let reason='';// High priority for media opponents\nif(specCard.name==='Fake News-Kampagne'&&playerBoard.innen.some(c=>c.name.includes('Oprah')||c.name.includes('Zuckerberg'))){priority=95;reason='Medien-Gegner bekÃ¤mpfen';}// High priority for strong opponents\nelse if(specCard.name==='Whistleblower'&&playerBoard.aussen.some(c=>c.T===2)){priority=90;reason='Tier-2-Gegner schwÃ¤chen';}// High priority for movement/NGO opponents\nelse if(specCard.name==='Boykott-Kampagne'&&playerBoard.innen.some(c=>['Greta Thunberg','Malala Yousafzai','Bill Gates','George Soros'].includes(c.name))){priority=85;reason='Bewegung/NGO-Gegner bekÃ¤mpfen';}// Medium priority for general interventions\nelse{priority=40;reason='PrÃ¤ventive Falle';}candidates.push({index:idx,card,priority,reason,apCost});}}});if(candidates.length===0){// Pass if no playable card\nlog('ðŸ¤– KI passt - keine spielbaren Karten verfÃ¼gbar.');return _objectSpread(_objectSpread({},prev),{},{passed:_objectSpread(_objectSpread({},prev.passed),{},{2:true})});}// Sort by priority (highest first)\ncandidates.sort((a,b)=>b.priority-a.priority);// Debug logging of top candidates\nlog(\"\\uD83E\\uDD16 KI-Kandidaten (Top 3): \".concat(candidates.slice(0,3).map(c=>\"\".concat(c.card.name,\" (\").concat(c.priority,\" - \").concat(c.reason,\")\")).join(', ')));const choice=candidates[0];// Execute the chosen action\nif(choice.card.kind==='pol'){var _influence;const polChoice=choice.card;const lane=polChoice.tag==='Staatsoberhaupt'||polChoice.tag==='Regierungschef'||polChoice.tag==='Diplomat'?'aussen':'innen';// Hand update\nconst newP2Hand=[...prev.hands[2]];const[played]=newP2Hand.splice(choice.index,1);// Board update\nconst newP2Lane=[...prev.board[2][lane],played];const newP2Board=_objectSpread(_objectSpread({},prev.board[2]),{},{[lane]:newP2Lane});const newBoard=_objectSpread(_objectSpread({},prev.board),{},{2:newP2Board});// AP update\nconst newActionPoints=_objectSpread(_objectSpread({},prev.actionPoints),{},{2:prev.actionPoints[2]-choice.apCost});const laneName=lane==='aussen'?'Regierungsreihe':'Ã–ffentlichkeitsreihe';const power=(_influence=played.influence)!==null&&_influence!==void 0?_influence:0;log(\"\\uD83E\\uDD16 KI spielt \".concat(played.name,\" (\").concat(power,\" Einfluss) nach \").concat(laneName,\". (\").concat(choice.reason,\")\"));return _objectSpread(_objectSpread({},prev),{},{hands:_objectSpread(_objectSpread({},prev.hands),{},{2:newP2Hand}),board:newBoard,actionPoints:newActionPoints});}else if(choice.card.kind==='spec'){const newP2Hand=[...prev.hands[2]];const[played]=newP2Hand.splice(choice.index,1);// AP update\nconst newActionPoints=_objectSpread(_objectSpread({},prev.actionPoints),{},{2:prev.actionPoints[2]-choice.apCost});// Permanent initiatives go to slots\nif(played.type==='Dauerhaft-Initiative'){const slotType=played.slot==='Ã–ffentlichkeit'?'public':'government';if(slotType==='government'&&!prev.permanentSlots[2].government){const newPermanentSlots=_objectSpread(_objectSpread({},prev.permanentSlots),{},{2:_objectSpread(_objectSpread({},prev.permanentSlots[2]),{},{government:played})});log(\"\\uD83E\\uDD16 KI legt \".concat(played.name,\" in Regierung Spezial-Slot. (\").concat(choice.reason,\")\"));return _objectSpread(_objectSpread({},prev),{},{hands:_objectSpread(_objectSpread({},prev.hands),{},{2:newP2Hand}),permanentSlots:newPermanentSlots,actionPoints:newActionPoints});}else if(slotType==='public'&&!prev.permanentSlots[2].public){const newPermanentSlots=_objectSpread(_objectSpread({},prev.permanentSlots),{},{2:_objectSpread(_objectSpread({},prev.permanentSlots[2]),{},{public:played})});log(\"\\uD83E\\uDD16 KI legt \".concat(played.name,\" in \\xD6ffentlichkeit Spezial-Slot. (\").concat(choice.reason,\")\"));return _objectSpread(_objectSpread({},prev),{},{hands:_objectSpread(_objectSpread({},prev.hands),{},{2:newP2Hand}),permanentSlots:newPermanentSlots,actionPoints:newActionPoints});}}// Execute immediate initiatives\nlog(\"\\uD83E\\uDD16 KI spielt Initiative \".concat(played.name,\". (\").concat(choice.reason,\")\"));return _objectSpread(_objectSpread({},prev),{},{hands:_objectSpread(_objectSpread({},prev.hands),{},{2:newP2Hand}),actionPoints:newActionPoints});}return prev;});// Auto-advance turn after AI action if needed\nsetTimeout(()=>{setGameState(currentState=>{if(currentState.current===2&&currentState.actionPoints[2]<=0){// Trigger turn advancement\nconst newCurrent=1;const newActionPoints=_objectSpread({},currentState.actionPoints);newActionPoints[newCurrent]=2;log(\"\\uD83E\\uDD16 KI-Zug beendet - Spieler \".concat(newCurrent,\" ist am Zug (2 AP verf\\xFCgbar)\"));return _objectSpread(_objectSpread({},currentState),{},{current:newCurrent,actionPoints:newActionPoints});}return currentState;});},100);},[aiEnabled,log,gameState.current]);const canUsePutinDoubleIntervention=useCallback(player=>{const board=gameState.board[player];const allCards=[...board.innen,...board.aussen].filter(c=>c.kind==='pol');const putin=allCards.find(c=>c.name==='Vladimir Putin');if(!putin||putin.deactivated||putin._activeUsed)return false;const interventions=gameState.hands[player].filter(c=>c.kind==='spec');return interventions.length>=2;},[gameState]);const executePutinDoubleIntervention=useCallback(interventionCardIds=>{setGameState(prev=>{// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst player=prev.current;// Putin special ability implementation would go here\nlog(\"\\uD83E\\uDD16 Putin setzt doppelte Intervention ein\");return prev;});},[log]);return{runAITurn,canUsePutinDoubleIntervention,executePutinDoubleIntervention,aiEnabled,setAiEnabled:setAiEnabledWithLog,aiPreset,setAiPreset:setAiPreset// Use original function temporarily\n};}","map":{"version":3,"names":["useCallback","useState","sumRow","getCardActionPointCost","useGameAI","gameState","setGameState","log","_gameState$aiEnabled$","_gameState$aiEnabled","aiEnabled","aiPreset","setAiPreset","process","env","NODE_ENV","console","setAiEnabledWithLog","enabled","prev","_prev$aiEnabled$","_prev$aiEnabled","_objectSpread","setAiPresetWithLog","preset","runAITurn","current","hands","length","actionPoints","map","c","name","hand","playerBoard","board","aiBoard","aiAP","playerInfluence","aussen","aiInfluence","influenceDiff","concat","passed","candidates","forEach","card","idx","apCost","kind","polCard","lane","tag","priority","reason","influence","push","index","specCard","type","includes","innen","some","T","sort","a","b","slice","join","choice","_influence","polChoice","newP2Hand","played","splice","newP2Lane","newP2Board","newBoard","newActionPoints","laneName","power","slotType","slot","permanentSlots","government","newPermanentSlots","public","setTimeout","currentState","newCurrent","canUsePutinDoubleIntervention","player","allCards","filter","putin","find","deactivated","_activeUsed","interventions","executePutinDoubleIntervention","interventionCardIds","setAiEnabled"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/hooks/useGameAI.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\r\nimport { GameState, Card, Player } from '../types/game';\r\nimport { PRESET_DECKS } from '../data/gameData';\r\nimport { sumRow, getCardActionPointCost } from '../utils/gameUtils';\r\n\r\nexport function useGameAI(\r\n  gameState: GameState,\r\n  setGameState: React.Dispatch<React.SetStateAction<GameState>>,\r\n  log: (msg: string) => void\r\n) {\r\n  const aiEnabled = gameState.aiEnabled?.[2] ?? false;\r\n  const [aiPreset, setAiPreset] = useState<keyof typeof PRESET_DECKS>('AUTORITAERER_REALIST');\r\n\r\n  // Debug logging for AI state changes (only in development)\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('ðŸ”§ DEBUG: useGameAI state - aiEnabled:', aiEnabled, 'aiPreset:', aiPreset);\r\n  }\r\n\r\n  // AI enabled state - controlled by game logic\r\n  // const forceAIEnabled = true; // Removed force-enable hack\r\n\r\n  // Enhanced setAiEnabled with logging\r\n  const setAiEnabledWithLog = useCallback((enabled: boolean) => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      aiEnabled: {\r\n        1: prev.aiEnabled?.[1] ?? false,\r\n        2: enabled\r\n      }\r\n    }));\r\n\r\n    // Only set preset when AI is enabled\r\n    if (enabled) {\r\n      setAiPreset('AUTORITAERER_REALIST');\r\n    }\r\n  }, [setGameState]);\r\n\r\n  // Enhanced setAiPreset with logging - only when AI is enabled\r\n  const setAiPresetWithLog = useCallback((preset: keyof typeof PRESET_DECKS) => {\r\n    if (aiEnabled) {\r\n      console.log('ðŸ”§ DEBUG: setAiPreset called with:', preset);\r\n      setAiPreset(preset);\r\n    } else {\r\n      console.log('ðŸ”§ DEBUG: setAiPreset ignored - AI not enabled');\r\n    }\r\n  }, [aiEnabled]);\r\n\r\n  const runAITurn = useCallback(() => {\r\n    console.log('ðŸ”§ DEBUG: runAITurn called - aiEnabled:', aiEnabled, 'current player:', gameState.current);\r\n\r\n    setGameState(prev => {\r\n      // Check if AI is enabled and it's AI's turn\r\n      if (!aiEnabled || prev.current !== 2) {\r\n        console.log('ðŸ”§ DEBUG: AI not enabled or not AI turn - aiEnabled:', aiEnabled, 'current:', prev.current);\r\n        console.log('ðŸ”§ DEBUG: Full AI state check - aiEnabled:', aiEnabled, 'current:', prev.current, 'aiPreset:', aiPreset);\r\n        console.log('ðŸ”§ DEBUG: AI state check failed - returning early');\r\n        return prev;\r\n      }\r\n\r\n      console.log('ðŸ”§ DEBUG: AI turn starting - analyzing hand and board...');\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('ðŸ”§ DEBUG: AI hand size:', prev.hands[2].length);\r\n        console.log('ðŸ”§ DEBUG: AI AP:', prev.actionPoints[2]);\r\n        console.log('ðŸ”§ DEBUG: AI hand cards:', prev.hands[2].map(c => c.name));\r\n      }\r\n\r\n      const hand = prev.hands[2];\r\n      const playerBoard = prev.board[1]; // Player Board for analysis\r\n      const aiBoard = prev.board[2]; // AI Board for analysis\r\n      const aiAP = prev.actionPoints[2];\r\n\r\n      // Strategy Analysis\r\n      const playerInfluence = sumRow([...playerBoard.aussen]);\r\n      const aiInfluence = sumRow([...aiBoard.aussen]);\r\n      const influenceDiff = playerInfluence - aiInfluence;\r\n\r\n      log(`ðŸ¤– KI-Analyse: Spieler ${playerInfluence} vs KI ${aiInfluence} (Diff: ${influenceDiff})`);\r\n\r\n      // Check if AI should pass\r\n      if (aiAP <= 0) {\r\n        log('ðŸ¤– KI passt - keine AP mehr.');\r\n        return { ...prev, passed: { ...prev.passed, 2: true } };\r\n      }\r\n\r\n      // AI Strategy: Prioritize based on situation\r\n      const candidates: Array<{\r\n        index: number;\r\n        card: Card;\r\n        priority: number;\r\n        reason: string;\r\n        apCost: number;\r\n      }> = [];\r\n\r\n      hand.forEach((card, idx) => {\r\n        const apCost = getCardActionPointCost(card, prev, 2);\r\n\r\n        // Debug logging for card analysis\r\n        console.log(`ðŸ”§ DEBUG: AI card analysis - ${card.name}: AP cost ${apCost}, AI AP ${aiAP}, playable: ${apCost <= aiAP}`);\r\n\r\n        // Skip if not enough AP\r\n        if (apCost > aiAP) return;\r\n\r\n        if (card.kind === 'pol') {\r\n          const polCard = card as any;\r\n          const lane = polCard.tag === 'Staatsoberhaupt' || polCard.tag === 'Regierungschef' || polCard.tag === 'Diplomat' ? 'aussen' : 'innen';\r\n\r\n          if (prev.board[2][lane].length < 5) {\r\n            let priority = 0;\r\n            let reason = '';\r\n\r\n            // High priority for strong government cards when behind\r\n            if (lane === 'aussen' && influenceDiff > 5) {\r\n              priority = 100 + polCard.influence;\r\n              reason = 'Einfluss-Aufholjagd';\r\n            }\r\n            // High priority for Leadership/Diplomat synergy\r\n            else if (polCard.tag === 'Leadership' || polCard.tag === 'Diplomat') {\r\n              priority = 80 + polCard.influence;\r\n              reason = 'FÃ¤higkeiten-Synergie';\r\n            }\r\n            // Medium priority for government building\r\n            else if (lane === 'aussen') {\r\n              priority = 60 + polCard.influence;\r\n              reason = 'Regierungsaufbau';\r\n            }\r\n            // Lower priority for public cards\r\n            else {\r\n              priority = 30 + polCard.influence;\r\n              reason = 'Ã–ffentlichkeits-UnterstÃ¼tzung';\r\n            }\r\n\r\n            candidates.push({ index: idx, card, priority, reason, apCost });\r\n          }\r\n        }\r\n        else if (card.kind === 'spec') {\r\n          const specCard = card as any;\r\n\r\n          // Initiatives\r\n          if (specCard.type === 'Sofort-Initiative' || specCard.type === 'Dauerhaft-Initiative') {\r\n            let priority = 0;\r\n            let reason = '';\r\n\r\n            // High priority for opponent weakening\r\n            if (specCard.name.includes('Offensive') || specCard.name.includes('Skandal')) {\r\n              priority = 90;\r\n              reason = 'Gegner-SchwÃ¤chung';\r\n            }\r\n            // High priority for influence boost\r\n            else if (specCard.name.includes('Wirtschaftlicher Druck') || specCard.name.includes('Koalitionszwang')) {\r\n              if (influenceDiff > 3) {\r\n                priority = 85;\r\n                reason = 'Einfluss-VerstÃ¤rkung';\r\n              } else {\r\n                priority = 40;\r\n                reason = 'Defensiver Boost';\r\n              }\r\n            }\r\n            // Medium priority for other initiatives\r\n            else {\r\n              priority = 50;\r\n              reason = 'Allgemeine Initiative';\r\n            }\r\n\r\n            candidates.push({ index: idx, card, priority, reason, apCost });\r\n          }\r\n\r\n          // Interventions (Traps)\r\n          else if (specCard.type === 'Intervention') {\r\n            let priority = 0;\r\n            let reason = '';\r\n\r\n            // High priority for media opponents\r\n            if (specCard.name === 'Fake News-Kampagne' &&\r\n                playerBoard.innen.some(c => c.name.includes('Oprah') || c.name.includes('Zuckerberg'))) {\r\n              priority = 95;\r\n              reason = 'Medien-Gegner bekÃ¤mpfen';\r\n            }\r\n            // High priority for strong opponents\r\n            else if (specCard.name === 'Whistleblower' &&\r\n                     playerBoard.aussen.some(c => (c as any).T === 2)) {\r\n              priority = 90;\r\n              reason = 'Tier-2-Gegner schwÃ¤chen';\r\n            }\r\n            // High priority for movement/NGO opponents\r\n            else if (specCard.name === 'Boykott-Kampagne' &&\r\n                     playerBoard.innen.some(c => ['Greta Thunberg', 'Malala Yousafzai', 'Bill Gates', 'George Soros'].includes(c.name))) {\r\n              priority = 85;\r\n              reason = 'Bewegung/NGO-Gegner bekÃ¤mpfen';\r\n            }\r\n            // Medium priority for general interventions\r\n            else {\r\n              priority = 40;\r\n              reason = 'PrÃ¤ventive Falle';\r\n            }\r\n\r\n            candidates.push({ index: idx, card, priority, reason, apCost });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (candidates.length === 0) {\r\n        // Pass if no playable card\r\n        log('ðŸ¤– KI passt - keine spielbaren Karten verfÃ¼gbar.');\r\n        return { ...prev, passed: { ...prev.passed, 2: true } };\r\n      }\r\n\r\n      // Sort by priority (highest first)\r\n      candidates.sort((a, b) => b.priority - a.priority);\r\n\r\n      // Debug logging of top candidates\r\n      log(`ðŸ¤– KI-Kandidaten (Top 3): ${candidates.slice(0, 3).map(c => `${c.card.name} (${c.priority} - ${c.reason})`).join(', ')}`);\r\n\r\n      const choice = candidates[0];\r\n\r\n      // Execute the chosen action\r\n      if (choice.card.kind === 'pol') {\r\n        const polChoice = choice.card as any;\r\n        const lane = polChoice.tag === 'Staatsoberhaupt' || polChoice.tag === 'Regierungschef' || polChoice.tag === 'Diplomat' ? 'aussen' : 'innen';\r\n\r\n        // Hand update\r\n        const newP2Hand = [...prev.hands[2]];\r\n        const [played] = newP2Hand.splice(choice.index, 1);\r\n\r\n        // Board update\r\n        const newP2Lane = [...prev.board[2][lane], played];\r\n        const newP2Board = { ...prev.board[2], [lane]: newP2Lane };\r\n        const newBoard = { ...prev.board, 2: newP2Board };\r\n\r\n        // AP update\r\n        const newActionPoints = { ...prev.actionPoints, 2: prev.actionPoints[2] - choice.apCost };\r\n\r\n        const laneName = lane === 'aussen' ? 'Regierungsreihe' : 'Ã–ffentlichkeitsreihe';\r\n        const power = (played as any).influence ?? 0;\r\n        log(`ðŸ¤– KI spielt ${played.name} (${power} Einfluss) nach ${laneName}. (${choice.reason})`);\r\n\r\n        return {\r\n          ...prev,\r\n          hands: { ...prev.hands, 2: newP2Hand },\r\n          board: newBoard,\r\n          actionPoints: newActionPoints\r\n        };\r\n      }\r\n\r\n      else if (choice.card.kind === 'spec') {\r\n        const newP2Hand = [...prev.hands[2]];\r\n        const [played] = newP2Hand.splice(choice.index, 1);\r\n\r\n        // AP update\r\n        const newActionPoints = { ...prev.actionPoints, 2: prev.actionPoints[2] - choice.apCost };\r\n\r\n        // Permanent initiatives go to slots\r\n        if ((played as any).type === 'Dauerhaft-Initiative') {\r\n          const slotType = (played as any).slot === 'Ã–ffentlichkeit' ? 'public' : 'government';\r\n\r\n          if (slotType === 'government' && !prev.permanentSlots[2].government) {\r\n            const newPermanentSlots = {\r\n              ...prev.permanentSlots,\r\n              2: { ...prev.permanentSlots[2], government: played }\r\n            };\r\n            log(`ðŸ¤– KI legt ${played.name} in Regierung Spezial-Slot. (${choice.reason})`);\r\n\r\n            return {\r\n              ...prev,\r\n              hands: { ...prev.hands, 2: newP2Hand },\r\n              permanentSlots: newPermanentSlots,\r\n              actionPoints: newActionPoints\r\n            };\r\n          }\r\n          else if (slotType === 'public' && !prev.permanentSlots[2].public) {\r\n            const newPermanentSlots = {\r\n              ...prev.permanentSlots,\r\n              2: { ...prev.permanentSlots[2], public: played }\r\n            };\r\n            log(`ðŸ¤– KI legt ${played.name} in Ã–ffentlichkeit Spezial-Slot. (${choice.reason})`);\r\n\r\n            return {\r\n              ...prev,\r\n              hands: { ...prev.hands, 2: newP2Hand },\r\n              permanentSlots: newPermanentSlots,\r\n              actionPoints: newActionPoints\r\n            };\r\n          }\r\n        }\r\n\r\n        // Execute immediate initiatives\r\n        log(`ðŸ¤– KI spielt Initiative ${played.name}. (${choice.reason})`);\r\n        return {\r\n          ...prev,\r\n          hands: { ...prev.hands, 2: newP2Hand },\r\n          actionPoints: newActionPoints\r\n        };\r\n      }\r\n\r\n      return prev;\r\n    });\r\n\r\n    // Auto-advance turn after AI action if needed\r\n    setTimeout(() => {\r\n      setGameState(currentState => {\r\n        if (currentState.current === 2 && currentState.actionPoints[2] <= 0) {\r\n          // Trigger turn advancement\r\n          const newCurrent: Player = 1;\r\n          const newActionPoints = { ...currentState.actionPoints };\r\n          newActionPoints[newCurrent] = 2;\r\n\r\n          log(`ðŸ¤– KI-Zug beendet - Spieler ${newCurrent} ist am Zug (2 AP verfÃ¼gbar)`);\r\n\r\n          return {\r\n            ...currentState,\r\n            current: newCurrent,\r\n            actionPoints: newActionPoints\r\n          };\r\n        }\r\n        return currentState;\r\n      });\r\n    }, 100);\r\n  }, [aiEnabled, log, gameState.current]);\r\n\r\n  const canUsePutinDoubleIntervention = useCallback((player: Player): boolean => {\r\n    const board = gameState.board[player];\r\n    const allCards = [...board.innen, ...board.aussen].filter(c => c.kind === 'pol') as any[];\r\n    const putin = allCards.find(c => c.name === 'Vladimir Putin');\r\n\r\n    if (!putin || putin.deactivated || putin._activeUsed) return false;\r\n\r\n    const interventions = gameState.hands[player].filter(c => c.kind === 'spec');\r\n    return interventions.length >= 2;\r\n  }, [gameState]);\r\n\r\n  const executePutinDoubleIntervention = useCallback((interventionCardIds: number[]) => {\r\n    setGameState(prev => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      const player = prev.current;\r\n      // Putin special ability implementation would go here\r\n      log(`ðŸ¤– Putin setzt doppelte Intervention ein`);\r\n      return prev;\r\n    });\r\n  }, [log]);\r\n\r\n  return {\r\n    runAITurn,\r\n    canUsePutinDoubleIntervention,\r\n    executePutinDoubleIntervention,\r\n    aiEnabled,\r\n    setAiEnabled: setAiEnabledWithLog,\r\n    aiPreset,\r\n    setAiPreset: setAiPreset, // Use original function temporarily\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}