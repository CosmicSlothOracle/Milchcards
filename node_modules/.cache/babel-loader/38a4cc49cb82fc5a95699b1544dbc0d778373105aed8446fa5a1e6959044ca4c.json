{"ast":null,"code":"import { isInstantInitiative } from '../utils/tags';\n\n// Helper: Spieler wechseln\nconst other = p => p === 1 ? 2 : 1;\nexport function recomputeAuraFlags(state) {\n  // Legacy aura flags removed - auras are now calculated on-demand via Board-Check\n  // No more direct flag mutations - everything is event-driven\n\n  // Government refund is now handled via events in the card activation flow\n  // No need to pre-compute flags\n}\n\n/**\r\n * Wendet Einfluss-Modifikationen fÃ¼r Sofort-Initiativen an\r\n * Nur fÃ¼r Sofort-Initiativen, keine Topics/Tags\r\n */\nexport function applyInstantInitiativeInfluenceMods(state, player, baseInfluence, card) {\n  var _state$board$player, _state$board$opponent;\n  let influence = baseInfluence;\n  const reasons = [];\n\n  // Nur fÃ¼r Sofort-Initiativen\n  if (!isInstantInitiative(card)) {\n    return {\n      influence,\n      reasons\n    };\n  }\n\n  // Aura effects are now calculated on-demand via Board-Check\n  // No more flag-based aura calculations - everything is event-driven\n\n  const publicCards = ((_state$board$player = state.board[player]) === null || _state$board$player === void 0 ? void 0 : _state$board$player.innen) || [];\n\n  // Jennifer Doudna: +1 Einfluss (on-demand check)\n  const jenniferDoudna = publicCards.find(card => card.kind === 'spec' && card.name === 'Jennifer Doudna' && !card.deactivated);\n  if (jenniferDoudna) {\n    influence += 1;\n    reasons.push('Jennifer Doudna: +1 Einfluss');\n  }\n\n  // Anthony Fauci: +1 Einfluss (on-demand check)\n  const anthonyFauci = publicCards.find(card => card.kind === 'spec' && card.name === 'Anthony Fauci' && !card.deactivated);\n  if (anthonyFauci) {\n    influence += 1;\n    reasons.push('Anthony Fauci: +1 Einfluss');\n  }\n\n  // Noam Chomsky: -1 Einfluss (on-demand check for opponent)\n  const opponent = player === 1 ? 2 : 1;\n  const opponentCards = ((_state$board$opponent = state.board[opponent]) === null || _state$board$opponent === void 0 ? void 0 : _state$board$opponent.innen) || [];\n  const noamChomsky = opponentCards.find(card => card.kind === 'spec' && card.name === 'Noam Chomsky' && !card.deactivated);\n  if (noamChomsky) {\n    influence -= 1;\n    reasons.push('Noam Chomsky: âˆ’1 Einfluss');\n  }\n  return {\n    influence,\n    reasons\n  };\n}\n\n/**\r\n * Ai Weiwei: +1 Karte +1 AP bei jeder Sofort-Initiative (AP cap bei 4)\r\n */\nexport function maybeApplyAiWeiweiInstantBonus(state, player, card, log) {\n  var _state$effectFlags$pl;\n  // Nur fÃ¼r Sofort-Initiativen\n  if (!isInstantInitiative(card)) return;\n\n  // Nur wenn Ai Weiwei in der Ã–ffentlichkeit ist\n  if (!((_state$effectFlags$pl = state.effectFlags[player]) !== null && _state$effectFlags$pl !== void 0 && _state$effectFlags$pl.cultureInitiativeBonus)) return;\n\n  // +1 Karte ziehen (falls Deck nicht leer)\n  const drawn = state.decks[player].shift();\n  if (drawn) {\n    state.hands[player].push(drawn);\n    log(`ðŸ”¥ Ai Weiwei: +1 Karte gezogen (${drawn.name})`);\n  }\n\n  // +1 AP (mit Cap bei 4)\n  const before = state.actionPoints[player];\n  state.actionPoints[player] = before + 1;\n  if (before !== state.actionPoints[player]) {\n    log(`ðŸ”¥ Ai Weiwei: +1 AP (${before}â†’${state.actionPoints[player]})`);\n  }\n}","map":{"version":3,"names":["isInstantInitiative","other","p","recomputeAuraFlags","state","applyInstantInitiativeInfluenceMods","player","baseInfluence","card","_state$board$player","_state$board$opponent","influence","reasons","publicCards","board","innen","jenniferDoudna","find","kind","name","deactivated","push","anthonyFauci","opponent","opponentCards","noamChomsky","maybeApplyAiWeiweiInstantBonus","log","_state$effectFlags$pl","effectFlags","cultureInitiativeBonus","drawn","decks","shift","hands","before","actionPoints"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/state/effects.ts"],"sourcesContent":["import { GameState, Player, Card } from '../types/game';\r\nimport { isInstantInitiative } from '../utils/tags';\r\n\r\n// Helper: Spieler wechseln\r\nconst other = (p: Player): Player => (p === 1 ? 2 : 1) as Player;\r\n\r\nexport function recomputeAuraFlags(state: GameState) {\r\n  // Legacy aura flags removed - auras are now calculated on-demand via Board-Check\r\n  // No more direct flag mutations - everything is event-driven\r\n  \r\n  // Government refund is now handled via events in the card activation flow\r\n  // No need to pre-compute flags\r\n}\r\n\r\n/**\r\n * Wendet Einfluss-Modifikationen fÃ¼r Sofort-Initiativen an\r\n * Nur fÃ¼r Sofort-Initiativen, keine Topics/Tags\r\n */\r\nexport function applyInstantInitiativeInfluenceMods(\r\n  state: GameState,\r\n  player: Player,\r\n  baseInfluence: number,\r\n  card: Card\r\n): { influence: number; reasons: string[] } {\r\n  let influence = baseInfluence;\r\n  const reasons: string[] = [];\r\n\r\n  // Nur fÃ¼r Sofort-Initiativen\r\n  if (!isInstantInitiative(card)) {\r\n    return { influence, reasons };\r\n  }\r\n\r\n  // Aura effects are now calculated on-demand via Board-Check\r\n  // No more flag-based aura calculations - everything is event-driven\r\n  \r\n  const publicCards = state.board[player]?.innen || [];\r\n  \r\n  // Jennifer Doudna: +1 Einfluss (on-demand check)\r\n  const jenniferDoudna = publicCards.find(card => \r\n    card.kind === 'spec' && (card as any).name === 'Jennifer Doudna' && !(card as any).deactivated\r\n  );\r\n  if (jenniferDoudna) {\r\n    influence += 1;\r\n    reasons.push('Jennifer Doudna: +1 Einfluss');\r\n  }\r\n\r\n  // Anthony Fauci: +1 Einfluss (on-demand check)\r\n  const anthonyFauci = publicCards.find(card => \r\n    card.kind === 'spec' && (card as any).name === 'Anthony Fauci' && !(card as any).deactivated\r\n  );\r\n  if (anthonyFauci) {\r\n    influence += 1;\r\n    reasons.push('Anthony Fauci: +1 Einfluss');\r\n  }\r\n\r\n  // Noam Chomsky: -1 Einfluss (on-demand check for opponent)\r\n  const opponent = player === 1 ? 2 : 1;\r\n  const opponentCards = state.board[opponent]?.innen || [];\r\n  const noamChomsky = opponentCards.find(card => \r\n    card.kind === 'spec' && (card as any).name === 'Noam Chomsky' && !(card as any).deactivated\r\n  );\r\n  if (noamChomsky) {\r\n    influence -= 1;\r\n    reasons.push('Noam Chomsky: âˆ’1 Einfluss');\r\n  }\r\n\r\n  return { influence, reasons };\r\n}\r\n\r\n/**\r\n * Ai Weiwei: +1 Karte +1 AP bei jeder Sofort-Initiative (AP cap bei 4)\r\n */\r\nexport function maybeApplyAiWeiweiInstantBonus(\r\n  state: GameState,\r\n  player: Player,\r\n  card: Card,\r\n  log: (s: string) => void\r\n): void {\r\n  // Nur fÃ¼r Sofort-Initiativen\r\n  if (!isInstantInitiative(card)) return;\r\n\r\n  // Nur wenn Ai Weiwei in der Ã–ffentlichkeit ist\r\n  if (!state.effectFlags[player]?.cultureInitiativeBonus) return;\r\n\r\n  // +1 Karte ziehen (falls Deck nicht leer)\r\n  const drawn = state.decks[player].shift();\r\n  if (drawn) {\r\n    state.hands[player].push(drawn);\r\n    log(`ðŸ”¥ Ai Weiwei: +1 Karte gezogen (${drawn.name})`);\r\n  }\r\n\r\n  // +1 AP (mit Cap bei 4)\r\n  const before = state.actionPoints[player];\r\n  state.actionPoints[player] = before + 1;\r\n\r\n  if (before !== state.actionPoints[player]) {\r\n    log(`ðŸ”¥ Ai Weiwei: +1 AP (${before}â†’${state.actionPoints[player]})`);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}