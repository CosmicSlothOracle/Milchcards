{"ast":null,"code":"// src/debug/logger.ts\n// Lightweight debug logger that can be enabled via `localStorage.setItem('debug','1')`.\n// Use logger.dbg / info / warn / err instead of direct console.* in the codebase.\n\n/* eslint-disable no-console */\n\nconst isBrowser = typeof window !== 'undefined' && typeof localStorage !== 'undefined';\nfunction enabled() {\n  try {\n    if (!isBrowser) return false;\n    return localStorage.getItem('debug') === '1';\n  } catch {\n    return false;\n  }\n}\nfunction now() {\n  const d = new Date();\n  return d.toISOString().split('T')[1].replace('Z', '');\n}\nclass Logger {\n  log(level, message, ...args) {\n    if (!enabled() && level === 'DBG') return; // only show dbg if enabled\n    const prefix = `[${now()}] ${level}`;\n    switch (level) {\n      case 'DBG':\n        console.debug(prefix, message, ...args);\n        break;\n      case 'INF':\n        console.info(prefix, message, ...args);\n        break;\n      case 'WRN':\n        console.warn(prefix, message, ...args);\n        break;\n      case 'ERR':\n        console.error(prefix, message, ...args);\n        break;\n    }\n  }\n  dbg(message, ...args) {\n    this.log('DBG', message, ...args);\n  }\n  info(message, ...args) {\n    this.log('INF', message, ...args);\n  }\n  warn(message, ...args) {\n    this.log('WRN', message, ...args);\n  }\n  err(message, ...args) {\n    this.log('ERR', message, ...args);\n  }\n}\nexport const logger = new Logger();","map":{"version":3,"names":["isBrowser","window","localStorage","enabled","getItem","now","d","Date","toISOString","split","replace","Logger","log","level","message","args","prefix","console","debug","info","warn","error","dbg","err","logger"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/debug/logger.ts"],"sourcesContent":["// src/debug/logger.ts\r\n// Lightweight debug logger that can be enabled via `localStorage.setItem('debug','1')`.\r\n// Use logger.dbg / info / warn / err instead of direct console.* in the codebase.\r\n\r\n/* eslint-disable no-console */\r\n\r\nconst isBrowser = typeof window !== 'undefined' && typeof localStorage !== 'undefined';\r\n\r\nfunction enabled(): boolean {\r\n  try {\r\n    if (!isBrowser) return false;\r\n    return localStorage.getItem('debug') === '1';\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport type LogLevel = 'DBG' | 'INF' | 'WRN' | 'ERR';\r\n\r\nfunction now(): string {\r\n  const d = new Date();\r\n  return d.toISOString().split('T')[1]!.replace('Z', '');\r\n}\r\n\r\nclass Logger {\r\n  private log(level: LogLevel, message: string, ...args: unknown[]) {\r\n    if (!enabled() && level === 'DBG') return; // only show dbg if enabled\r\n    const prefix = `[${now()}] ${level}`;\r\n    switch (level) {\r\n      case 'DBG':\r\n        console.debug(prefix, message, ...args);\r\n        break;\r\n      case 'INF':\r\n        console.info(prefix, message, ...args);\r\n        break;\r\n      case 'WRN':\r\n        console.warn(prefix, message, ...args);\r\n        break;\r\n      case 'ERR':\r\n        console.error(prefix, message, ...args);\r\n        break;\r\n    }\r\n  }\r\n\r\n  dbg(message: string, ...args: unknown[]) {\r\n    this.log('DBG', message, ...args);\r\n  }\r\n  info(message: string, ...args: unknown[]) {\r\n    this.log('INF', message, ...args);\r\n  }\r\n  warn(message: string, ...args: unknown[]) {\r\n    this.log('WRN', message, ...args);\r\n  }\r\n  err(message: string, ...args: unknown[]) {\r\n    this.log('ERR', message, ...args);\r\n  }\r\n}\r\n\r\nexport const logger = new Logger();\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA,MAAMA,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOC,YAAY,KAAK,WAAW;AAEtF,SAASC,OAAOA,CAAA,EAAY;EAC1B,IAAI;IACF,IAAI,CAACH,SAAS,EAAE,OAAO,KAAK;IAC5B,OAAOE,YAAY,CAACE,OAAO,CAAC,OAAO,CAAC,KAAK,GAAG;EAC9C,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF;AAIA,SAASC,GAAGA,CAAA,EAAW;EACrB,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAAC,CAAC;EACpB,OAAOD,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAEC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;AACxD;AAEA,MAAMC,MAAM,CAAC;EACHC,GAAGA,CAACC,KAAe,EAAEC,OAAe,EAAE,GAAGC,IAAe,EAAE;IAChE,IAAI,CAACZ,OAAO,CAAC,CAAC,IAAIU,KAAK,KAAK,KAAK,EAAE,OAAO,CAAC;IAC3C,MAAMG,MAAM,GAAG,IAAIX,GAAG,CAAC,CAAC,KAAKQ,KAAK,EAAE;IACpC,QAAQA,KAAK;MACX,KAAK,KAAK;QACRI,OAAO,CAACC,KAAK,CAACF,MAAM,EAAEF,OAAO,EAAE,GAAGC,IAAI,CAAC;QACvC;MACF,KAAK,KAAK;QACRE,OAAO,CAACE,IAAI,CAACH,MAAM,EAAEF,OAAO,EAAE,GAAGC,IAAI,CAAC;QACtC;MACF,KAAK,KAAK;QACRE,OAAO,CAACG,IAAI,CAACJ,MAAM,EAAEF,OAAO,EAAE,GAAGC,IAAI,CAAC;QACtC;MACF,KAAK,KAAK;QACRE,OAAO,CAACI,KAAK,CAACL,MAAM,EAAEF,OAAO,EAAE,GAAGC,IAAI,CAAC;QACvC;IACJ;EACF;EAEAO,GAAGA,CAACR,OAAe,EAAE,GAAGC,IAAe,EAAE;IACvC,IAAI,CAACH,GAAG,CAAC,KAAK,EAAEE,OAAO,EAAE,GAAGC,IAAI,CAAC;EACnC;EACAI,IAAIA,CAACL,OAAe,EAAE,GAAGC,IAAe,EAAE;IACxC,IAAI,CAACH,GAAG,CAAC,KAAK,EAAEE,OAAO,EAAE,GAAGC,IAAI,CAAC;EACnC;EACAK,IAAIA,CAACN,OAAe,EAAE,GAAGC,IAAe,EAAE;IACxC,IAAI,CAACH,GAAG,CAAC,KAAK,EAAEE,OAAO,EAAE,GAAGC,IAAI,CAAC;EACnC;EACAQ,GAAGA,CAACT,OAAe,EAAE,GAAGC,IAAe,EAAE;IACvC,IAAI,CAACH,GAAG,CAAC,KAAK,EAAEE,OAAO,EAAE,GAAGC,IAAI,CAAC;EACnC;AACF;AAEA,OAAO,MAAMS,MAAM,GAAG,IAAIb,MAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}