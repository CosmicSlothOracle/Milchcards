{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skank\\\\Videos\\\\Cards\\\\Milchcards\\\\src\\\\ui\\\\Icon.tsx\";\nimport React from 'react';\nimport iconManifest from '../assets/icons/manifest.json';\n\n// Dynamic icon imports based on manifest\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconImports = {};\n\n// Import all icons dynamically\nObject.keys(iconManifest).forEach(iconName => {\n  try {\n    // Convert kebab-case to camelCase for import\n    const importName = iconName.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n    const iconModule = require(`../assets/icons/${iconName}.svg`);\n    iconImports[iconName] = iconModule.ReactComponent || iconModule.default;\n  } catch (error) {\n    console.warn(`Failed to import icon: ${iconName}`, error);\n  }\n});\n\n// Fallback component for missing icons\nconst IconFallback = ({\n  width = 16,\n  height = 16,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: width,\n  height: height,\n  viewBox: \"0 0 24 24\",\n  fill: \"currentColor\",\n  ...props,\n  children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n    width: \"24\",\n    height: \"24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    opacity: \"0.3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"12\",\n    y: \"16\",\n    textAnchor: \"middle\",\n    fontSize: \"12\",\n    fill: \"currentColor\",\n    children: \"?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n\n// Type-safe icon names\n_c = IconFallback;\nexport function Icon({\n  name,\n  size = 16,\n  className,\n  title,\n  ...rest\n}) {\n  const IconComponent = iconImports[name] || IconFallback;\n  return /*#__PURE__*/_jsxDEV(IconComponent, {\n    width: size,\n    height: size,\n    \"aria-label\": title || name,\n    className: className,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n// Export available icon names for debugging\n_c2 = Icon;\nexport const availableIcons = Object.keys(iconManifest);\nvar _c, _c2;\n$RefreshReg$(_c, \"IconFallback\");\n$RefreshReg$(_c2, \"Icon\");","map":{"version":3,"names":["React","iconManifest","jsxDEV","_jsxDEV","iconImports","Object","keys","forEach","iconName","importName","replace","_","letter","toUpperCase","iconModule","require","ReactComponent","default","error","console","warn","IconFallback","width","height","props","viewBox","fill","children","stroke","strokeWidth","opacity","fileName","_jsxFileName","lineNumber","columnNumber","x","y","textAnchor","fontSize","_c","Icon","name","size","className","title","rest","IconComponent","_c2","availableIcons","$RefreshReg$"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/ui/Icon.tsx"],"sourcesContent":["import React from 'react';\r\nimport iconManifest from '../assets/icons/manifest.json';\r\n\r\n// Dynamic icon imports based on manifest\r\nconst iconImports: Record<string, React.ComponentType<React.SVGProps<SVGSVGElement>>> = {};\r\n\r\n// Import all icons dynamically\r\nObject.keys(iconManifest).forEach(iconName => {\r\n  try {\r\n    // Convert kebab-case to camelCase for import\r\n    const importName = iconName.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\r\n    const iconModule = require(`../assets/icons/${iconName}.svg`);\r\n    iconImports[iconName] = iconModule.ReactComponent || iconModule.default;\r\n  } catch (error) {\r\n    console.warn(`Failed to import icon: ${iconName}`, error);\r\n  }\r\n});\r\n\r\n// Fallback component for missing icons\r\nconst IconFallback: React.FC<React.SVGProps<SVGSVGElement>> = ({ width = 16, height = 16, ...props }) => (\r\n  <svg \r\n    width={width} \r\n    height={height} \r\n    viewBox=\"0 0 24 24\" \r\n    fill=\"currentColor\"\r\n    {...props}\r\n  >\r\n    <rect width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" opacity=\"0.3\"/>\r\n    <text x=\"12\" y=\"16\" textAnchor=\"middle\" fontSize=\"12\" fill=\"currentColor\">?</text>\r\n  </svg>\r\n);\r\n\r\n// Type-safe icon names\r\nexport type IconName = keyof typeof iconManifest;\r\n\r\nexport function Icon({\r\n  name,\r\n  size = 16,\r\n  className,\r\n  title,\r\n  ...rest\r\n}: {\r\n  name: IconName;\r\n  size?: number;\r\n  className?: string;\r\n  title?: string;\r\n} & React.SVGProps<SVGSVGElement>) {\r\n  const IconComponent = iconImports[name] || IconFallback;\r\n  \r\n  return (\r\n    <IconComponent \r\n      width={size} \r\n      height={size} \r\n      aria-label={title || name} \r\n      className={className} \r\n      {...rest} \r\n    />\r\n  );\r\n}\r\n\r\n// Export available icon names for debugging\r\nexport const availableIcons = Object.keys(iconManifest);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,+BAA+B;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAA+E,GAAG,CAAC,CAAC;;AAE1F;AACAC,MAAM,CAACC,IAAI,CAACL,YAAY,CAAC,CAACM,OAAO,CAACC,QAAQ,IAAI;EAC5C,IAAI;IACF;IACA,MAAMC,UAAU,GAAGD,QAAQ,CAACE,OAAO,CAAC,WAAW,EAAE,CAACC,CAAC,EAAEC,MAAM,KAAKA,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;IACrF,MAAMC,UAAU,GAAGC,OAAO,CAAC,mBAAmBP,QAAQ,MAAM,CAAC;IAC7DJ,WAAW,CAACI,QAAQ,CAAC,GAAGM,UAAU,CAACE,cAAc,IAAIF,UAAU,CAACG,OAAO;EACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,IAAI,CAAC,0BAA0BZ,QAAQ,EAAE,EAAEU,KAAK,CAAC;EAC3D;AACF,CAAC,CAAC;;AAEF;AACA,MAAMG,YAAqD,GAAGA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC,MAAM,GAAG,EAAE;EAAE,GAAGC;AAAM,CAAC,kBAClGrB,OAAA;EACEmB,KAAK,EAAEA,KAAM;EACbC,MAAM,EAAEA,MAAO;EACfE,OAAO,EAAC,WAAW;EACnBC,IAAI,EAAC,cAAc;EAAA,GACfF,KAAK;EAAAG,QAAA,gBAETxB,OAAA;IAAMmB,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAACG,IAAI,EAAC,MAAM;IAACE,MAAM,EAAC,cAAc;IAACC,WAAW,EAAC,GAAG;IAACC,OAAO,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,eAC9F/B,OAAA;IAAMgC,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACC,UAAU,EAAC,QAAQ;IAACC,QAAQ,EAAC,IAAI;IAACZ,IAAI,EAAC,cAAc;IAAAC,QAAA,EAAC;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC/E,CACN;;AAED;AAAAK,EAAA,GAbMlB,YAAqD;AAgB3D,OAAO,SAASmB,IAAIA,CAAC;EACnBC,IAAI;EACJC,IAAI,GAAG,EAAE;EACTC,SAAS;EACTC,KAAK;EACL,GAAGC;AAM2B,CAAC,EAAE;EACjC,MAAMC,aAAa,GAAG1C,WAAW,CAACqC,IAAI,CAAC,IAAIpB,YAAY;EAEvD,oBACElB,OAAA,CAAC2C,aAAa;IACZxB,KAAK,EAAEoB,IAAK;IACZnB,MAAM,EAAEmB,IAAK;IACb,cAAYE,KAAK,IAAIH,IAAK;IAC1BE,SAAS,EAAEA,SAAU;IAAA,GACjBE;EAAI;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEN;;AAEA;AAAAa,GAAA,GAzBgBP,IAAI;AA0BpB,OAAO,MAAMQ,cAAc,GAAG3C,MAAM,CAACC,IAAI,CAACL,YAAY,CAAC;AAAC,IAAAsC,EAAA,EAAAQ,GAAA;AAAAE,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}