{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skank\\\\Videos\\\\Cards\\\\Milchcards\\\\src\\\\components\\\\QTEFrame.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Simple wrapper that shows the standalone QTE HTML inside an iframe.\n// The QTE assets must live under the public/qte directory so that the\n// iframe can request them without additional build configuration.\n// TODO: if you relocate assets elsewhere, adjust the src accordingly.\nconst QTEFrame = ({\n  onBack\n}) => {\n  const src = process.env.PUBLIC_URL + '/qte/standalone_canvas_2_player_beatem_up_html.html';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      inset: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      background: '#0b0f14'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px',\n        display: 'flex',\n        gap: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        style: {\n          background: '#3b82f6',\n          color: 'white',\n          border: 'none',\n          padding: '6px 10px',\n          borderRadius: '6px',\n          fontSize: '12px',\n          fontWeight: 600,\n          cursor: 'pointer'\n        },\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"QTE Mini Game\",\n      src: src,\n      style: {\n        flex: 1,\n        border: 'none'\n      },\n      sandbox: \"allow-scripts allow-pointer-lock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = QTEFrame;\nexport default QTEFrame;\nvar _c;\n$RefreshReg$(_c, \"QTEFrame\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","QTEFrame","onBack","src","process","env","PUBLIC_URL","style","position","inset","display","flexDirection","background","children","padding","gap","onClick","color","border","borderRadius","fontSize","fontWeight","cursor","fileName","_jsxFileName","lineNumber","columnNumber","title","flex","sandbox","_c","$RefreshReg$"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/QTEFrame.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport interface QTEFrameProps {\r\n  onBack?: () => void;\r\n}\r\n\r\n// Simple wrapper that shows the standalone QTE HTML inside an iframe.\r\n// The QTE assets must live under the public/qte directory so that the\r\n// iframe can request them without additional build configuration.\r\n// TODO: if you relocate assets elsewhere, adjust the src accordingly.\r\nconst QTEFrame: React.FC<QTEFrameProps> = ({ onBack }) => {\r\n  const src = process.env.PUBLIC_URL + '/qte/standalone_canvas_2_player_beatem_up_html.html';\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        inset: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        background: '#0b0f14',\r\n      }}\r\n    >\r\n      <div style={{ padding: '8px', display: 'flex', gap: '8px' }}>\r\n        <button\r\n          onClick={onBack}\r\n          style={{\r\n            background: '#3b82f6',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '6px 10px',\r\n            borderRadius: '6px',\r\n            fontSize: '12px',\r\n            fontWeight: 600,\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          ‚Üê Back\r\n        </button>\r\n      </div>\r\n      <iframe\r\n        title=\"QTE Mini Game\"\r\n        src={src}\r\n        style={{ flex: 1, border: 'none' }}\r\n        sandbox=\"allow-scripts allow-pointer-lock\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QTEFrame;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B;AACA;AACA;AACA;AACA,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACxD,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,qDAAqD;EAC1F,oBACEN,OAAA;IACEO,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,gBAEFb,OAAA;MAAKO,KAAK,EAAE;QAAEO,OAAO,EAAE,KAAK;QAAEJ,OAAO,EAAE,MAAM;QAAEK,GAAG,EAAE;MAAM,CAAE;MAAAF,QAAA,eAC1Db,OAAA;QACEgB,OAAO,EAAEd,MAAO;QAChBK,KAAK,EAAE;UACLK,UAAU,EAAE,SAAS;UACrBK,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,MAAM;UACdJ,OAAO,EAAE,UAAU;UACnBK,YAAY,EAAE,KAAK;UACnBC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,GAAG;UACfC,MAAM,EAAE;QACV,CAAE;QAAAT,QAAA,EACH;MAED;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN1B,OAAA;MACE2B,KAAK,EAAC,eAAe;MACrBxB,GAAG,EAAEA,GAAI;MACTI,KAAK,EAAE;QAAEqB,IAAI,EAAE,CAAC;QAAEV,MAAM,EAAE;MAAO,CAAE;MACnCW,OAAO,EAAC;IAAkC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACI,EAAA,GArCI7B,QAAiC;AAuCvC,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}