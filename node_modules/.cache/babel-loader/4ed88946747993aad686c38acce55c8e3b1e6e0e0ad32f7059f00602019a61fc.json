{"ast":null,"code":"/**\r\n * Utility: extract frame count from filename pattern *_XX.png.\r\n */\nfunction defaultFramesFromFilename(src, fallback) {\n  try {\n    const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);\n    const n = m ? parseInt(m[1], 10) : NaN;\n    return Number.isFinite(n) ? n : fallback;\n  } catch {\n    return fallback;\n  }\n}\n\n/**\r\n * SpriteAnimator – verwaltet Frame-basierte Sprite-Sheet-Animationen.\r\n *  ‑ Jede Animation liegt in einer PNG-Reihe (Frames horizontal).\r\n *  ‑ draw(ctx, x, y, w, h) rendert den aktuellen Frame.\r\n */\nexport class SpriteAnimator {\n  constructor(defaultImage, frameW, frameH, animations = {}) {\n    this.defaultImage = void 0;\n    this.frameW = void 0;\n    this.frameH = void 0;\n    this.animations = void 0;\n    this.state = \"idle\";\n    this.frame = 0;\n    this.acc = 0;\n    // Sekunden-Accumulator\n    this.fps = 12;\n    this.loop = true;\n    this.defaultImage = defaultImage;\n    this.frameW = frameW;\n    this.frameH = frameH;\n    // Merge defaults\n    this.animations = {};\n    for (const key of Object.keys(animations)) {\n      var _a$frames, _a$fps, _a$loop, _a$frameW, _a$frameH;\n      const a = animations[key];\n      const full = {\n        src: a.src || \"\",\n        frames: (_a$frames = a.frames) !== null && _a$frames !== void 0 ? _a$frames : defaultFramesFromFilename(a.src || \"\", 1),\n        fps: (_a$fps = a.fps) !== null && _a$fps !== void 0 ? _a$fps : 12,\n        loop: (_a$loop = a.loop) !== null && _a$loop !== void 0 ? _a$loop : true,\n        frameW: (_a$frameW = a.frameW) !== null && _a$frameW !== void 0 ? _a$frameW : frameW,\n        frameH: (_a$frameH = a.frameH) !== null && _a$frameH !== void 0 ? _a$frameH : frameH\n      };\n      // Preload image (optional)\n      if (full.src) {\n        const img = new Image();\n        full.image = img;\n        full.imageLoaded = false;\n        full.imageBroken = false;\n        img.onload = () => full.imageLoaded = true;\n        img.onerror = () => full.imageBroken = true;\n        img.src = full.src;\n      }\n      this.animations[key] = full;\n    }\n  }\n  setState(state) {\n    if (this.state === state) return;\n    this.state = state;\n    this.frame = 0;\n    this.acc = 0;\n    const a = this.animations[state];\n    if (a) {\n      this.fps = a.fps;\n      this.loop = a.loop;\n    }\n  }\n\n  /**\r\n   * Fixed-timestep Update.\r\n   * @param dt Delta-Zeit in Sekunden\r\n   */\n  update(dt) {\n    const a = this.animations[this.state];\n    if (!a) return;\n    this.acc += dt;\n    const frameTime = 1 / (a.fps || this.fps);\n    while (this.acc >= frameTime) {\n      this.acc -= frameTime;\n      this.frame++;\n      if (this.frame >= a.frames) {\n        if (a.loop) this.frame = 0;else this.frame = a.frames - 1;\n      }\n    }\n  }\n\n  /**\r\n   * Rendert aktuellen Frame.\r\n   */\n  draw(ctx, x, y, w, h, flip = false) {\n    const a = this.animations[this.state];\n    const img = a && a.image || this.defaultImage;\n    if (!a || !img || a.imageBroken || !img.complete) {\n      // Fallback: graue Box\n      ctx.fillStyle = \"#666\";\n      ctx.fillRect(x, y, w, h);\n      return;\n    }\n    const sx = this.frame * (a.frameW || this.frameW);\n    ctx.save();\n    if (flip) {\n      ctx.translate(x + w, 0);\n      ctx.scale(-1, 1);\n      x = 0;\n    }\n    ctx.drawImage(img, sx, 0, a.frameW, a.frameH, x, y, w, h);\n    ctx.restore();\n  }\n}","map":{"version":3,"names":["defaultFramesFromFilename","src","fallback","m","exec","n","parseInt","NaN","Number","isFinite","SpriteAnimator","constructor","defaultImage","frameW","frameH","animations","state","frame","acc","fps","loop","key","Object","keys","_a$frames","_a$fps","_a$loop","_a$frameW","_a$frameH","a","full","frames","img","Image","image","imageLoaded","imageBroken","onload","onerror","setState","update","dt","frameTime","draw","ctx","x","y","w","h","flip","complete","fillStyle","fillRect","sx","save","translate","scale","drawImage","restore"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/qte/spriteAnimator.ts"],"sourcesContent":["export interface AnimationDef {\r\n  src: string;\r\n  frames: number;\r\n  fps: number;\r\n  loop: boolean;\r\n  frameW: number;\r\n  frameH: number;\r\n  image?: HTMLImageElement;\r\n  imageLoaded?: boolean;\r\n  imageBroken?: boolean;\r\n}\r\n\r\n/**\r\n * Utility: extract frame count from filename pattern *_XX.png.\r\n */\r\nfunction defaultFramesFromFilename(src: string, fallback: number): number {\r\n  try {\r\n    const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);\r\n    const n = m ? parseInt(m[1], 10) : NaN;\r\n    return Number.isFinite(n) ? n : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n}\r\n\r\n/**\r\n * SpriteAnimator – verwaltet Frame-basierte Sprite-Sheet-Animationen.\r\n *  ‑ Jede Animation liegt in einer PNG-Reihe (Frames horizontal).\r\n *  ‑ draw(ctx, x, y, w, h) rendert den aktuellen Frame.\r\n */\r\nexport class SpriteAnimator {\r\n  private defaultImage: HTMLImageElement | null;\r\n  private frameW: number;\r\n  private frameH: number;\r\n  public animations: Record<string, AnimationDef>;\r\n  public state: string = \"idle\";\r\n  public frame = 0;\r\n  private acc = 0; // Sekunden-Accumulator\r\n  private fps = 12;\r\n  private loop = true;\r\n\r\n  constructor(\r\n    defaultImage: HTMLImageElement | null,\r\n    frameW: number,\r\n    frameH: number,\r\n    animations: Record<string, Partial<AnimationDef>> = {}\r\n  ) {\r\n    this.defaultImage = defaultImage;\r\n    this.frameW = frameW;\r\n    this.frameH = frameH;\r\n    // Merge defaults\r\n    this.animations = {};\r\n    for (const key of Object.keys(animations)) {\r\n      const a = animations[key];\r\n      const full: AnimationDef = {\r\n        src: a.src || \"\",\r\n        frames: a.frames ?? defaultFramesFromFilename(a.src || \"\", 1),\r\n        fps: a.fps ?? 12,\r\n        loop: a.loop ?? true,\r\n        frameW: a.frameW ?? frameW,\r\n        frameH: a.frameH ?? frameH,\r\n      } as AnimationDef;\r\n      // Preload image (optional)\r\n      if (full.src) {\r\n        const img = new Image();\r\n        full.image = img;\r\n        full.imageLoaded = false;\r\n        full.imageBroken = false;\r\n        img.onload = () => (full.imageLoaded = true);\r\n        img.onerror = () => (full.imageBroken = true);\r\n        img.src = full.src;\r\n      }\r\n      this.animations[key] = full;\r\n    }\r\n  }\r\n\r\n  setState(state: string) {\r\n    if (this.state === state) return;\r\n    this.state = state;\r\n    this.frame = 0;\r\n    this.acc = 0;\r\n    const a = this.animations[state];\r\n    if (a) {\r\n      this.fps = a.fps;\r\n      this.loop = a.loop;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fixed-timestep Update.\r\n   * @param dt Delta-Zeit in Sekunden\r\n   */\r\n  update(dt: number) {\r\n    const a = this.animations[this.state];\r\n    if (!a) return;\r\n    this.acc += dt;\r\n    const frameTime = 1 / (a.fps || this.fps);\r\n    while (this.acc >= frameTime) {\r\n      this.acc -= frameTime;\r\n      this.frame++;\r\n      if (this.frame >= a.frames) {\r\n        if (a.loop) this.frame = 0;\r\n        else this.frame = a.frames - 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rendert aktuellen Frame.\r\n   */\r\n  draw(\r\n    ctx: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n    flip = false\r\n  ) {\r\n    const a = this.animations[this.state];\r\n    const img = (a && a.image) || this.defaultImage;\r\n    if (!a || !img || a.imageBroken || !img.complete) {\r\n      // Fallback: graue Box\r\n      ctx.fillStyle = \"#666\";\r\n      ctx.fillRect(x, y, w, h);\r\n      return;\r\n    }\r\n    const sx = this.frame * (a.frameW || this.frameW);\r\n    ctx.save();\r\n    if (flip) {\r\n      ctx.translate(x + w, 0);\r\n      ctx.scale(-1, 1);\r\n      x = 0;\r\n    }\r\n    ctx.drawImage(img, sx, 0, a.frameW, a.frameH, x, y, w, h);\r\n    ctx.restore();\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}