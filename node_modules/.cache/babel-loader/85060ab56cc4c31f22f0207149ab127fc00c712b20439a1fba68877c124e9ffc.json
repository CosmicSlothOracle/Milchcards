{"ast":null,"code":"import React,{useEffect,useRef,useImperativeHandle,forwardRef}from'react';import*as THREE from'three';import{gsap}from'gsap';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * Dice3D – simple WebGL dice rendered with three.js\n * Usage:\n *   const diceRef = useRef<Dice3DHandle>(null);\n *   <Dice3D ref={diceRef} onRoll={(f)=>console.log(f)}/>\n *   diceRef.current?.roll();\n */const Dice3D=/*#__PURE__*/forwardRef((_ref,ref)=>{let{size=180,duration=1200,onRoll,className}=_ref;const canvasRef=useRef(null);const sceneRef=useRef();const cubeRef=useRef();const rendererRef=useRef();const cameraRef=useRef();const animIdRef=useRef(0);/** helper to create a texture with pips */const createFaceTexture=face=>{const size=128;const cvs=document.createElement('canvas');cvs.width=cvs.height=size;const ctx=cvs.getContext('2d');ctx.fillStyle='#fff';ctx.fillRect(0,0,size,size);ctx.fillStyle='#111';const dot=(x,y)=>{ctx.beginPath();ctx.arc(x,y,size*0.1,0,Math.PI*2);ctx.fill();};const g=size*0.25;const centers={1:[[size/2,size/2]],2:[[g,g],[size-g,size-g]],3:[[g,g],[size/2,size/2],[size-g,size-g]],4:[[g,g],[size-g,g],[g,size-g],[size-g,size-g]],5:[[g,g],[size-g,g],[size/2,size/2],[g,size-g],[size-g,size-g]],6:[[g,g],[size-g,g],[g,size/2],[size-g,size/2],[g,size-g],[size-g,size-g]]};centers[face].forEach(_ref2=>{let[x,y]=_ref2;return dot(x,y);});const tex=new THREE.CanvasTexture(cvs);tex.needsUpdate=true;return tex;};// initialize three scene\nuseEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const scene=new THREE.Scene();scene.background=new THREE.Color(0x000000);const camera=new THREE.PerspectiveCamera(45,1,0.1,1000);camera.position.z=4;const renderer=new THREE.WebGLRenderer({canvas,antialias:true,alpha:true});renderer.setSize(size,size);renderer.shadowMap.enabled=true;renderer.shadowMap.type=THREE.PCFSoftShadowMap;// lights\nconst ambient=new THREE.AmbientLight(0xffffff,0.6);scene.add(ambient);const dir=new THREE.DirectionalLight(0xffffff,1.0);dir.position.set(5,10,7);dir.castShadow=true;dir.shadow.mapSize.width=1024;dir.shadow.mapSize.height=1024;dir.shadow.camera.left=-5;dir.shadow.camera.right=5;dir.shadow.camera.top=5;dir.shadow.camera.bottom=-5;scene.add(dir);// ground plane to receive shadow\nconst planeGeo=new THREE.PlaneGeometry(10,10);const planeMat=new THREE.ShadowMaterial({opacity:0.35});const plane=new THREE.Mesh(planeGeo,planeMat);plane.rotation.x=-Math.PI/2;plane.position.y=-1.1;plane.receiveShadow=true;scene.add(plane);// cube\nconst materials=[1,2,3,4,5,6].map(f=>new THREE.MeshStandardMaterial({map:createFaceTexture(f),metalness:0.1,roughness:0.6}));const geometry=new THREE.BoxGeometry(2,2,2);const cube=new THREE.Mesh(geometry,materials);cube.castShadow=true;cube.receiveShadow=false;scene.add(cube);sceneRef.current=scene;cubeRef.current=cube;rendererRef.current=renderer;cameraRef.current=camera;// animation loop\nconst animate=()=>{animIdRef.current=requestAnimationFrame(animate);// subtle idle rotate\nif(cube){cube.rotation.x*=0.995;cube.rotation.y*=0.995;}renderer.render(scene,camera);};animate();return()=>{cancelAnimationFrame(animIdRef.current);renderer.dispose();};},[size]);// roll logic (includes DOM motion)\nconst rollInternal=targetFace=>{if(!cubeRef.current)return;const cube=cubeRef.current;// pick target if not provided\nconst face=targetFace!==null&&targetFace!==void 0?targetFace:1+Math.floor(Math.random()*6);// orientation map: face -> Euler rotation (approx)\nconst orientations={1:[0,0,0],2:[0,Math.PI/2,0],3:[-Math.PI/2,0,0],4:[Math.PI/2,0,0],5:[0,-Math.PI/2,0],6:[Math.PI,0,0]};const[tx,ty,tz]=orientations[face];const start={x:cube.rotation.x,y:cube.rotation.y,z:cube.rotation.z};const end={x:tx+2*Math.PI,y:ty+2*Math.PI,z:tz+2*Math.PI};// Use GSAP timeline for smooth rotation + bounces and DOM motion\nconst timeline=gsap.timeline({onComplete:()=>{cube.rotation.set(tx,ty,tz);if(onRoll)onRoll(face);}});// random screen path\nconst canvasEl=canvasRef.current;if(canvasEl&&canvasEl.style){canvasEl.style.position='fixed';canvasEl.style.left='0px';canvasEl.style.top='0px';canvasEl.style.willChange='transform';// pick random path points\nconst startX=Math.random()*(window.innerWidth-size);const startY=Math.random()*(window.innerHeight-size);const midX=Math.random()*(window.innerWidth-size);const midY=Math.random()*(window.innerHeight-size);const endX=Math.random()*(window.innerWidth-size);const endY=Math.random()*(window.innerHeight-size);timeline.to({},{duration:0.01});// tiny offset\ntimeline.to(canvasEl,{duration:duration/1000,x:endX,y:endY,ease:'power2.inOut'},0);}// rotation: spin multiple revolutions then ease to final orientation\n// we'll use a GSAP ticker to update cube.rotation\nconst totalSpins=3+Math.floor(Math.random()*4);const rotEnd={x:end.x,y:end.y,z:end.z};const rotStart={x:start.x,y:start.y,z:start.z};// animate rotation using timeline with an onUpdate that writes to cube\nlet progress={t:0};timeline.to(progress,{t:1,duration:duration/1000,ease:'power3.out',onUpdate:()=>{const k=progress.t;// combine ease with extra spins\nconst spinFactor=1-Math.pow(1-k,3);const currentX=rotStart.x+(rotEnd.x-rotStart.x)*k+totalSpins*Math.PI*2*(1-(1-k));const currentY=rotStart.y+(rotEnd.y-rotStart.y)*k+totalSpins*Math.PI*2*(1-(1-k));const currentZ=rotStart.z+(rotEnd.z-rotStart.z)*k+totalSpins*Math.PI*2*(1-(1-k));cube.rotation.set(currentX,currentY,currentZ);}});// small bounce sequence on completion (scale + tilt)\ntimeline.to(cube.scale,{x:1.06,y:0.94,z:0.94,duration:0.08,yoyo:true,repeat:1,ease:'power2.out'},'>-0.1');timeline.to(cube.scale,{x:0.97,y:1.03,z:0.97,duration:0.06,yoyo:true,repeat:1,ease:'power2.out'});timeline.to(cube.scale,{x:1,y:1,z:1,duration:0.05,ease:'power2.out'});};useImperativeHandle(ref,()=>({roll:()=>rollInternal(),rollTo:face=>rollInternal(Math.max(1,Math.min(6,face)))}),[duration,onRoll]);// click to roll\nuseEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const handler=()=>rollInternal();canvas.addEventListener('click',handler);return()=>canvas.removeEventListener('click',handler);},[]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:size,height:size,className:className,style:{cursor:'pointer'}});});export default Dice3D;","map":{"version":3,"names":["React","useEffect","useRef","useImperativeHandle","forwardRef","THREE","gsap","jsx","_jsx","Dice3D","_ref","ref","size","duration","onRoll","className","canvasRef","sceneRef","cubeRef","rendererRef","cameraRef","animIdRef","createFaceTexture","face","cvs","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","dot","x","y","beginPath","arc","Math","PI","fill","g","centers","forEach","_ref2","tex","CanvasTexture","needsUpdate","canvas","current","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","shadowMap","enabled","type","PCFSoftShadowMap","ambient","AmbientLight","add","dir","DirectionalLight","set","castShadow","shadow","mapSize","left","right","top","bottom","planeGeo","PlaneGeometry","planeMat","ShadowMaterial","opacity","plane","Mesh","rotation","receiveShadow","materials","map","f","MeshStandardMaterial","metalness","roughness","geometry","BoxGeometry","cube","animate","requestAnimationFrame","render","cancelAnimationFrame","dispose","rollInternal","targetFace","floor","random","orientations","tx","ty","tz","start","end","timeline","onComplete","canvasEl","style","willChange","startX","window","innerWidth","startY","innerHeight","midX","midY","endX","endY","to","ease","totalSpins","rotEnd","rotStart","progress","t","onUpdate","k","spinFactor","pow","currentX","currentY","currentZ","scale","yoyo","repeat","roll","rollTo","max","min","handler","addEventListener","removeEventListener","cursor"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/Dice3D.tsx"],"sourcesContent":["import React, { useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\nimport * as THREE from 'three';\nimport { gsap } from 'gsap';\n\nexport interface Dice3DProps {\n  /** pixel size of canvas */\n  size?: number;\n  /** roll animation duration in ms */\n  duration?: number;\n  /** callback when roll ends */\n  onRoll?: (face: number) => void;\n  className?: string;\n}\n\nexport interface Dice3DHandle {\n  roll: () => void;\n  rollTo: (face: number) => void;\n}\n\n/**\n * Dice3D – simple WebGL dice rendered with three.js\n * Usage:\n *   const diceRef = useRef<Dice3DHandle>(null);\n *   <Dice3D ref={diceRef} onRoll={(f)=>console.log(f)}/>\n *   diceRef.current?.roll();\n */\nconst Dice3D = forwardRef<Dice3DHandle, Dice3DProps>(\n  ({ size = 180, duration = 1200, onRoll, className }: Dice3DProps, ref) => {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    const sceneRef = useRef<THREE.Scene>();\n    const cubeRef = useRef<THREE.Mesh>();\n    const rendererRef = useRef<THREE.WebGLRenderer>();\n    const cameraRef = useRef<THREE.PerspectiveCamera>();\n    const animIdRef = useRef(0);\n\n    /** helper to create a texture with pips */\n    const createFaceTexture = (face: number): THREE.Texture => {\n      const size = 128;\n      const cvs = document.createElement('canvas');\n      cvs.width = cvs.height = size;\n      const ctx = cvs.getContext('2d')!;\n      ctx.fillStyle = '#fff';\n      ctx.fillRect(0, 0, size, size);\n      ctx.fillStyle = '#111';\n\n      const dot = (x: number, y: number) => {\n        ctx.beginPath();\n        ctx.arc(x, y, size * 0.1, 0, Math.PI * 2);\n        ctx.fill();\n      };\n      const g = size * 0.25;\n      const centers: Record<number, Array<[number, number]>> = {\n        1: [[size / 2, size / 2]],\n        2: [[g, g], [size - g, size - g]],\n        3: [[g, g], [size / 2, size / 2], [size - g, size - g]],\n        4: [[g, g], [size - g, g], [g, size - g], [size - g, size - g]],\n        5: [[g, g], [size - g, g], [size / 2, size / 2], [g, size - g], [size - g, size - g]],\n        6: [[g, g], [size - g, g], [g, size / 2], [size - g, size / 2], [g, size - g], [size - g, size - g]],\n      };\n      centers[face].forEach(([x, y]) => dot(x, y));\n      const tex = new THREE.CanvasTexture(cvs);\n      tex.needsUpdate = true;\n      return tex;\n    };\n\n    // initialize three scene\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const scene = new THREE.Scene();\n      scene.background = new THREE.Color(0x000000);\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\n      camera.position.z = 4;\n      const renderer = new THREE.WebGLRenderer({ canvas, antialias: true, alpha: true });\n      renderer.setSize(size, size);\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n      // lights\n      const ambient = new THREE.AmbientLight(0xffffff, 0.6);\n      scene.add(ambient);\n      const dir = new THREE.DirectionalLight(0xffffff, 1.0);\n      dir.position.set(5, 10, 7);\n      dir.castShadow = true;\n      dir.shadow.mapSize.width = 1024;\n      dir.shadow.mapSize.height = 1024;\n      dir.shadow.camera.left = -5;\n      dir.shadow.camera.right = 5;\n      dir.shadow.camera.top = 5;\n      dir.shadow.camera.bottom = -5;\n      scene.add(dir);\n\n      // ground plane to receive shadow\n      const planeGeo = new THREE.PlaneGeometry(10, 10);\n      const planeMat = new THREE.ShadowMaterial({ opacity: 0.35 });\n      const plane = new THREE.Mesh(planeGeo, planeMat);\n      plane.rotation.x = -Math.PI / 2;\n      plane.position.y = -1.1;\n      plane.receiveShadow = true;\n      scene.add(plane);\n\n      // cube\n      const materials = [1, 2, 3, 4, 5, 6].map(f => new THREE.MeshStandardMaterial({ map: createFaceTexture(f), metalness: 0.1, roughness: 0.6 }));\n      const geometry = new THREE.BoxGeometry(2, 2, 2);\n      const cube = new THREE.Mesh(geometry, materials);\n      cube.castShadow = true;\n      cube.receiveShadow = false;\n      scene.add(cube);\n\n      sceneRef.current = scene;\n      cubeRef.current = cube;\n      rendererRef.current = renderer;\n      cameraRef.current = camera;\n\n      // animation loop\n      const animate = () => {\n        animIdRef.current = requestAnimationFrame(animate);\n        // subtle idle rotate\n        if (cube) {\n          cube.rotation.x *= 0.995;\n          cube.rotation.y *= 0.995;\n        }\n        renderer.render(scene, camera);\n      };\n      animate();\n\n      return () => {\n        cancelAnimationFrame(animIdRef.current);\n        renderer.dispose();\n      };\n    }, [size]);\n\n    // roll logic (includes DOM motion)\n    const rollInternal = (targetFace?: number) => {\n      if (!cubeRef.current) return;\n      const cube = cubeRef.current;\n      // pick target if not provided\n      const face = targetFace ?? (1 + Math.floor(Math.random() * 6));\n\n      // orientation map: face -> Euler rotation (approx)\n      const orientations: Record<number, [number, number, number]> = {\n        1: [0, 0, 0],\n        2: [0, Math.PI / 2, 0],\n        3: [-Math.PI / 2, 0, 0],\n        4: [Math.PI / 2, 0, 0],\n        5: [0, -Math.PI / 2, 0],\n        6: [Math.PI, 0, 0],\n      };\n      const [tx, ty, tz] = orientations[face];\n\n      const start = { x: cube.rotation.x, y: cube.rotation.y, z: cube.rotation.z };\n      const end = { x: tx + 2 * Math.PI, y: ty + 2 * Math.PI, z: tz + 2 * Math.PI };\n\n      // Use GSAP timeline for smooth rotation + bounces and DOM motion\n      const timeline = gsap.timeline({ onComplete: () => {\n        cube.rotation.set(tx, ty, tz);\n        if (onRoll) onRoll(face);\n      }});\n\n      // random screen path\n      const canvasEl = canvasRef.current as HTMLCanvasElement | null;\n      if (canvasEl && canvasEl.style) {\n        canvasEl.style.position = 'fixed';\n        canvasEl.style.left = '0px';\n        canvasEl.style.top = '0px';\n        canvasEl.style.willChange = 'transform';\n        // pick random path points\n        const startX = Math.random() * (window.innerWidth - size);\n        const startY = Math.random() * (window.innerHeight - size);\n        const midX = Math.random() * (window.innerWidth - size);\n        const midY = Math.random() * (window.innerHeight - size);\n        const endX = Math.random() * (window.innerWidth - size);\n        const endY = Math.random() * (window.innerHeight - size);\n\n        timeline.to({}, { duration: 0.01 }); // tiny offset\n        timeline.to(canvasEl, { duration: duration / 1000, x: endX, y: endY, ease: 'power2.inOut' }, 0);\n      }\n\n      // rotation: spin multiple revolutions then ease to final orientation\n      // we'll use a GSAP ticker to update cube.rotation\n      const totalSpins = 3 + Math.floor(Math.random() * 4);\n      const rotEnd = { x: end.x, y: end.y, z: end.z };\n      const rotStart = { x: start.x, y: start.y, z: start.z };\n\n      // animate rotation using timeline with an onUpdate that writes to cube\n      let progress = { t: 0 };\n      timeline.to(progress, {\n        t: 1,\n        duration: duration / 1000,\n        ease: 'power3.out',\n        onUpdate: () => {\n          const k = progress.t;\n          // combine ease with extra spins\n          const spinFactor = 1 - Math.pow(1 - k, 3);\n          const currentX = rotStart.x + (rotEnd.x - rotStart.x) * k + totalSpins * Math.PI * 2 * (1 - (1 - k));\n          const currentY = rotStart.y + (rotEnd.y - rotStart.y) * k + totalSpins * Math.PI * 2 * (1 - (1 - k));\n          const currentZ = rotStart.z + (rotEnd.z - rotStart.z) * k + totalSpins * Math.PI * 2 * (1 - (1 - k));\n          cube.rotation.set(currentX, currentY, currentZ);\n        }\n      });\n\n      // small bounce sequence on completion (scale + tilt)\n      timeline.to(cube.scale, { x: 1.06, y: 0.94, z: 0.94, duration: 0.08, yoyo: true, repeat: 1, ease: 'power2.out' }, '>-0.1');\n      timeline.to(cube.scale, { x: 0.97, y: 1.03, z: 0.97, duration: 0.06, yoyo: true, repeat: 1, ease: 'power2.out' });\n      timeline.to(cube.scale, { x: 1, y: 1, z: 1, duration: 0.05, ease: 'power2.out' });\n    };\n\n    useImperativeHandle(ref, () => ({\n      roll: () => rollInternal(),\n      rollTo: (face: number) => rollInternal(Math.max(1, Math.min(6, face))),\n    }), [duration, onRoll]);\n\n    // click to roll\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const handler = () => rollInternal();\n      canvas.addEventListener('click', handler);\n      return () => canvas.removeEventListener('click', handler);\n    }, []);\n\n    return <canvas ref={canvasRef} width={size} height={size} className={className} style={{ cursor: 'pointer' }} />;\n  });\n\nexport default Dice3D;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,mBAAmB,CAAEC,UAAU,KAAQ,OAAO,CACjF,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,OAASC,IAAI,KAAQ,MAAM,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAiB5B;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,MAAM,cAAGL,UAAU,CACvB,CAAAM,IAAA,CAAkEC,GAAG,GAAK,IAAzE,CAAEC,IAAI,CAAG,GAAG,CAAEC,QAAQ,CAAG,IAAI,CAAEC,MAAM,CAAEC,SAAuB,CAAC,CAAAL,IAAA,CAC9D,KAAM,CAAAM,SAAS,CAAGd,MAAM,CAA2B,IAAI,CAAC,CACxD,KAAM,CAAAe,QAAQ,CAAGf,MAAM,CAAc,CAAC,CACtC,KAAM,CAAAgB,OAAO,CAAGhB,MAAM,CAAa,CAAC,CACpC,KAAM,CAAAiB,WAAW,CAAGjB,MAAM,CAAsB,CAAC,CACjD,KAAM,CAAAkB,SAAS,CAAGlB,MAAM,CAA0B,CAAC,CACnD,KAAM,CAAAmB,SAAS,CAAGnB,MAAM,CAAC,CAAC,CAAC,CAE3B,2CACA,KAAM,CAAAoB,iBAAiB,CAAIC,IAAY,EAAoB,CACzD,KAAM,CAAAX,IAAI,CAAG,GAAG,CAChB,KAAM,CAAAY,GAAG,CAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAC5CF,GAAG,CAACG,KAAK,CAAGH,GAAG,CAACI,MAAM,CAAGhB,IAAI,CAC7B,KAAM,CAAAiB,GAAG,CAAGL,GAAG,CAACM,UAAU,CAAC,IAAI,CAAE,CACjCD,GAAG,CAACE,SAAS,CAAG,MAAM,CACtBF,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAEpB,IAAI,CAAEA,IAAI,CAAC,CAC9BiB,GAAG,CAACE,SAAS,CAAG,MAAM,CAEtB,KAAM,CAAAE,GAAG,CAAGA,CAACC,CAAS,CAAEC,CAAS,GAAK,CACpCN,GAAG,CAACO,SAAS,CAAC,CAAC,CACfP,GAAG,CAACQ,GAAG,CAACH,CAAC,CAAEC,CAAC,CAAEvB,IAAI,CAAG,GAAG,CAAE,CAAC,CAAE0B,IAAI,CAACC,EAAE,CAAG,CAAC,CAAC,CACzCV,GAAG,CAACW,IAAI,CAAC,CAAC,CACZ,CAAC,CACD,KAAM,CAAAC,CAAC,CAAG7B,IAAI,CAAG,IAAI,CACrB,KAAM,CAAA8B,OAAgD,CAAG,CACvD,CAAC,CAAE,CAAC,CAAC9B,IAAI,CAAG,CAAC,CAAEA,IAAI,CAAG,CAAC,CAAC,CAAC,CACzB,CAAC,CAAE,CAAC,CAAC6B,CAAC,CAAEA,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG6B,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CAAC,CACjC,CAAC,CAAE,CAAC,CAACA,CAAC,CAAEA,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG,CAAC,CAAEA,IAAI,CAAG,CAAC,CAAC,CAAE,CAACA,IAAI,CAAG6B,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CAAC,CACvD,CAAC,CAAE,CAAC,CAACA,CAAC,CAAEA,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG6B,CAAC,CAAEA,CAAC,CAAC,CAAE,CAACA,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG6B,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CAAC,CAC/D,CAAC,CAAE,CAAC,CAACA,CAAC,CAAEA,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG6B,CAAC,CAAEA,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG,CAAC,CAAEA,IAAI,CAAG,CAAC,CAAC,CAAE,CAAC6B,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG6B,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CAAC,CACrF,CAAC,CAAE,CAAC,CAACA,CAAC,CAAEA,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG6B,CAAC,CAAEA,CAAC,CAAC,CAAE,CAACA,CAAC,CAAE7B,IAAI,CAAG,CAAC,CAAC,CAAE,CAACA,IAAI,CAAG6B,CAAC,CAAE7B,IAAI,CAAG,CAAC,CAAC,CAAE,CAAC6B,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CAAE,CAAC7B,IAAI,CAAG6B,CAAC,CAAE7B,IAAI,CAAG6B,CAAC,CAAC,CACrG,CAAC,CACDC,OAAO,CAACnB,IAAI,CAAC,CAACoB,OAAO,CAACC,KAAA,MAAC,CAACV,CAAC,CAAEC,CAAC,CAAC,CAAAS,KAAA,OAAK,CAAAX,GAAG,CAACC,CAAC,CAAEC,CAAC,CAAC,GAAC,CAC5C,KAAM,CAAAU,GAAG,CAAG,GAAI,CAAAxC,KAAK,CAACyC,aAAa,CAACtB,GAAG,CAAC,CACxCqB,GAAG,CAACE,WAAW,CAAG,IAAI,CACtB,MAAO,CAAAF,GAAG,CACZ,CAAC,CAED;AACA5C,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+C,MAAM,CAAGhC,SAAS,CAACiC,OAAO,CAChC,GAAI,CAACD,MAAM,CAAE,OACb,KAAM,CAAAE,KAAK,CAAG,GAAI,CAAA7C,KAAK,CAAC8C,KAAK,CAAC,CAAC,CAC/BD,KAAK,CAACE,UAAU,CAAG,GAAI,CAAA/C,KAAK,CAACgD,KAAK,CAAC,QAAQ,CAAC,CAC5C,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAjD,KAAK,CAACkD,iBAAiB,CAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,IAAI,CAAC,CAC5DD,MAAM,CAACE,QAAQ,CAACC,CAAC,CAAG,CAAC,CACrB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAArD,KAAK,CAACsD,aAAa,CAAC,CAAEX,MAAM,CAAEY,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAClFH,QAAQ,CAACI,OAAO,CAAClD,IAAI,CAAEA,IAAI,CAAC,CAC5B8C,QAAQ,CAACK,SAAS,CAACC,OAAO,CAAG,IAAI,CACjCN,QAAQ,CAACK,SAAS,CAACE,IAAI,CAAG5D,KAAK,CAAC6D,gBAAgB,CAEhD;AACA,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAA9D,KAAK,CAAC+D,YAAY,CAAC,QAAQ,CAAE,GAAG,CAAC,CACrDlB,KAAK,CAACmB,GAAG,CAACF,OAAO,CAAC,CAClB,KAAM,CAAAG,GAAG,CAAG,GAAI,CAAAjE,KAAK,CAACkE,gBAAgB,CAAC,QAAQ,CAAE,GAAG,CAAC,CACrDD,GAAG,CAACd,QAAQ,CAACgB,GAAG,CAAC,CAAC,CAAE,EAAE,CAAE,CAAC,CAAC,CAC1BF,GAAG,CAACG,UAAU,CAAG,IAAI,CACrBH,GAAG,CAACI,MAAM,CAACC,OAAO,CAAChD,KAAK,CAAG,IAAI,CAC/B2C,GAAG,CAACI,MAAM,CAACC,OAAO,CAAC/C,MAAM,CAAG,IAAI,CAChC0C,GAAG,CAACI,MAAM,CAACpB,MAAM,CAACsB,IAAI,CAAG,CAAC,CAAC,CAC3BN,GAAG,CAACI,MAAM,CAACpB,MAAM,CAACuB,KAAK,CAAG,CAAC,CAC3BP,GAAG,CAACI,MAAM,CAACpB,MAAM,CAACwB,GAAG,CAAG,CAAC,CACzBR,GAAG,CAACI,MAAM,CAACpB,MAAM,CAACyB,MAAM,CAAG,CAAC,CAAC,CAC7B7B,KAAK,CAACmB,GAAG,CAACC,GAAG,CAAC,CAEd;AACA,KAAM,CAAAU,QAAQ,CAAG,GAAI,CAAA3E,KAAK,CAAC4E,aAAa,CAAC,EAAE,CAAE,EAAE,CAAC,CAChD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAA7E,KAAK,CAAC8E,cAAc,CAAC,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAC,CAC5D,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAhF,KAAK,CAACiF,IAAI,CAACN,QAAQ,CAAEE,QAAQ,CAAC,CAChDG,KAAK,CAACE,QAAQ,CAACrD,CAAC,CAAG,CAACI,IAAI,CAACC,EAAE,CAAG,CAAC,CAC/B8C,KAAK,CAAC7B,QAAQ,CAACrB,CAAC,CAAG,CAAC,GAAG,CACvBkD,KAAK,CAACG,aAAa,CAAG,IAAI,CAC1BtC,KAAK,CAACmB,GAAG,CAACgB,KAAK,CAAC,CAEhB;AACA,KAAM,CAAAI,SAAS,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,EAAI,GAAI,CAAAtF,KAAK,CAACuF,oBAAoB,CAAC,CAAEF,GAAG,CAAEpE,iBAAiB,CAACqE,CAAC,CAAC,CAAEE,SAAS,CAAE,GAAG,CAAEC,SAAS,CAAE,GAAI,CAAC,CAAC,CAAC,CAC5I,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAA1F,KAAK,CAAC2F,WAAW,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC/C,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAA5F,KAAK,CAACiF,IAAI,CAACS,QAAQ,CAAEN,SAAS,CAAC,CAChDQ,IAAI,CAACxB,UAAU,CAAG,IAAI,CACtBwB,IAAI,CAACT,aAAa,CAAG,KAAK,CAC1BtC,KAAK,CAACmB,GAAG,CAAC4B,IAAI,CAAC,CAEfhF,QAAQ,CAACgC,OAAO,CAAGC,KAAK,CACxBhC,OAAO,CAAC+B,OAAO,CAAGgD,IAAI,CACtB9E,WAAW,CAAC8B,OAAO,CAAGS,QAAQ,CAC9BtC,SAAS,CAAC6B,OAAO,CAAGK,MAAM,CAE1B;AACA,KAAM,CAAA4C,OAAO,CAAGA,CAAA,GAAM,CACpB7E,SAAS,CAAC4B,OAAO,CAAGkD,qBAAqB,CAACD,OAAO,CAAC,CAClD;AACA,GAAID,IAAI,CAAE,CACRA,IAAI,CAACV,QAAQ,CAACrD,CAAC,EAAI,KAAK,CACxB+D,IAAI,CAACV,QAAQ,CAACpD,CAAC,EAAI,KAAK,CAC1B,CACAuB,QAAQ,CAAC0C,MAAM,CAAClD,KAAK,CAAEI,MAAM,CAAC,CAChC,CAAC,CACD4C,OAAO,CAAC,CAAC,CAET,MAAO,IAAM,CACXG,oBAAoB,CAAChF,SAAS,CAAC4B,OAAO,CAAC,CACvCS,QAAQ,CAAC4C,OAAO,CAAC,CAAC,CACpB,CAAC,CACH,CAAC,CAAE,CAAC1F,IAAI,CAAC,CAAC,CAEV;AACA,KAAM,CAAA2F,YAAY,CAAIC,UAAmB,EAAK,CAC5C,GAAI,CAACtF,OAAO,CAAC+B,OAAO,CAAE,OACtB,KAAM,CAAAgD,IAAI,CAAG/E,OAAO,CAAC+B,OAAO,CAC5B;AACA,KAAM,CAAA1B,IAAI,CAAGiF,UAAU,SAAVA,UAAU,UAAVA,UAAU,CAAK,CAAC,CAAGlE,IAAI,CAACmE,KAAK,CAACnE,IAAI,CAACoE,MAAM,CAAC,CAAC,CAAG,CAAC,CAAE,CAE9D;AACA,KAAM,CAAAC,YAAsD,CAAG,CAC7D,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACZ,CAAC,CAAE,CAAC,CAAC,CAAErE,IAAI,CAACC,EAAE,CAAG,CAAC,CAAE,CAAC,CAAC,CACtB,CAAC,CAAE,CAAC,CAACD,IAAI,CAACC,EAAE,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACvB,CAAC,CAAE,CAACD,IAAI,CAACC,EAAE,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACtB,CAAC,CAAE,CAAC,CAAC,CAAE,CAACD,IAAI,CAACC,EAAE,CAAG,CAAC,CAAE,CAAC,CAAC,CACvB,CAAC,CAAE,CAACD,IAAI,CAACC,EAAE,CAAE,CAAC,CAAE,CAAC,CACnB,CAAC,CACD,KAAM,CAACqE,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAC,CAAGH,YAAY,CAACpF,IAAI,CAAC,CAEvC,KAAM,CAAAwF,KAAK,CAAG,CAAE7E,CAAC,CAAE+D,IAAI,CAACV,QAAQ,CAACrD,CAAC,CAAEC,CAAC,CAAE8D,IAAI,CAACV,QAAQ,CAACpD,CAAC,CAAEsB,CAAC,CAAEwC,IAAI,CAACV,QAAQ,CAAC9B,CAAE,CAAC,CAC5E,KAAM,CAAAuD,GAAG,CAAG,CAAE9E,CAAC,CAAE0E,EAAE,CAAG,CAAC,CAAGtE,IAAI,CAACC,EAAE,CAAEJ,CAAC,CAAE0E,EAAE,CAAG,CAAC,CAAGvE,IAAI,CAACC,EAAE,CAAEkB,CAAC,CAAEqD,EAAE,CAAG,CAAC,CAAGxE,IAAI,CAACC,EAAG,CAAC,CAE7E;AACA,KAAM,CAAA0E,QAAQ,CAAG3G,IAAI,CAAC2G,QAAQ,CAAC,CAAEC,UAAU,CAAEA,CAAA,GAAM,CACjDjB,IAAI,CAACV,QAAQ,CAACf,GAAG,CAACoC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAC,CAC7B,GAAIhG,MAAM,CAAEA,MAAM,CAACS,IAAI,CAAC,CAC1B,CAAC,CAAC,CAAC,CAEH;AACA,KAAM,CAAA4F,QAAQ,CAAGnG,SAAS,CAACiC,OAAmC,CAC9D,GAAIkE,QAAQ,EAAIA,QAAQ,CAACC,KAAK,CAAE,CAC9BD,QAAQ,CAACC,KAAK,CAAC5D,QAAQ,CAAG,OAAO,CACjC2D,QAAQ,CAACC,KAAK,CAACxC,IAAI,CAAG,KAAK,CAC3BuC,QAAQ,CAACC,KAAK,CAACtC,GAAG,CAAG,KAAK,CAC1BqC,QAAQ,CAACC,KAAK,CAACC,UAAU,CAAG,WAAW,CACvC;AACA,KAAM,CAAAC,MAAM,CAAGhF,IAAI,CAACoE,MAAM,CAAC,CAAC,EAAIa,MAAM,CAACC,UAAU,CAAG5G,IAAI,CAAC,CACzD,KAAM,CAAA6G,MAAM,CAAGnF,IAAI,CAACoE,MAAM,CAAC,CAAC,EAAIa,MAAM,CAACG,WAAW,CAAG9G,IAAI,CAAC,CAC1D,KAAM,CAAA+G,IAAI,CAAGrF,IAAI,CAACoE,MAAM,CAAC,CAAC,EAAIa,MAAM,CAACC,UAAU,CAAG5G,IAAI,CAAC,CACvD,KAAM,CAAAgH,IAAI,CAAGtF,IAAI,CAACoE,MAAM,CAAC,CAAC,EAAIa,MAAM,CAACG,WAAW,CAAG9G,IAAI,CAAC,CACxD,KAAM,CAAAiH,IAAI,CAAGvF,IAAI,CAACoE,MAAM,CAAC,CAAC,EAAIa,MAAM,CAACC,UAAU,CAAG5G,IAAI,CAAC,CACvD,KAAM,CAAAkH,IAAI,CAAGxF,IAAI,CAACoE,MAAM,CAAC,CAAC,EAAIa,MAAM,CAACG,WAAW,CAAG9G,IAAI,CAAC,CAExDqG,QAAQ,CAACc,EAAE,CAAC,CAAC,CAAC,CAAE,CAAElH,QAAQ,CAAE,IAAK,CAAC,CAAC,CAAE;AACrCoG,QAAQ,CAACc,EAAE,CAACZ,QAAQ,CAAE,CAAEtG,QAAQ,CAAEA,QAAQ,CAAG,IAAI,CAAEqB,CAAC,CAAE2F,IAAI,CAAE1F,CAAC,CAAE2F,IAAI,CAAEE,IAAI,CAAE,cAAe,CAAC,CAAE,CAAC,CAAC,CACjG,CAEA;AACA;AACA,KAAM,CAAAC,UAAU,CAAG,CAAC,CAAG3F,IAAI,CAACmE,KAAK,CAACnE,IAAI,CAACoE,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,CACpD,KAAM,CAAAwB,MAAM,CAAG,CAAEhG,CAAC,CAAE8E,GAAG,CAAC9E,CAAC,CAAEC,CAAC,CAAE6E,GAAG,CAAC7E,CAAC,CAAEsB,CAAC,CAAEuD,GAAG,CAACvD,CAAE,CAAC,CAC/C,KAAM,CAAA0E,QAAQ,CAAG,CAAEjG,CAAC,CAAE6E,KAAK,CAAC7E,CAAC,CAAEC,CAAC,CAAE4E,KAAK,CAAC5E,CAAC,CAAEsB,CAAC,CAAEsD,KAAK,CAACtD,CAAE,CAAC,CAEvD;AACA,GAAI,CAAA2E,QAAQ,CAAG,CAAEC,CAAC,CAAE,CAAE,CAAC,CACvBpB,QAAQ,CAACc,EAAE,CAACK,QAAQ,CAAE,CACpBC,CAAC,CAAE,CAAC,CACJxH,QAAQ,CAAEA,QAAQ,CAAG,IAAI,CACzBmH,IAAI,CAAE,YAAY,CAClBM,QAAQ,CAAEA,CAAA,GAAM,CACd,KAAM,CAAAC,CAAC,CAAGH,QAAQ,CAACC,CAAC,CACpB;AACA,KAAM,CAAAG,UAAU,CAAG,CAAC,CAAGlG,IAAI,CAACmG,GAAG,CAAC,CAAC,CAAGF,CAAC,CAAE,CAAC,CAAC,CACzC,KAAM,CAAAG,QAAQ,CAAGP,QAAQ,CAACjG,CAAC,CAAG,CAACgG,MAAM,CAAChG,CAAC,CAAGiG,QAAQ,CAACjG,CAAC,EAAIqG,CAAC,CAAGN,UAAU,CAAG3F,IAAI,CAACC,EAAE,CAAG,CAAC,EAAI,CAAC,EAAI,CAAC,CAAGgG,CAAC,CAAC,CAAC,CACpG,KAAM,CAAAI,QAAQ,CAAGR,QAAQ,CAAChG,CAAC,CAAG,CAAC+F,MAAM,CAAC/F,CAAC,CAAGgG,QAAQ,CAAChG,CAAC,EAAIoG,CAAC,CAAGN,UAAU,CAAG3F,IAAI,CAACC,EAAE,CAAG,CAAC,EAAI,CAAC,EAAI,CAAC,CAAGgG,CAAC,CAAC,CAAC,CACpG,KAAM,CAAAK,QAAQ,CAAGT,QAAQ,CAAC1E,CAAC,CAAG,CAACyE,MAAM,CAACzE,CAAC,CAAG0E,QAAQ,CAAC1E,CAAC,EAAI8E,CAAC,CAAGN,UAAU,CAAG3F,IAAI,CAACC,EAAE,CAAG,CAAC,EAAI,CAAC,EAAI,CAAC,CAAGgG,CAAC,CAAC,CAAC,CACpGtC,IAAI,CAACV,QAAQ,CAACf,GAAG,CAACkE,QAAQ,CAAEC,QAAQ,CAAEC,QAAQ,CAAC,CACjD,CACF,CAAC,CAAC,CAEF;AACA3B,QAAQ,CAACc,EAAE,CAAC9B,IAAI,CAAC4C,KAAK,CAAE,CAAE3G,CAAC,CAAE,IAAI,CAAEC,CAAC,CAAE,IAAI,CAAEsB,CAAC,CAAE,IAAI,CAAE5C,QAAQ,CAAE,IAAI,CAAEiI,IAAI,CAAE,IAAI,CAAEC,MAAM,CAAE,CAAC,CAAEf,IAAI,CAAE,YAAa,CAAC,CAAE,OAAO,CAAC,CAC1Hf,QAAQ,CAACc,EAAE,CAAC9B,IAAI,CAAC4C,KAAK,CAAE,CAAE3G,CAAC,CAAE,IAAI,CAAEC,CAAC,CAAE,IAAI,CAAEsB,CAAC,CAAE,IAAI,CAAE5C,QAAQ,CAAE,IAAI,CAAEiI,IAAI,CAAE,IAAI,CAAEC,MAAM,CAAE,CAAC,CAAEf,IAAI,CAAE,YAAa,CAAC,CAAC,CACjHf,QAAQ,CAACc,EAAE,CAAC9B,IAAI,CAAC4C,KAAK,CAAE,CAAE3G,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAEsB,CAAC,CAAE,CAAC,CAAE5C,QAAQ,CAAE,IAAI,CAAEmH,IAAI,CAAE,YAAa,CAAC,CAAC,CACnF,CAAC,CAED7H,mBAAmB,CAACQ,GAAG,CAAE,KAAO,CAC9BqI,IAAI,CAAEA,CAAA,GAAMzC,YAAY,CAAC,CAAC,CAC1B0C,MAAM,CAAG1H,IAAY,EAAKgF,YAAY,CAACjE,IAAI,CAAC4G,GAAG,CAAC,CAAC,CAAE5G,IAAI,CAAC6G,GAAG,CAAC,CAAC,CAAE5H,IAAI,CAAC,CAAC,CACvE,CAAC,CAAC,CAAE,CAACV,QAAQ,CAAEC,MAAM,CAAC,CAAC,CAEvB;AACAb,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+C,MAAM,CAAGhC,SAAS,CAACiC,OAAO,CAChC,GAAI,CAACD,MAAM,CAAE,OACb,KAAM,CAAAoG,OAAO,CAAGA,CAAA,GAAM7C,YAAY,CAAC,CAAC,CACpCvD,MAAM,CAACqG,gBAAgB,CAAC,OAAO,CAAED,OAAO,CAAC,CACzC,MAAO,IAAMpG,MAAM,CAACsG,mBAAmB,CAAC,OAAO,CAAEF,OAAO,CAAC,CAC3D,CAAC,CAAE,EAAE,CAAC,CAEN,mBAAO5I,IAAA,WAAQG,GAAG,CAAEK,SAAU,CAACW,KAAK,CAAEf,IAAK,CAACgB,MAAM,CAAEhB,IAAK,CAACG,SAAS,CAAEA,SAAU,CAACqG,KAAK,CAAE,CAAEmC,MAAM,CAAE,SAAU,CAAE,CAAE,CAAC,CAClH,CAAC,CAAC,CAEJ,cAAe,CAAA9I,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}