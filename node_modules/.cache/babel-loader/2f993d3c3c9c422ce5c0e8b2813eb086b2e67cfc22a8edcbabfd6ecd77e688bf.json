{"ast":null,"code":"import{createKeyboardListener,readGamepadsUnified,P1_KEYS,P2_KEYS}from\"./input\";import{buildSpriteConfig,P1_PROJECTILE_SRC,P2_PROJECTILE_SRC,P1_BLAST_SRC,P2_BLAST_SRC}from\"./assetRegistry\";import{loadAtlas}from\"./atlasLoader\";import{Fighter,Blast}from\"./fighter\";export function createGame(canvas){const ctx=canvas.getContext(\"2d\");const WIDTH=canvas.width,HEIGHT=canvas.height;// Debug: log when this module is actually instantiated so we can confirm if the rebuilt module is loaded\n// Visible in the browser console immediately after page load\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] createGame initialized\",{WIDTH,HEIGHT});function clamp(v,min,max){return v<min?min:v>max?max:v;}const input=createKeyboardListener(canvas);const p1Sprite=buildSpriteConfig(\"ninja\");const p2Sprite=buildSpriteConfig(\"cyboard\",{idle:{src:\"cyboard/idle_256x256_4.png\",frames:4,fps:6},walk:{src:\"cyboard/walk_256x256_4.png\",frames:4,fps:10},ranged:{src:\"cyboard/ranged_256x256_4.png\",frames:4,fps:12},parry:{src:\"cyboard/parry_256x256_4.png\",frames:4,fps:10},blast:{src:\"cyboard/blast_256x256_4.png\",frames:4,fps:12}});const projectiles=[];const blasts=[];const p1=new Fighter({x:100,y:HEIGHT-40-256,color:\"#4aa3ff\",keys:P1_KEYS,name:\"P1\",spriteConfig:p1Sprite,ctx,canvasWidth:WIDTH,canvasHeight:HEIGHT,muzzleOffset:{x:36,y:-48}});const p2=new Fighter({x:WIDTH-100-256,y:HEIGHT-40-256,color:\"#ff7a7a\",keys:P2_KEYS,name:\"P2\",spriteConfig:p2Sprite,ctx,canvasWidth:WIDTH,canvasHeight:HEIGHT,muzzleOffset:{x:-36,y:-48}});p2.facing=-1;// Preload stage background\nconst stageImg=new Image();stageImg.src=\"/qte/background/ninjastage0.png\";// Store atlases globally for projectiles/blasts\nlet globalAtlas1=null;let globalAtlas2=null;// Asynchronously load atlases and patch animators once ready\n(async()=>{try{console.log(\"[qte] Starting atlas load...\");const[atlas1,atlas2]=await Promise.all([loadAtlas(\"/qte/ninja/atlas2\"),loadAtlas(\"/qte/cyboard\")]);globalAtlas1=atlas1;globalAtlas2=atlas2;// helper to merge atlas into animator\nconst patchAnimator=(anim,atlas)=>{const allStates=Object.keys(anim.animations);for(const state of allStates){const atlasState=atlas.animations[state];if(atlasState){const a=atlasState;if(!anim.animations[state])anim.animations[state]={};const dest=anim.animations[state];dest.rects=a.frames;dest.image=atlas.image;dest.frameW=atlas.frameW;dest.frameH=atlas.frameH;dest.frames=a.frames.length;dest.imageLoaded=true;dest.imageBroken=false;console.log(\"[qte] Patched \".concat(state,\" with \").concat(a.frames.length,\" atlas frames\"));}else{// No atlas frames but still ensure image reference so it's not broken\nanim.animations[state].image=atlas.image;anim.animations[state].imageLoaded=true;anim.animations[state].imageBroken=false;console.log(\"[qte] No atlas frames for \".concat(state,\", using fallback image\"));}}anim.defaultImage=atlas.image;};patchAnimator(p1.anim,atlas1);patchAnimator(p2.anim,atlas2);console.log(\"[qte] atlases loaded and patched successfully\");}catch(e){// eslint-disable-next-line no-console\nconsole.warn(\"[qte] atlas load failed\",e);}})();// Asset diagnostics: after a short delay log the loaded/broken state of important images\nsetTimeout(()=>{try{// eslint-disable-next-line no-console\nconsole.debug(\"[qte] asset diagnostics: checking sprite images\");const dump=(animName,spriteConfig)=>{const keys=Object.keys(spriteConfig.animations||{});keys.forEach(k=>{const a=spriteConfig.animations[k];// eslint-disable-next-line no-console\nconsole.debug(\"[qte] sprite \".concat(animName,\".\").concat(k),{src:a.src,frames:a.frames,fps:a.fps,loaded:!!a.imageLoaded,broken:!!a.imageBroken});});};dump(\"p1\",p1Sprite);dump(\"p2\",p2Sprite);// also log projectile/blast constants\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] constants\",{P1_PROJECTILE_SRC,P2_PROJECTILE_SRC,P1_BLAST_SRC,P2_BLAST_SRC});}catch(e){// eslint-disable-next-line no-console\nconsole.warn(\"[qte] asset diagnostics failed\",e);}},500);function framesFromFilename(src,fallback){try{const m=/_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);const n=m?parseInt(m[1],10):NaN;return Number.isFinite(n)?n:fallback;}catch(e){return fallback;}}let last=performance.now();function loop(now){const dt=Math.min(0.05,(now-last)/1000);last=now;// merge inputs\nconst gp=readGamepadsUnified(P1_KEYS,P2_KEYS);const mergedInput={};function getKeyboard(code){return!!input[code];}[P1_KEYS.left,P1_KEYS.right,P1_KEYS.up,P1_KEYS.down,P1_KEYS.attack,P1_KEYS.parry,P1_KEYS.ranged].forEach(k=>{if(k)mergedInput[k]=!!gp[k]||getKeyboard(k);});[P2_KEYS.left,P2_KEYS.right,P2_KEYS.up,P2_KEYS.down,P2_KEYS.attack,P2_KEYS.parry,P2_KEYS.ranged].forEach(k=>{if(k)mergedInput[k]=!!gp[k]||getKeyboard(k);});// draw background\nif(stageImg.complete&&stageImg.naturalWidth>0){ctx.drawImage(stageImg,0,0,WIDTH,HEIGHT);}else{ctx.fillStyle=\"#071428\";ctx.fillRect(0,0,WIDTH,HEIGHT);}ctx.fillStyle=\"#333\";ctx.fillRect(0,HEIGHT-40,WIDTH,40);// update\np1.update(dt,mergedInput,projectiles);p2.update(dt,mergedInput,projectiles);projectiles.forEach(pr=>pr.update(dt));blasts.forEach(b=>b.update(dt));// cleanup\nfor(let i=projectiles.length-1;i>=0;i--)if(!projectiles[i].alive)projectiles.splice(i,1);for(let i=blasts.length-1;i>=0;i--)if(!blasts[i].alive)blasts.splice(i,1);// draw\np1.draw();p2.draw();projectiles.forEach(pr=>pr.draw(ctx));blasts.forEach(b=>b.draw(ctx));// collisions\nconst h1=p1.hitbox(),h2=p2.hitbox();if(h1&&aabb(h1,p2.rect())){if(p2.parrying&&!p2.parryConsumed&&p2.parryTimer>p2.parryDurationDefault-p2.parryWindowLength){p2.parryConsumed=true;p2.parryFreezeTimer=0.12;p1.stunTimer=1.0;}else{p2.hp=clamp(p2.hp-1,0,100);}}if(h2&&aabb(h2,p1.rect())){if(p1.parrying&&!p1.parryConsumed&&p1.parryTimer>p1.parryDurationDefault-p1.parryWindowLength){p1.parryConsumed=true;p1.parryFreezeTimer=0.12;p2.stunTimer=1.0;}else{p1.hp=clamp(p1.hp-1,0,100);}}for(const pr of projectiles){if(!pr.alive)continue;if(pr.owner!==p1&&aabb(pr.rect(),p1.rect())){var _pr$anim$animations$f;p1.hp=clamp(p1.hp-10,0,100);pr.alive=false;// Debug: log hit and blast chosen\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] projectile hit P1\",{projectileSrc:(_pr$anim$animations$f=pr.anim.animations[\"fly\"])===null||_pr$anim$animations$f===void 0?void 0:_pr$anim$animations$f.src,blastSrc:P2_BLAST_SRC});// Use atlas for blast if available\nlet blastImage=null;let blastRects=null;let blastFrames=4;if(globalAtlas2&&globalAtlas2.animations.blast){blastImage=globalAtlas2.image;blastRects=globalAtlas2.animations.blast.frames;blastFrames=globalAtlas2.animations.blast.frames.length;console.log(\"[qte] Blast using atlas frames from cyboard\");}else{console.log(\"[qte] Blast: No atlas frames for 'blast' in cyboard, falling back to individual image.\");}blasts.push(new Blast(p1.x+p1.w*0.5,p1.y+p1.h*0.5,P2_BLAST_SRC,blastFrames,blastImage,blastRects));}if(pr.owner!==p2&&aabb(pr.rect(),p2.rect())){var _pr$anim$animations$f2;p2.hp=clamp(p2.hp-10,0,100);pr.alive=false;// Debug: log hit and blast chosen\n// eslint-disable-next-line no-console\nconsole.debug(\"[qte] projectile hit P2\",{projectileSrc:(_pr$anim$animations$f2=pr.anim.animations[\"fly\"])===null||_pr$anim$animations$f2===void 0?void 0:_pr$anim$animations$f2.src,blastSrc:P1_BLAST_SRC});// Use atlas for blast if available\nlet blastImage=null;let blastRects=null;let blastFrames=4;if(globalAtlas1&&globalAtlas1.animations.blast){blastImage=globalAtlas1.image;blastRects=globalAtlas1.animations.blast.frames;blastFrames=globalAtlas1.animations.blast.frames.length;console.log(\"[qte] Blast using atlas frames from ninja\");}else{console.log(\"[qte] Blast: No atlas frames for 'blast' in ninja, falling back to individual image.\");}blasts.push(new Blast(p2.x+p2.w*0.5,p2.y+p2.h*0.5,P1_BLAST_SRC,blastFrames,blastImage,blastRects));}}// auto-defeat\nif(p1.hp<=0&&p1.state!==\"defeat\"){p1.state=\"defeat\";p1.attacking=false;p1.parrying=false;p1.ranging=false;p1.vx=0;p1.vy=0;p1.anim.setState(\"defeat\");}if(p2.hp<=0&&p2.state!==\"defeat\"){p2.state=\"defeat\";p2.attacking=false;p2.parrying=false;p2.ranging=false;p2.vx=0;p2.vy=0;p2.anim.setState(\"defeat\");}requestAnimationFrame(loop);}requestAnimationFrame(loop);function aabb(a,b){return!(a.x+a.w<b.x||b.x+b.w<a.x||a.y+a.h<b.y||b.y+b.h<a.y);}return{ctx,p1,p2};}","map":{"version":3,"names":["createKeyboardListener","readGamepadsUnified","P1_KEYS","P2_KEYS","buildSpriteConfig","P1_PROJECTILE_SRC","P2_PROJECTILE_SRC","P1_BLAST_SRC","P2_BLAST_SRC","loadAtlas","Fighter","Blast","createGame","canvas","ctx","getContext","WIDTH","width","HEIGHT","height","console","debug","clamp","v","min","max","input","p1Sprite","p2Sprite","idle","src","frames","fps","walk","ranged","parry","blast","projectiles","blasts","p1","x","y","color","keys","name","spriteConfig","canvasWidth","canvasHeight","muzzleOffset","p2","facing","stageImg","Image","globalAtlas1","globalAtlas2","log","atlas1","atlas2","Promise","all","patchAnimator","anim","atlas","allStates","Object","animations","state","atlasState","a","dest","rects","image","frameW","frameH","length","imageLoaded","imageBroken","concat","defaultImage","e","warn","setTimeout","dump","animName","forEach","k","loaded","broken","framesFromFilename","fallback","m","exec","n","parseInt","NaN","Number","isFinite","last","performance","now","loop","dt","Math","gp","mergedInput","getKeyboard","code","left","right","up","down","attack","complete","naturalWidth","drawImage","fillStyle","fillRect","update","pr","b","i","alive","splice","draw","h1","hitbox","h2","aabb","rect","parrying","parryConsumed","parryTimer","parryDurationDefault","parryWindowLength","parryFreezeTimer","stunTimer","hp","owner","_pr$anim$animations$f","projectileSrc","blastSrc","blastImage","blastRects","blastFrames","push","w","h","_pr$anim$animations$f2","attacking","ranging","vx","vy","setState","requestAnimationFrame"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/qte/gameLoop.ts"],"sourcesContent":["import { createKeyboardListener, readGamepadsUnified, P1_KEYS, P2_KEYS } from \"./input\";\nimport { buildSpriteConfig, P1_PROJECTILE_SRC, P2_PROJECTILE_SRC, P1_BLAST_SRC, P2_BLAST_SRC } from \"./assetRegistry\";\nimport { loadAtlas } from \"./atlasLoader\";\nimport { Fighter, Projectile, Blast } from \"./fighter\";\n\nexport function createGame(canvas: HTMLCanvasElement) {\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  const WIDTH = canvas.width, HEIGHT = canvas.height;\n  // Debug: log when this module is actually instantiated so we can confirm if the rebuilt module is loaded\n  // Visible in the browser console immediately after page load\n  // eslint-disable-next-line no-console\n  console.debug(\"[qte] createGame initialized\", { WIDTH, HEIGHT });\n\n  function clamp(v: number, min: number, max: number) {\n    return v < min ? min : v > max ? max : v;\n  }\n\n  const input = createKeyboardListener(canvas);\n\n  const p1Sprite = buildSpriteConfig(\"ninja\");\n  const p2Sprite = buildSpriteConfig(\"cyboard\", {\n    idle: { src: \"cyboard/idle_256x256_4.png\", frames: 4, fps: 6 },\n    walk: { src: \"cyboard/walk_256x256_4.png\", frames: 4, fps: 10 },\n    ranged: { src: \"cyboard/ranged_256x256_4.png\", frames: 4, fps: 12 },\n    parry: { src: \"cyboard/parry_256x256_4.png\", frames: 4, fps: 10 },\n    blast: { src: \"cyboard/blast_256x256_4.png\", frames: 4, fps: 12 },\n  });\n\n  const projectiles: Projectile[] = [];\n  const blasts: Blast[] = [];\n\n  const p1 = new Fighter({ x: 100, y: HEIGHT - 40 - 256, color: \"#4aa3ff\", keys: P1_KEYS as any, name: \"P1\", spriteConfig: p1Sprite, ctx, canvasWidth: WIDTH, canvasHeight: HEIGHT, muzzleOffset: { x: 36, y: -48 } });\n  const p2 = new Fighter({ x: WIDTH - 100 - 256, y: HEIGHT - 40 - 256, color: \"#ff7a7a\", keys: P2_KEYS as any, name: \"P2\", spriteConfig: p2Sprite, ctx, canvasWidth: WIDTH, canvasHeight: HEIGHT, muzzleOffset: { x: -36, y: -48 } });\n  p2.facing = -1;\n\n  // Preload stage background\n  const stageImg = new Image();\n  stageImg.src = \"/qte/background/ninjastage0.png\";\n\n  // Store atlases globally for projectiles/blasts\n  let globalAtlas1: any = null;\n  let globalAtlas2: any = null;\n\n  // Asynchronously load atlases and patch animators once ready\n  (async () => {\n    try {\n      console.log(\"[qte] Starting atlas load...\");\n      const [atlas1, atlas2] = await Promise.all([\n        loadAtlas(\"/qte/ninja/atlas2\"),\n        loadAtlas(\"/qte/cyboard\"),\n      ]);\n\n      globalAtlas1 = atlas1;\n      globalAtlas2 = atlas2;\n\n      // helper to merge atlas into animator\n      const patchAnimator = (anim: any, atlas: any) => {\n        const allStates = Object.keys(anim.animations);\n        for (const state of allStates) {\n          const atlasState = atlas.animations[state];\n          if (atlasState) {\n            const a = atlasState;\n            if (!anim.animations[state]) anim.animations[state] = {} as any;\n            const dest = anim.animations[state];\n            dest.rects = a.frames;\n            dest.image = atlas.image;\n            dest.frameW = atlas.frameW;\n            dest.frameH = atlas.frameH;\n            dest.frames = a.frames.length;\n            (dest as any).imageLoaded = true;\n            (dest as any).imageBroken = false;\n            console.log(`[qte] Patched ${state} with ${a.frames.length} atlas frames`);\n          } else {\n            // No atlas frames but still ensure image reference so it's not broken\n            anim.animations[state].image = atlas.image;\n            (anim.animations[state] as any).imageLoaded = true;\n            (anim.animations[state] as any).imageBroken = false;\n            console.log(`[qte] No atlas frames for ${state}, using fallback image`);\n          }\n        }\n        anim.defaultImage = atlas.image;\n      };\n      patchAnimator(p1.anim, atlas1);\n      patchAnimator(p2.anim, atlas2);\n      console.log(\"[qte] atlases loaded and patched successfully\");\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[qte] atlas load failed\", e);\n    }\n  })();\n\n  // Asset diagnostics: after a short delay log the loaded/broken state of important images\n  setTimeout(() => {\n    try {\n      // eslint-disable-next-line no-console\n      console.debug(\"[qte] asset diagnostics: checking sprite images\");\n      const dump = (animName: string, spriteConfig: any) => {\n        const keys = Object.keys(spriteConfig.animations || {});\n        keys.forEach((k) => {\n          const a = spriteConfig.animations[k];\n          // eslint-disable-next-line no-console\n          console.debug(`[qte] sprite ${animName}.${k}`, { src: a.src, frames: a.frames, fps: a.fps, loaded: !!a.imageLoaded, broken: !!a.imageBroken });\n        });\n      };\n      dump(\"p1\", p1Sprite);\n      dump(\"p2\", p2Sprite);\n      // also log projectile/blast constants\n      // eslint-disable-next-line no-console\n      console.debug(\"[qte] constants\", { P1_PROJECTILE_SRC, P2_PROJECTILE_SRC, P1_BLAST_SRC, P2_BLAST_SRC });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[qte] asset diagnostics failed\", e);\n    }\n  }, 500);\n\n  function framesFromFilename(src: string, fallback: number) {\n    try {\n      const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);\n      const n = m ? parseInt(m[1], 10) : NaN;\n      return Number.isFinite(n) ? n : fallback;\n    } catch (e) {\n      return fallback;\n    }\n  }\n\n  let last = performance.now();\n  function loop(now: number) {\n    const dt = Math.min(0.05, (now - last) / 1000);\n    last = now;\n\n    // merge inputs\n    const gp = readGamepadsUnified(P1_KEYS as any, P2_KEYS as any);\n    const mergedInput: Record<string, boolean> = {};\n    function getKeyboard(code: string) {\n      return !!input[code];\n    }\n    [P1_KEYS.left, P1_KEYS.right, P1_KEYS.up, P1_KEYS.down, P1_KEYS.attack, P1_KEYS.parry, P1_KEYS.ranged].forEach((k) => {\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\n    });\n    [P2_KEYS.left, P2_KEYS.right, P2_KEYS.up, P2_KEYS.down, P2_KEYS.attack, P2_KEYS.parry, P2_KEYS.ranged].forEach((k) => {\n      if (k) mergedInput[k] = !!gp[k] || getKeyboard(k);\n    });\n\n    // draw background\n    if (stageImg.complete && stageImg.naturalWidth > 0) {\n      ctx.drawImage(stageImg, 0, 0, WIDTH, HEIGHT);\n    } else {\n      ctx.fillStyle = \"#071428\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    }\n    ctx.fillStyle = \"#333\";\n    ctx.fillRect(0, HEIGHT - 40, WIDTH, 40);\n\n    // update\n    p1.update(dt, mergedInput, projectiles);\n    p2.update(dt, mergedInput, projectiles);\n\n    projectiles.forEach((pr) => pr.update(dt));\n    blasts.forEach((b) => b.update(dt));\n\n    // cleanup\n    for (let i = projectiles.length - 1; i >= 0; i--) if (!projectiles[i].alive) projectiles.splice(i, 1);\n    for (let i = blasts.length - 1; i >= 0; i--) if (!blasts[i].alive) blasts.splice(i, 1);\n\n    // draw\n    p1.draw();\n    p2.draw();\n    projectiles.forEach((pr) => pr.draw(ctx));\n    blasts.forEach((b) => b.draw(ctx));\n\n    // collisions\n    const h1 = p1.hitbox(), h2 = p2.hitbox();\n    if (h1 && aabb(h1, p2.rect())) {\n      if (p2.parrying && !p2.parryConsumed && p2.parryTimer > p2.parryDurationDefault - p2.parryWindowLength) {\n        p2.parryConsumed = true;\n        p2.parryFreezeTimer = 0.12;\n        p1.stunTimer = 1.0;\n      } else {\n        p2.hp = clamp(p2.hp - 1, 0, 100);\n      }\n    }\n    if (h2 && aabb(h2, p1.rect())) {\n      if (p1.parrying && !p1.parryConsumed && p1.parryTimer > p1.parryDurationDefault - p1.parryWindowLength) {\n        p1.parryConsumed = true;\n        p1.parryFreezeTimer = 0.12;\n        p2.stunTimer = 1.0;\n      } else {\n        p1.hp = clamp(p1.hp - 1, 0, 100);\n      }\n    }\n\n    for (const pr of projectiles) {\n      if (!pr.alive) continue;\n      if (pr.owner !== p1 && aabb(pr.rect(), p1.rect())) {\n        p1.hp = clamp(p1.hp - 10, 0, 100);\n        pr.alive = false;\n        // Debug: log hit and blast chosen\n        // eslint-disable-next-line no-console\n        console.debug(\"[qte] projectile hit P1\", { projectileSrc: pr.anim.animations[\"fly\"]?.src, blastSrc: P2_BLAST_SRC });\n        // Use atlas for blast if available\n        let blastImage = null;\n        let blastRects = null;\n        let blastFrames = 4;\n\n        if (globalAtlas2 && globalAtlas2.animations.blast) {\n          blastImage = globalAtlas2.image;\n          blastRects = globalAtlas2.animations.blast.frames;\n          blastFrames = globalAtlas2.animations.blast.frames.length;\n          console.log(`[qte] Blast using atlas frames from cyboard`);\n        } else {\n          console.log(`[qte] Blast: No atlas frames for 'blast' in cyboard, falling back to individual image.`);\n        }\n\n        blasts.push(new Blast(p1.x + p1.w * 0.5, p1.y + p1.h * 0.5, P2_BLAST_SRC, blastFrames, blastImage, blastRects));\n      }\n      if (pr.owner !== p2 && aabb(pr.rect(), p2.rect())) {\n        p2.hp = clamp(p2.hp - 10, 0, 100);\n        pr.alive = false;\n        // Debug: log hit and blast chosen\n        // eslint-disable-next-line no-console\n        console.debug(\"[qte] projectile hit P2\", { projectileSrc: pr.anim.animations[\"fly\"]?.src, blastSrc: P1_BLAST_SRC });\n        // Use atlas for blast if available\n        let blastImage = null;\n        let blastRects = null;\n        let blastFrames = 4;\n\n        if (globalAtlas1 && globalAtlas1.animations.blast) {\n          blastImage = globalAtlas1.image;\n          blastRects = globalAtlas1.animations.blast.frames;\n          blastFrames = globalAtlas1.animations.blast.frames.length;\n          console.log(`[qte] Blast using atlas frames from ninja`);\n        } else {\n          console.log(`[qte] Blast: No atlas frames for 'blast' in ninja, falling back to individual image.`);\n        }\n\n        blasts.push(new Blast(p2.x + p2.w * 0.5, p2.y + p2.h * 0.5, P1_BLAST_SRC, blastFrames, blastImage, blastRects));\n      }\n    }\n\n    // auto-defeat\n    if (p1.hp <= 0 && p1.state !== \"defeat\") {\n      p1.state = \"defeat\";\n      p1.attacking = false;\n      p1.parrying = false;\n      p1.ranging = false;\n      p1.vx = 0;\n      p1.vy = 0;\n      p1.anim.setState(\"defeat\");\n    }\n    if (p2.hp <= 0 && p2.state !== \"defeat\") {\n      p2.state = \"defeat\";\n      p2.attacking = false;\n      p2.parrying = false;\n      p2.ranging = false;\n      p2.vx = 0;\n      p2.vy = 0;\n      p2.anim.setState(\"defeat\");\n    }\n\n    requestAnimationFrame(loop);\n  }\n\n  requestAnimationFrame(loop);\n\n  function aabb(a: { x: number; y: number; w: number; h: number }, b: { x: number; y: number; w: number; h: number }) {\n    return !(a.x + a.w < b.x || b.x + b.w < a.x || a.y + a.h < b.y || b.y + b.h < a.y);\n  }\n\n  return { ctx, p1, p2 };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}