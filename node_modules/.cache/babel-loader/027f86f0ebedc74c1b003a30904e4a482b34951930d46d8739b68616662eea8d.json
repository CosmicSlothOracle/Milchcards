{"ast":null,"code":"import React,{useEffect,useRef,useImperativeHandle,forwardRef,useCallback}from'react';import*as THREE from'three';import gsap from'gsap';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * Dice3D â€“ simple WebGL dice rendered with three.js\n * Usage:\n *   const diceRef = useRef<Dice3DHandle>(null);\n *   <Dice3D ref={diceRef} onRoll={(f)=>console.log(f)}/>\n *   diceRef.current?.roll();\n */const Dice3D=/*#__PURE__*/forwardRef((_ref,ref)=>{let{size=180,duration=1200,onRoll,className,spinOnly=true}=_ref;const canvasRef=useRef(null);const sceneRef=useRef();const cubeRef=useRef();const rendererRef=useRef();const cameraRef=useRef();const animIdRef=useRef(0);const lastRequestRef=useRef(null);const isSettledRef=useRef(true);// when true, dice remain static until next roll\nconst spinningTweenRef=useRef(null);/** helper to create a texture with pips */const createFaceTexture=face=>{const size=128;const cvs=document.createElement('canvas');cvs.width=cvs.height=size;const ctx=cvs.getContext('2d');ctx.fillStyle='#fff';ctx.fillRect(0,0,size,size);ctx.fillStyle='#111';const dot=(x,y)=>{ctx.beginPath();ctx.arc(x,y,size*0.1,0,Math.PI*2);ctx.fill();};const g=size*0.25;const centers={1:[[size/2,size/2]],2:[[g,g],[size-g,size-g]],3:[[g,g],[size/2,size/2],[size-g,size-g]],4:[[g,g],[size-g,g],[g,size-g],[size-g,size-g]],5:[[g,g],[size-g,g],[size/2,size/2],[g,size-g],[size-g,size-g]],6:[[g,g],[size-g,g],[g,size/2],[size-g,size/2],[g,size-g],[size-g,size-g]]};centers[face].forEach(_ref2=>{let[x,y]=_ref2;return dot(x,y);});const tex=new THREE.CanvasTexture(cvs);tex.needsUpdate=true;return tex;};// initialize three scene\nuseEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const scene=new THREE.Scene();scene.background=new THREE.Color(0x000000);const camera=new THREE.PerspectiveCamera(45,1,0.1,1000);camera.position.z=4;const renderer=new THREE.WebGLRenderer({canvas,antialias:true,alpha:true});renderer.setSize(size,size);renderer.shadowMap.enabled=true;renderer.shadowMap.type=THREE.PCFSoftShadowMap;// lights\nconst ambient=new THREE.AmbientLight(0xffffff,0.6);scene.add(ambient);const dir=new THREE.DirectionalLight(0xffffff,1.0);dir.position.set(5,10,7);dir.castShadow=true;dir.shadow.mapSize.width=1024;dir.shadow.mapSize.height=1024;dir.shadow.camera.left=-5;dir.shadow.camera.right=5;dir.shadow.camera.top=5;dir.shadow.camera.bottom=-5;scene.add(dir);// ground plane to receive shadow\nconst planeGeo=new THREE.PlaneGeometry(10,10);const planeMat=new THREE.ShadowMaterial({opacity:0.35});const plane=new THREE.Mesh(planeGeo,planeMat);plane.rotation.x=-Math.PI/2;plane.position.y=-1.1;plane.receiveShadow=true;scene.add(plane);// Create a simple procedural equirectangular-like texture for subtle reflections\nlet generatedEnvMap=null;try{const envCanvas=document.createElement('canvas');envCanvas.width=envCanvas.height=256;const ectx=envCanvas.getContext('2d');// simple radial gradient\nconst grad=ectx.createRadialGradient(128,128,20,128,128,140);grad.addColorStop(0,'#ffffff');grad.addColorStop(0.5,'#ccccff');grad.addColorStop(1,'#556688');ectx.fillStyle=grad;ectx.fillRect(0,0,256,256);const envTex=new THREE.CanvasTexture(envCanvas);envTex.mapping=THREE.EquirectangularReflectionMapping;const pmremGen=new THREE.PMREMGenerator(renderer);pmremGen.compileEquirectangularShader();generatedEnvMap=pmremGen.fromEquirectangular(envTex).texture;scene.environment=generatedEnvMap;}catch(e){// ignore if PMREM not supported in environment\ngeneratedEnvMap=null;}// cube\nconst materials=[1,2,3,4,5,6].map(f=>new THREE.MeshStandardMaterial({map:createFaceTexture(f),metalness:0.4,roughness:0.25,envMapIntensity:1.0}));const geometry=new THREE.BoxGeometry(2,2,2);const cube=new THREE.Mesh(geometry,materials);cube.castShadow=true;cube.receiveShadow=false;scene.add(cube);// If we generated an environment map, apply it to materials for reflections\nif(generatedEnvMap){try{materials.forEach(m=>{m.envMap=generatedEnvMap;m.envMapIntensity=0.8;m.needsUpdate=true;});}catch(e){}}sceneRef.current=scene;cubeRef.current=cube;rendererRef.current=renderer;cameraRef.current=camera;// Ensure canvas is anchored bottom-right and has no initial transform\ntry{const el=canvas;el.style.position='fixed';el.style.right='20px';el.style.bottom='20px';el.style.left='';el.style.top='';el.style.transform='';el.style.transition='';}catch(e){}// animation loop\n// previous rotation for motion-blur estimation\nconst prevRot={x:0,y:0,z:0};const animate=()=>{animIdRef.current=requestAnimationFrame(animate);// subtle idle rotate\nif(cube){// only apply subtle idle motion while an active roll timeline is running\nif(!isSettledRef.current){cube.rotation.x*=0.995;cube.rotation.y*=0.995;// compute angular velocity\nconst dx=cube.rotation.x-prevRot.x;const dy=cube.rotation.y-prevRot.y;const dz=cube.rotation.z-prevRot.z;const angSpeed=Math.sqrt(dx*dx+dy*dy+dz*dz);// map angular speed to CSS blur (px)\nconst blurPx=Math.min(12,angSpeed*120);try{const el=canvas;if(el&&el.style){el.style.filter=blurPx>0.3?\"blur(\".concat(blurPx.toFixed(2),\"px)\"):'none';}}catch(e){}prevRot.x=cube.rotation.x;prevRot.y=cube.rotation.y;prevRot.z=cube.rotation.z;}else{// settled: ensure no blur and reset prevRot\ntry{const el=canvas;if(el&&el.style)el.style.filter='none';}catch(e){}prevRot.x=cube.rotation.x;prevRot.y=cube.rotation.y;prevRot.z=cube.rotation.z;}}renderer.render(scene,camera);};animate();return()=>{cancelAnimationFrame(animIdRef.current);renderer.dispose();};},[size]);// roll logic (includes DOM motion)\nconst rollInternal=useCallback(targetFace=>{if(!cubeRef.current)return;const cube=cubeRef.current;// pick target if not provided\nconst face=targetFace!==null&&targetFace!==void 0?targetFace:1+Math.floor(Math.random()*6);// orientation map: face -> Euler rotation (approx)\nconst orientations={1:[0,0,0],2:[0,Math.PI/2,0],3:[-Math.PI/2,0,0],4:[Math.PI/2,0,0],5:[0,-Math.PI/2,0],6:[Math.PI,0,0]};// Support an override mapping from engine face -> visual orientation index for quick calibration\nconst faceMap=window.__pc_dice_face_map;const mappedFace=faceMap&&Number.isFinite(faceMap[face])?faceMap[face]:face;const[tx,ty,tz]=orientations[mappedFace];// compute a target quaternion for exact-face alignment (prefer quaternion-based final set)\nlet targetQuat=null;try{const faceNormals={1:new THREE.Vector3(1,0,0),// +X\n2:new THREE.Vector3(-1,0,0),// -X\n3:new THREE.Vector3(0,1,0),// +Y\n4:new THREE.Vector3(0,-1,0),// -Y\n5:new THREE.Vector3(0,0,1),// +Z\n6:new THREE.Vector3(0,0,-1)// -Z\n};const normal=faceNormals[mappedFace];if(normal){const target=new THREE.Vector3(0,0,1);// point towards camera\ntargetQuat=new THREE.Quaternion().setFromUnitVectors(normal.clone().normalize(),target);}}catch(e){targetQuat=null;}const start={x:cube.rotation.x,y:cube.rotation.y,z:cube.rotation.z};const end={x:tx+2*Math.PI,y:ty+2*Math.PI,z:tz+2*Math.PI};// Ensure any previous rotation tweens on cube are killed so they can't override final orientation\ntry{if(cube){gsap.killTweensOf(cube);gsap.killTweensOf(cube.rotation);}}catch(e){}// Use GSAP timeline for smooth rotation + bounces and DOM motion\nconst timeline=gsap.timeline({onStart:()=>{// mark as active so idle loop applies motion\ntry{isSettledRef.current=false;}catch(e){}},onComplete:()=>{// explicitly kill any remaining tweens affecting cube\ntry{if(cube){gsap.killTweensOf(cube);gsap.killTweensOf(cube.rotation);}}catch(e){}// if we could compute a target quaternion, apply it to show the correct face deterministically\nif(targetQuat&&cube){try{cube.quaternion.copy(targetQuat);try{gsap.set(cube.quaternion,{x:targetQuat.x,y:targetQuat.y,z:targetQuat.z,w:targetQuat.w});}catch(e){}}catch(e){/* fallback to euler */}}else{cube.rotation.set(tx,ty,tz);try{gsap.set(cube.rotation,{x:tx,y:ty,z:tz});}catch(e){}}// force a final render so the UI immediately reflects the exact face\ntry{var _rendererRef$current;(_rendererRef$current=rendererRef.current)===null||_rendererRef$current===void 0?void 0:_rendererRef$current.render(sceneRef.current,cameraRef.current);}catch(e){}try{isSettledRef.current=true;}catch(e){}enhancedOnRoll(face);}});// ensure any previous tweens are cleared and canvas anchored bottom-right\nconst canvasEl=canvasRef.current;if(canvasEl){try{gsap.killTweensOf(canvasEl);}catch(e){}try{canvasEl.style.transform='';canvasEl.style.transition='';canvasEl.style.left='';canvasEl.style.top='';canvasEl.style.right='20px';canvasEl.style.bottom='20px';canvasEl.style.willChange='auto';}catch(e){}}if(spinOnly){// keep canvas fixed bottom-right with no transform\nif(canvasEl&&canvasEl.style){gsap.set(canvasEl,{x:0,y:0,filter:'blur(0px)'});canvasEl.style.right='20px';canvasEl.style.bottom='20px';}}else{// physics-like multi-bounce motion across screen\nif(canvasEl&&canvasEl.style){canvasEl.style.position='fixed';canvasEl.style.left='0px';canvasEl.style.top='0px';canvasEl.style.willChange='transform, filter';// initial velocity and angle\nconst speedBase=Math.max(200,duration*0.6);// px per second scale\nconst angle=Math.random()*Math.PI*2;let vx=Math.cos(angle)*(speedBase*(0.6+Math.random()*0.8));let vy=Math.sin(angle)*(speedBase*(0.6+Math.random()*0.8));// start position: bottom-right corner with small margin\nconst margin=20;const startX=Math.max(0,window.innerWidth-size-margin);const startY=Math.max(0,window.innerHeight-size-margin);let x=startX;let y=startY;gsap.set(canvasEl,{x,y,filter:'blur(0px)'});// final target: within 100px radius around screen center\nconst centerX=Math.round(window.innerWidth/2-size/2);const centerY=Math.round(window.innerHeight/2-size/2);const radius=100;const angT=Math.random()*Math.PI*2;const endX=Math.max(0,Math.min(window.innerWidth-size,centerX+Math.cos(angT)*(Math.random()*radius)));const endY=Math.max(0,Math.min(window.innerHeight-size,centerY+Math.sin(angT)*(Math.random()*radius)));// generate bounces until energy low or max 6 bounces\nconst bounces=[];let energy=Math.hypot(vx,vy);const damp=0.45+Math.random()*0.18;// energy retention per bounce\nconst maxBounces=6;for(let i=0;i<maxBounces&&energy>80;i++){// project next position with simple friction\nconst dt=duration/1000*(0.25+Math.random()*0.35);const nx=x+vx*dt;const ny=y+vy*dt+200*(Math.random()-0.5)*0.1;// slight gravity variation\nconst dur=Math.max(0.06,dt*(0.6+Math.random()*0.6));const blur=Math.min(6,energy/200);bounces.push({nx,ny,dur,blur});// update for next\nx=nx;y=ny;energy*=damp*(0.8+Math.random()*0.4);// random angle change\nconst angChange=(Math.random()-0.5)*0.8;const vAngle=Math.atan2(vy,vx)+angChange;const vMag=energy;vx=Math.cos(vAngle)*vMag*0.02;vy=Math.sin(vAngle)*vMag*0.02;}// schedule bounces in timeline\nlet tOffset=0;for(const b of bounces){timeline.to(canvasEl,{duration:b.dur,x:b.nx,y:b.ny,ease:'power2.out'},tOffset);timeline.to(canvasEl,{duration:b.dur,filter:\"blur(\".concat(b.blur,\"px)\")},tOffset);tOffset+=b.dur*0.9;}// final settle to the computed center-target\ntimeline.to(canvasEl,{duration:0.12,x:endX,y:endY,ease:'power1.out'},'>-0.02');timeline.to(canvasEl,{duration:0.12,filter:'blur(0px)',ease:'power1.out'},'>-0.02');}}// rotation: spin multiple revolutions then ease to final orientation\n// we'll use a GSAP ticker to update cube.rotation\nconst totalSpins=3+Math.floor(Math.random()*4);const rotEnd={x:end.x,y:end.y,z:end.z};const rotStart={x:start.x,y:start.y,z:start.z};// animate rotation using timeline with an onUpdate that writes to cube\nlet progress={t:0};timeline.to(progress,{t:1,duration:duration/1000,ease:'power3.out',onUpdate:()=>{const k=progress.t;// combine ease with extra spins\nconst spinFactor=1-Math.pow(1-k,3);const currentX=rotStart.x+(rotEnd.x-rotStart.x)*k+totalSpins*Math.PI*2*(1-(1-k));const currentY=rotStart.y+(rotEnd.y-rotStart.y)*k+totalSpins*Math.PI*2*(1-(1-k));const currentZ=rotStart.z+(rotEnd.z-rotStart.z)*k+totalSpins*Math.PI*2*(1-(1-k));cube.rotation.set(currentX,currentY,currentZ);}});// small multi-bounce sequence on completion (scale + tilt)\ntimeline.to(cube.scale,{x:1.08,y:0.90,z:0.9,duration:0.07,ease:'power2.out'},'>-0.05');timeline.to(cube.scale,{x:0.95,y:1.07,z:0.95,duration:0.06,ease:'power2.in'});timeline.to(cube.scale,{x:1.03,y:0.98,z:1.02,duration:0.05,ease:'power2.out'});timeline.to(cube.scale,{x:1,y:1,z:1,duration:0.04,ease:'power2.out'});},[duration,onRoll,spinOnly,size]);useImperativeHandle(ref,()=>({roll:()=>rollInternal(),rollTo:face=>rollInternal(Math.max(1,Math.min(6,face)))}),[rollInternal]);// click to roll\nuseEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const handler=()=>rollInternal();canvas.addEventListener('click',handler);return()=>canvas.removeEventListener('click',handler);},[rollInternal]);// auto-roll when requested by corruption system\nuseEffect(()=>{const handler=ev=>{console.log('ðŸŽ² DICE: Received auto-roll request (start visual spin)',ev.detail);lastRequestRef.current=ev.detail;// store player/targetUid\n// start a visual spin without finalizing face - wait for engine result\ntry{isSettledRef.current=false;if(spinningTweenRef.current){try{spinningTweenRef.current.kill();}catch(e){}}const cube=cubeRef.current;if(cube){spinningTweenRef.current=gsap.to(cube.rotation,{y:'+=6.283',duration:0.6,repeat:-1,ease:'none'});}}catch(e){console.debug('dice spin start error',e);}};window.addEventListener('pc:ui_request_dice_roll',handler);return()=>window.removeEventListener('pc:ui_request_dice_roll',handler);},[rollInternal]);// listen for engine-calculated dice result to display exact value\nuseEffect(()=>{const handler=ev=>{const{roll}=ev.detail||{};if(roll&&typeof roll==='number'&&roll>=1&&roll<=6){console.log('ðŸŽ² DICE: Engine calculated roll received:',roll,'- displaying exact value');lastRequestRef.current=ev.detail;// store player/targetUid\n// stop any visual spinning tween before finalizing to exact face\ntry{if(spinningTweenRef.current){spinningTweenRef.current.kill();spinningTweenRef.current=null;}}catch(e){}// ensure no lingering tweens apply, then display exact face\ntry{const cube=cubeRef.current;if(cube){gsap.killTweensOf(cube);gsap.killTweensOf(cube.rotation);}}catch(e){}rollInternal(roll);// roll to exact face\n}};window.addEventListener('pc:engine_dice_result',handler);return()=>window.removeEventListener('pc:engine_dice_result',handler);},[rollInternal]);// dispatch dice result including player info\nconst enhancedOnRoll=useCallback(face=>{onRoll===null||onRoll===void 0?void 0:onRoll(face);try{const det=lastRequestRef.current||{};window.dispatchEvent(new CustomEvent('pc:dice_result',{detail:{roll:face,player:det.player,targetUid:det.targetUid}}));}catch(e){console.error('dice_result dispatch error',e);}},[onRoll]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:size,height:size,className:className,style:{cursor:'pointer'}});});export default Dice3D;","map":{"version":3,"names":["React","useEffect","useRef","useImperativeHandle","forwardRef","useCallback","THREE","gsap","jsx","_jsx","Dice3D","_ref","ref","size","duration","onRoll","className","spinOnly","canvasRef","sceneRef","cubeRef","rendererRef","cameraRef","animIdRef","lastRequestRef","isSettledRef","spinningTweenRef","createFaceTexture","face","cvs","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","dot","x","y","beginPath","arc","Math","PI","fill","g","centers","forEach","_ref2","tex","CanvasTexture","needsUpdate","canvas","current","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","shadowMap","enabled","type","PCFSoftShadowMap","ambient","AmbientLight","add","dir","DirectionalLight","set","castShadow","shadow","mapSize","left","right","top","bottom","planeGeo","PlaneGeometry","planeMat","ShadowMaterial","opacity","plane","Mesh","rotation","receiveShadow","generatedEnvMap","envCanvas","ectx","grad","createRadialGradient","addColorStop","envTex","mapping","EquirectangularReflectionMapping","pmremGen","PMREMGenerator","compileEquirectangularShader","fromEquirectangular","texture","environment","e","materials","map","f","MeshStandardMaterial","metalness","roughness","envMapIntensity","geometry","BoxGeometry","cube","m","envMap","el","style","transform","transition","prevRot","animate","requestAnimationFrame","dx","dy","dz","angSpeed","sqrt","blurPx","min","filter","concat","toFixed","render","cancelAnimationFrame","dispose","rollInternal","targetFace","floor","random","orientations","faceMap","window","__pc_dice_face_map","mappedFace","Number","isFinite","tx","ty","tz","targetQuat","faceNormals","Vector3","normal","target","Quaternion","setFromUnitVectors","clone","normalize","start","end","killTweensOf","timeline","onStart","onComplete","quaternion","copy","w","_rendererRef$current","enhancedOnRoll","canvasEl","willChange","speedBase","max","angle","vx","cos","vy","sin","margin","startX","innerWidth","startY","innerHeight","centerX","round","centerY","radius","angT","endX","endY","bounces","energy","hypot","damp","maxBounces","i","dt","nx","ny","dur","blur","push","angChange","vAngle","atan2","vMag","tOffset","b","to","ease","totalSpins","rotEnd","rotStart","progress","t","onUpdate","k","spinFactor","pow","currentX","currentY","currentZ","scale","roll","rollTo","handler","addEventListener","removeEventListener","ev","console","log","detail","kill","repeat","debug","det","dispatchEvent","CustomEvent","player","targetUid","error","cursor"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/components/Dice3D.tsx"],"sourcesContent":["import React, { useEffect, useRef, useImperativeHandle, forwardRef, useCallback } from 'react';\nimport * as THREE from 'three';\nimport gsap from 'gsap';\n\nexport interface Dice3DProps {\n  /** pixel size of canvas */\n  size?: number;\n  /** roll animation duration in ms */\n  duration?: number;\n  /** callback when roll ends */\n  onRoll?: (face: number) => void;\n  className?: string;\n  /** if true, only spin in place; if false, do screen bounces */\n  spinOnly?: boolean;\n}\n\nexport interface Dice3DHandle {\n  roll: () => void;\n  rollTo: (face: number) => void;\n}\n\n/**\n * Dice3D â€“ simple WebGL dice rendered with three.js\n * Usage:\n *   const diceRef = useRef<Dice3DHandle>(null);\n *   <Dice3D ref={diceRef} onRoll={(f)=>console.log(f)}/>\n *   diceRef.current?.roll();\n */\nconst Dice3D = forwardRef<Dice3DHandle, Dice3DProps>(\n  ({ size = 180, duration = 1200, onRoll, className, spinOnly = true }: Dice3DProps, ref) => {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    const sceneRef = useRef<THREE.Scene>();\n    const cubeRef = useRef<THREE.Mesh>();\n    const rendererRef = useRef<THREE.WebGLRenderer>();\n    const cameraRef = useRef<THREE.PerspectiveCamera>();\n    const animIdRef = useRef(0);\n    const lastRequestRef = useRef<any>(null);\n    const isSettledRef = useRef<boolean>(true); // when true, dice remain static until next roll\n    const spinningTweenRef = useRef<any>(null);\n\n    /** helper to create a texture with pips */\n    const createFaceTexture = (face: number): THREE.Texture => {\n      const size = 128;\n      const cvs = document.createElement('canvas');\n      cvs.width = cvs.height = size;\n      const ctx = cvs.getContext('2d')!;\n      ctx.fillStyle = '#fff';\n      ctx.fillRect(0, 0, size, size);\n      ctx.fillStyle = '#111';\n\n      const dot = (x: number, y: number) => {\n        ctx.beginPath();\n        ctx.arc(x, y, size * 0.1, 0, Math.PI * 2);\n        ctx.fill();\n      };\n      const g = size * 0.25;\n      const centers: Record<number, Array<[number, number]>> = {\n        1: [[size / 2, size / 2]],\n        2: [[g, g], [size - g, size - g]],\n        3: [[g, g], [size / 2, size / 2], [size - g, size - g]],\n        4: [[g, g], [size - g, g], [g, size - g], [size - g, size - g]],\n        5: [[g, g], [size - g, g], [size / 2, size / 2], [g, size - g], [size - g, size - g]],\n        6: [[g, g], [size - g, g], [g, size / 2], [size - g, size / 2], [g, size - g], [size - g, size - g]],\n      };\n      centers[face].forEach(([x, y]) => dot(x, y));\n      const tex = new THREE.CanvasTexture(cvs);\n      tex.needsUpdate = true;\n      return tex;\n    };\n\n    // initialize three scene\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const scene = new THREE.Scene();\n      scene.background = new THREE.Color(0x000000);\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\n      camera.position.z = 4;\n      const renderer = new THREE.WebGLRenderer({ canvas, antialias: true, alpha: true });\n      renderer.setSize(size, size);\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n      // lights\n      const ambient = new THREE.AmbientLight(0xffffff, 0.6);\n      scene.add(ambient);\n      const dir = new THREE.DirectionalLight(0xffffff, 1.0);\n      dir.position.set(5, 10, 7);\n      dir.castShadow = true;\n      dir.shadow.mapSize.width = 1024;\n      dir.shadow.mapSize.height = 1024;\n      dir.shadow.camera.left = -5;\n      dir.shadow.camera.right = 5;\n      dir.shadow.camera.top = 5;\n      dir.shadow.camera.bottom = -5;\n      scene.add(dir);\n\n      // ground plane to receive shadow\n      const planeGeo = new THREE.PlaneGeometry(10, 10);\n      const planeMat = new THREE.ShadowMaterial({ opacity: 0.35 });\n      const plane = new THREE.Mesh(planeGeo, planeMat);\n      plane.rotation.x = -Math.PI / 2;\n      plane.position.y = -1.1;\n      plane.receiveShadow = true;\n      scene.add(plane);\n\n      // Create a simple procedural equirectangular-like texture for subtle reflections\n      let generatedEnvMap: THREE.Texture | null = null;\n      try {\n        const envCanvas = document.createElement('canvas');\n        envCanvas.width = envCanvas.height = 256;\n        const ectx = envCanvas.getContext('2d')!;\n        // simple radial gradient\n        const grad = ectx.createRadialGradient(128, 128, 20, 128, 128, 140);\n        grad.addColorStop(0, '#ffffff');\n        grad.addColorStop(0.5, '#ccccff');\n        grad.addColorStop(1, '#556688');\n        ectx.fillStyle = grad;\n        ectx.fillRect(0, 0, 256, 256);\n        const envTex = new THREE.CanvasTexture(envCanvas);\n        envTex.mapping = THREE.EquirectangularReflectionMapping;\n        const pmremGen = new THREE.PMREMGenerator(renderer);\n        pmremGen.compileEquirectangularShader();\n        generatedEnvMap = pmremGen.fromEquirectangular(envTex).texture;\n        scene.environment = generatedEnvMap;\n      } catch (e) {\n        // ignore if PMREM not supported in environment\n        generatedEnvMap = null;\n      }\n\n      // cube\n      const materials = [1, 2, 3, 4, 5, 6].map(f => new THREE.MeshStandardMaterial({ map: createFaceTexture(f), metalness: 0.4, roughness: 0.25, envMapIntensity: 1.0 }));\n      const geometry = new THREE.BoxGeometry(2, 2, 2);\n      const cube = new THREE.Mesh(geometry, materials);\n      cube.castShadow = true;\n      cube.receiveShadow = false;\n      scene.add(cube);\n\n      // If we generated an environment map, apply it to materials for reflections\n      if (generatedEnvMap) {\n        try {\n          materials.forEach((m: any) => {\n            m.envMap = generatedEnvMap;\n            m.envMapIntensity = 0.8;\n            m.needsUpdate = true;\n          });\n        } catch (e) {}\n      }\n\n      sceneRef.current = scene;\n      cubeRef.current = cube;\n      rendererRef.current = renderer;\n      cameraRef.current = camera;\n\n      // Ensure canvas is anchored bottom-right and has no initial transform\n      try {\n        const el = canvas as HTMLCanvasElement;\n        el.style.position = 'fixed';\n        el.style.right = '20px';\n        el.style.bottom = '20px';\n        el.style.left = '';\n        el.style.top = '';\n        el.style.transform = '';\n        el.style.transition = '';\n      } catch (e) {}\n\n      // animation loop\n      // previous rotation for motion-blur estimation\n      const prevRot = { x: 0, y: 0, z: 0 };\n      const animate = () => {\n        animIdRef.current = requestAnimationFrame(animate);\n        // subtle idle rotate\n        if (cube) {\n          // only apply subtle idle motion while an active roll timeline is running\n          if (!isSettledRef.current) {\n            cube.rotation.x *= 0.995;\n            cube.rotation.y *= 0.995;\n\n            // compute angular velocity\n            const dx = cube.rotation.x - prevRot.x;\n            const dy = cube.rotation.y - prevRot.y;\n            const dz = cube.rotation.z - prevRot.z;\n            const angSpeed = Math.sqrt(dx * dx + dy * dy + dz * dz);\n\n            // map angular speed to CSS blur (px)\n            const blurPx = Math.min(12, angSpeed * 120);\n            try {\n              const el = canvas as HTMLCanvasElement;\n              if (el && el.style) {\n                el.style.filter = blurPx > 0.3 ? `blur(${blurPx.toFixed(2)}px)` : 'none';\n              }\n            } catch (e) {}\n\n            prevRot.x = cube.rotation.x;\n            prevRot.y = cube.rotation.y;\n            prevRot.z = cube.rotation.z;\n          } else {\n            // settled: ensure no blur and reset prevRot\n            try { const el = canvas as HTMLCanvasElement; if (el && el.style) el.style.filter = 'none'; } catch(e) {}\n            prevRot.x = cube.rotation.x;\n            prevRot.y = cube.rotation.y;\n            prevRot.z = cube.rotation.z;\n          }\n        }\n        renderer.render(scene, camera);\n      };\n      animate();\n\n      return () => {\n        cancelAnimationFrame(animIdRef.current);\n        renderer.dispose();\n      };\n    }, [size]);\n\n    // roll logic (includes DOM motion)\n    const rollInternal = useCallback((targetFace?: number) => {\n      if (!cubeRef.current) return;\n      const cube = cubeRef.current;\n      // pick target if not provided\n      const face = targetFace ?? (1 + Math.floor(Math.random() * 6));\n\n      // orientation map: face -> Euler rotation (approx)\n      const orientations: Record<number, [number, number, number]> = {\n        1: [0, 0, 0],\n        2: [0, Math.PI / 2, 0],\n        3: [-Math.PI / 2, 0, 0],\n        4: [Math.PI / 2, 0, 0],\n        5: [0, -Math.PI / 2, 0],\n        6: [Math.PI, 0, 0],\n      };\n      // Support an override mapping from engine face -> visual orientation index for quick calibration\n      const faceMap = (window as any).__pc_dice_face_map as number[] | undefined;\n      const mappedFace = (faceMap && Number.isFinite(faceMap[face]) ? faceMap[face] : face) as number;\n      const [tx, ty, tz] = orientations[mappedFace];\n\n      // compute a target quaternion for exact-face alignment (prefer quaternion-based final set)\n      let targetQuat: THREE.Quaternion | null = null;\n      try {\n        const faceNormals: Record<number, THREE.Vector3> = {\n          1: new THREE.Vector3(1, 0, 0),   // +X\n          2: new THREE.Vector3(-1, 0, 0),  // -X\n          3: new THREE.Vector3(0, 1, 0),   // +Y\n          4: new THREE.Vector3(0, -1, 0),  // -Y\n          5: new THREE.Vector3(0, 0, 1),   // +Z\n          6: new THREE.Vector3(0, 0, -1),  // -Z\n        };\n        const normal = faceNormals[mappedFace];\n        if (normal) {\n          const target = new THREE.Vector3(0, 0, 1); // point towards camera\n          targetQuat = new THREE.Quaternion().setFromUnitVectors(normal.clone().normalize(), target);\n        }\n      } catch (e) { targetQuat = null; }\n\n      const start = { x: cube.rotation.x, y: cube.rotation.y, z: cube.rotation.z };\n      const end = { x: tx + 2 * Math.PI, y: ty + 2 * Math.PI, z: tz + 2 * Math.PI };\n\n      // Ensure any previous rotation tweens on cube are killed so they can't override final orientation\n      try { if (cube) { gsap.killTweensOf(cube); gsap.killTweensOf(cube.rotation); } } catch (e) {}\n      // Use GSAP timeline for smooth rotation + bounces and DOM motion\n      const timeline = gsap.timeline({ onStart: () => {\n        // mark as active so idle loop applies motion\n        try { isSettledRef.current = false; } catch(e) {}\n      }, onComplete: () => {\n        // explicitly kill any remaining tweens affecting cube\n        try { if (cube) { gsap.killTweensOf(cube); gsap.killTweensOf(cube.rotation); } } catch(e) {}\n        // if we could compute a target quaternion, apply it to show the correct face deterministically\n        if (targetQuat && cube) {\n          try {\n            cube.quaternion.copy(targetQuat);\n            try { gsap.set(cube.quaternion, { x: targetQuat.x, y: targetQuat.y, z: targetQuat.z, w: targetQuat.w }); } catch(e) {}\n          } catch(e) { /* fallback to euler */ }\n        } else {\n          cube.rotation.set(tx, ty, tz);\n          try { gsap.set(cube.rotation, { x: tx, y: ty, z: tz }); } catch(e) {}\n        }\n        // force a final render so the UI immediately reflects the exact face\n        try { rendererRef.current?.render(sceneRef.current as any, cameraRef.current as any); } catch(e) {}\n        try { isSettledRef.current = true; } catch(e) {}\n        enhancedOnRoll(face);\n      }});\n\n      // ensure any previous tweens are cleared and canvas anchored bottom-right\n      const canvasEl = canvasRef.current as HTMLCanvasElement | null;\n      if (canvasEl) {\n        try { gsap.killTweensOf(canvasEl); } catch (e) {}\n        try {\n          canvasEl.style.transform = '';\n          canvasEl.style.transition = '';\n          canvasEl.style.left = '';\n          canvasEl.style.top = '';\n          canvasEl.style.right = '20px';\n          canvasEl.style.bottom = '20px';\n          canvasEl.style.willChange = 'auto';\n        } catch (e) {}\n      }\n\n      if (spinOnly) {\n        // keep canvas fixed bottom-right with no transform\n        if (canvasEl && canvasEl.style) {\n          gsap.set(canvasEl, { x: 0, y: 0, filter: 'blur(0px)' });\n          canvasEl.style.right = '20px';\n          canvasEl.style.bottom = '20px';\n        }\n      } else {\n        // physics-like multi-bounce motion across screen\n        if (canvasEl && canvasEl.style) {\n          canvasEl.style.position = 'fixed';\n          canvasEl.style.left = '0px';\n          canvasEl.style.top = '0px';\n          canvasEl.style.willChange = 'transform, filter';\n\n          // initial velocity and angle\n          const speedBase = Math.max(200, duration * 0.6); // px per second scale\n          const angle = Math.random() * Math.PI * 2;\n          let vx = Math.cos(angle) * (speedBase * (0.6 + Math.random() * 0.8));\n          let vy = Math.sin(angle) * (speedBase * (0.6 + Math.random() * 0.8));\n\n          // start position: bottom-right corner with small margin\n          const margin = 20;\n          const startX = Math.max(0, window.innerWidth - size - margin);\n          const startY = Math.max(0, window.innerHeight - size - margin);\n          let x = startX;\n          let y = startY;\n          gsap.set(canvasEl, { x, y, filter: 'blur(0px)' });\n\n          // final target: within 100px radius around screen center\n          const centerX = Math.round(window.innerWidth / 2 - size / 2);\n          const centerY = Math.round(window.innerHeight / 2 - size / 2);\n          const radius = 100;\n          const angT = Math.random() * Math.PI * 2;\n          const endX = Math.max(0, Math.min(window.innerWidth - size, centerX + Math.cos(angT) * (Math.random() * radius)));\n          const endY = Math.max(0, Math.min(window.innerHeight - size, centerY + Math.sin(angT) * (Math.random() * radius)));\n\n          // generate bounces until energy low or max 6 bounces\n          const bounces: Array<{ nx: number; ny: number; dur: number; blur: number }> = [];\n          let energy = Math.hypot(vx, vy);\n          const damp = 0.45 + Math.random() * 0.18; // energy retention per bounce\n          const maxBounces = 6;\n          for (let i = 0; i < maxBounces && energy > 80; i++) {\n            // project next position with simple friction\n            const dt = (duration / 1000) * (0.25 + Math.random() * 0.35);\n            const nx = x + vx * dt;\n            const ny = y + vy * dt + 200 * (Math.random() - 0.5) * 0.1; // slight gravity variation\n            const dur = Math.max(0.06, dt * (0.6 + Math.random() * 0.6));\n            const blur = Math.min(6, energy / 200);\n            bounces.push({ nx, ny, dur, blur });\n\n            // update for next\n            x = nx; y = ny;\n            energy *= damp * (0.8 + Math.random() * 0.4);\n            // random angle change\n            const angChange = (Math.random() - 0.5) * 0.8;\n            const vAngle = Math.atan2(vy, vx) + angChange;\n            const vMag = energy;\n            vx = Math.cos(vAngle) * vMag * 0.02;\n            vy = Math.sin(vAngle) * vMag * 0.02;\n          }\n\n          // schedule bounces in timeline\n          let tOffset = 0;\n          for (const b of bounces) {\n            timeline.to(canvasEl, { duration: b.dur, x: b.nx, y: b.ny, ease: 'power2.out' }, tOffset);\n            timeline.to(canvasEl, { duration: b.dur, filter: `blur(${b.blur}px)` }, tOffset);\n            tOffset += b.dur * 0.9;\n          }\n          // final settle to the computed center-target\n          timeline.to(canvasEl, { duration: 0.12, x: endX, y: endY, ease: 'power1.out' }, '>-0.02');\n          timeline.to(canvasEl, { duration: 0.12, filter: 'blur(0px)', ease: 'power1.out' }, '>-0.02');\n        }\n      }\n\n      // rotation: spin multiple revolutions then ease to final orientation\n      // we'll use a GSAP ticker to update cube.rotation\n      const totalSpins = 3 + Math.floor(Math.random() * 4);\n      const rotEnd = { x: end.x, y: end.y, z: end.z };\n      const rotStart = { x: start.x, y: start.y, z: start.z };\n\n      // animate rotation using timeline with an onUpdate that writes to cube\n      let progress = { t: 0 };\n      timeline.to(progress, {\n        t: 1,\n        duration: duration / 1000,\n        ease: 'power3.out',\n        onUpdate: () => {\n          const k = progress.t;\n          // combine ease with extra spins\n          const spinFactor = 1 - Math.pow(1 - k, 3);\n          const currentX = rotStart.x + (rotEnd.x - rotStart.x) * k + totalSpins * Math.PI * 2 * (1 - (1 - k));\n          const currentY = rotStart.y + (rotEnd.y - rotStart.y) * k + totalSpins * Math.PI * 2 * (1 - (1 - k));\n          const currentZ = rotStart.z + (rotEnd.z - rotStart.z) * k + totalSpins * Math.PI * 2 * (1 - (1 - k));\n          cube.rotation.set(currentX, currentY, currentZ);\n        }\n      });\n\n      // small multi-bounce sequence on completion (scale + tilt)\n      timeline.to(cube.scale, { x: 1.08, y: 0.90, z: 0.9, duration: 0.07, ease: 'power2.out' }, '>-0.05');\n      timeline.to(cube.scale, { x: 0.95, y: 1.07, z: 0.95, duration: 0.06, ease: 'power2.in' });\n      timeline.to(cube.scale, { x: 1.03, y: 0.98, z: 1.02, duration: 0.05, ease: 'power2.out' });\n      timeline.to(cube.scale, { x: 1, y: 1, z: 1, duration: 0.04, ease: 'power2.out' });\n    }, [duration, onRoll, spinOnly, size]);\n\n    useImperativeHandle(ref, () => ({\n      roll: () => rollInternal(),\n      rollTo: (face: number) => rollInternal(Math.max(1, Math.min(6, face))),\n    }), [rollInternal]);\n\n    // click to roll\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const handler = () => rollInternal();\n      canvas.addEventListener('click', handler);\n      return () => canvas.removeEventListener('click', handler);\n    }, [rollInternal]);\n\n    // auto-roll when requested by corruption system\n    useEffect(() => {\n      const handler = (ev: any) => {\n        console.log('ðŸŽ² DICE: Received auto-roll request (start visual spin)', ev.detail);\n        lastRequestRef.current = ev.detail; // store player/targetUid\n        // start a visual spin without finalizing face - wait for engine result\n        try {\n          isSettledRef.current = false;\n          if (spinningTweenRef.current) { try { spinningTweenRef.current.kill(); } catch(e) {} }\n          const cube = cubeRef.current;\n          if (cube) {\n            spinningTweenRef.current = gsap.to(cube.rotation, { y: '+=6.283', duration: 0.6, repeat: -1, ease: 'none' });\n          }\n        } catch(e) { console.debug('dice spin start error', e); }\n      };\n      window.addEventListener('pc:ui_request_dice_roll', handler as EventListener);\n      return () => window.removeEventListener('pc:ui_request_dice_roll', handler as EventListener);\n    }, [rollInternal]);\n\n    // listen for engine-calculated dice result to display exact value\n    useEffect(() => {\n      const handler = (ev: any) => {\n        const { roll } = ev.detail || {};\n        if (roll && typeof roll === 'number' && roll >= 1 && roll <= 6) {\n          console.log('ðŸŽ² DICE: Engine calculated roll received:', roll, '- displaying exact value');\n          lastRequestRef.current = ev.detail; // store player/targetUid\n          // stop any visual spinning tween before finalizing to exact face\n          try { if (spinningTweenRef.current) { spinningTweenRef.current.kill(); spinningTweenRef.current = null; } } catch(e) {}\n          // ensure no lingering tweens apply, then display exact face\n          try { const cube = cubeRef.current; if (cube) { gsap.killTweensOf(cube); gsap.killTweensOf(cube.rotation); } } catch(e) {}\n          rollInternal(roll); // roll to exact face\n        }\n      };\n      window.addEventListener('pc:engine_dice_result', handler as EventListener);\n      return () => window.removeEventListener('pc:engine_dice_result', handler as EventListener);\n    }, [rollInternal]);\n\n    // dispatch dice result including player info\n    const enhancedOnRoll = useCallback((face:number)=>{\n      onRoll?.(face);\n      try {\n        const det = lastRequestRef.current || {};\n        window.dispatchEvent(new CustomEvent('pc:dice_result', { detail: { roll: face, player: det.player, targetUid: det.targetUid } }));\n      } catch(e){ console.error('dice_result dispatch error',e); }\n    },[onRoll]);\n\n    return <canvas ref={canvasRef} width={size} height={size} className={className} style={{ cursor: 'pointer' }} />;\n  });\n\nexport default Dice3D;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}