{"ast":null,"code":"// Type guard for politician cards\nconst isPol = c => c && c.kind === 'pol';\n\n// Trap type predicates\nexport const isBoycottTrap = c => c.kind === 'spec' && (c.key === 'boykott_kampagne' || c.name === 'Boykott-Kampagne');\nexport const isSystemrelevant = c => c.kind === 'spec' && (c.key === 'systemrelevant' || c.name === 'Systemrelevant');\n\n// Trap trigger predicates - return true if trap should trigger\n\nexport const TRAP_TRIGGERS = {\n  'boykott_kampagne': target => {\n    var _type, _type2;\n    return target.kind === 'spec' && (((_type = target.type) === null || _type === void 0 ? void 0 : _type.toLowerCase().includes('ngo')) || ((_type2 = target.type) === null || _type2 === void 0 ? void 0 : _type2.toLowerCase().includes('plattform')));\n  },\n  'systemrelevant': target => target.kind === 'pol' && target.influence >= 3\n};\n\n// Grant one-time protection to a card\nexport function grantOneTimeProtection(target, log) {\n  if (isPol(target)) {\n    target.protected = true;\n    log(`üõ°Ô∏è ${target.name} erh√§lt einmaligen Schutz.`);\n  }\n}\n\n// Register a trap card for a player\nexport function registerTrap(state, p, trapCard, log) {\n  state.traps[p].push(trapCard);\n  log(`ü™§ ${trapCard.name} wird verdeckt vorbereitet.`);\n}\n\n// Check if any traps should trigger when a card is played\nexport function checkTraps(state, owner, targetCard) {\n  const events = [];\n  const traps = state.traps[owner];\n  if (!traps || traps.length === 0) return events;\n\n  // Find matching traps for this target\n  for (let i = 0; i < traps.length; i++) {\n    const trap = traps[i];\n    const trapKey = trap.key || trap.name.toLowerCase().replace(/[- ]/g, '_');\n    const predicate = TRAP_TRIGGERS[trapKey];\n    if (predicate && predicate(targetCard)) {\n      // Trap triggered!\n      events.push({\n        type: 'TRAP_TRIGGERED',\n        player: owner,\n        trapId: trap.uid,\n        targetId: targetCard.uid\n      });\n\n      // Shield check\n      if (state.shields && state.shields.has(targetCard.uid)) {\n        state.shields.delete(targetCard.uid);\n        events.push({\n          type: 'LOG',\n          msg: `üõ°Ô∏è Schutz hat ${trap.name} verhindert: ${targetCard.name}.`\n        });\n      } else {\n        events.push({\n          type: 'DEACTIVATE_CARD',\n          targetUid: targetCard.uid\n        });\n        events.push({\n          type: 'LOG',\n          msg: `‚õî ${trap.name} deaktiviert: ${targetCard.name}.`\n        });\n      }\n\n      // Remove used trap\n      traps.splice(i, 1);\n      i--; // Adjust index after removal\n    }\n  }\n  return events;\n}\n\n// Legacy compatibility function\nexport function checkTrapsOnOpponentPlay(state, owner, playedCardUid, isTargetNGOorPlatform, log) {\n  const traps = state.traps[owner];\n  if (!traps || traps.length === 0) return;\n  const targetAll = [...state.board[1].innen, ...state.board[1].aussen, ...state.board[1].sofort, ...state.board[2].innen, ...state.board[2].aussen, ...state.board[2].sofort];\n  const target = targetAll.find(c => c.uid === playedCardUid);\n  if (!target) return;\n  if (isTargetNGOorPlatform) {\n    if (state.shields && state.shields.has(target.uid)) {\n      state.shields.delete(target.uid);\n      log(`üõ°Ô∏è Schutz hat Boykott verhindert: ${target.name}.`);\n    } else {\n      if (!state._effectQueue) state._effectQueue = [];\n      state._effectQueue.push({\n        type: 'DEACTIVATE_CARD',\n        targetUid: target.uid\n      });\n      log(`‚õî Boykott deaktiviert: ${target.name}.`);\n    }\n    traps.shift();\n  }\n}","map":{"version":3,"names":["isPol","c","kind","isBoycottTrap","key","name","isSystemrelevant","TRAP_TRIGGERS","target","_type","_type2","type","toLowerCase","includes","influence","grantOneTimeProtection","log","protected","registerTrap","state","p","trapCard","traps","push","checkTraps","owner","targetCard","events","length","i","trap","trapKey","replace","predicate","player","trapId","uid","targetId","shields","has","delete","msg","targetUid","splice","checkTrapsOnOpponentPlay","playedCardUid","isTargetNGOorPlatform","targetAll","board","innen","aussen","sofort","find","_effectQueue","shift"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/traps.ts"],"sourcesContent":["import { GameState, Player, Card, PoliticianCard } from '../types/game';\r\nimport { EffectEvent } from '../types/effects';\r\n\r\n// Type guard for politician cards\r\nconst isPol = (c: Card): c is PoliticianCard => c && c.kind === 'pol';\r\n\r\n// Trap type predicates\r\nexport const isBoycottTrap = (c: Card) =>\r\n  c.kind === 'spec' && ((c as any).key === 'boykott_kampagne' || c.name === 'Boykott-Kampagne');\r\n\r\nexport const isSystemrelevant = (c: Card) =>\r\n  c.kind === 'spec' && ((c as any).key === 'systemrelevant' || c.name === 'Systemrelevant');\r\n\r\n// Trap trigger predicates - return true if trap should trigger\r\nexport type TrapTriggerPredicate = (target: Card) => boolean;\r\n\r\nexport const TRAP_TRIGGERS: Record<string, TrapTriggerPredicate> = {\r\n  'boykott_kampagne': (target) =>\r\n    target.kind === 'spec' &&\r\n    ((target as any).type?.toLowerCase().includes('ngo') ||\r\n     (target as any).type?.toLowerCase().includes('plattform')),\r\n\r\n  'systemrelevant': (target) =>\r\n    target.kind === 'pol' &&\r\n    (target as PoliticianCard).influence >= 3\r\n};\r\n\r\n// Grant one-time protection to a card\r\nexport function grantOneTimeProtection(target: Card, log: (msg: string) => void) {\r\n  if (isPol(target)) {\r\n    (target as PoliticianCard).protected = true;\r\n    log(`üõ°Ô∏è ${target.name} erh√§lt einmaligen Schutz.`);\r\n  }\r\n}\r\n\r\n// Register a trap card for a player\r\nexport function registerTrap(state: GameState, p: Player, trapCard: Card, log: (msg: string) => void) {\r\n  state.traps[p].push(trapCard);\r\n  log(`ü™§ ${trapCard.name} wird verdeckt vorbereitet.`);\r\n}\r\n\r\n// Check if any traps should trigger when a card is played\r\nexport function checkTraps(state: GameState, owner: Player, targetCard: Card): EffectEvent[] {\r\n  const events: EffectEvent[] = [];\r\n  const traps = state.traps[owner];\r\n  if (!traps || traps.length === 0) return events;\r\n\r\n  // Find matching traps for this target\r\n  for (let i = 0; i < traps.length; i++) {\r\n    const trap = traps[i];\r\n    const trapKey = (trap as any).key || trap.name.toLowerCase().replace(/[- ]/g, '_');\r\n    const predicate = TRAP_TRIGGERS[trapKey];\r\n\r\n    if (predicate && predicate(targetCard)) {\r\n      // Trap triggered!\r\n      events.push({\r\n        type: 'TRAP_TRIGGERED',\r\n        player: owner,\r\n        trapId: trap.uid,\r\n        targetId: targetCard.uid\r\n      });\r\n\r\n      // Shield check\r\n      if (state.shields && state.shields.has(targetCard.uid)) {\r\n        state.shields.delete(targetCard.uid);\r\n        events.push({ type: 'LOG', msg: `üõ°Ô∏è Schutz hat ${trap.name} verhindert: ${targetCard.name}.` });\r\n      } else {\r\n        events.push({ type: 'DEACTIVATE_CARD', targetUid: targetCard.uid });\r\n        events.push({ type: 'LOG', msg: `‚õî ${trap.name} deaktiviert: ${targetCard.name}.` });\r\n      }\r\n\r\n      // Remove used trap\r\n      traps.splice(i, 1);\r\n      i--; // Adjust index after removal\r\n    }\r\n  }\r\n\r\n  return events;\r\n}\r\n\r\n// Legacy compatibility function\r\nexport function checkTrapsOnOpponentPlay(\r\n  state: GameState,\r\n  owner: Player,\r\n  playedCardUid: number,\r\n  isTargetNGOorPlatform: boolean,\r\n  log: (m: string) => void\r\n) {\r\n  const traps = state.traps[owner];\r\n  if (!traps || traps.length === 0) return;\r\n\r\n  const targetAll = [\r\n    ...state.board[1].innen, ...state.board[1].aussen, ...state.board[1].sofort,\r\n    ...state.board[2].innen, ...state.board[2].aussen, ...state.board[2].sofort,\r\n  ];\r\n  const target = targetAll.find(c => c.uid === playedCardUid);\r\n  if (!target) return;\r\n\r\n  if (isTargetNGOorPlatform) {\r\n    if (state.shields && state.shields.has(target.uid)) {\r\n      state.shields.delete(target.uid);\r\n      log(`üõ°Ô∏è Schutz hat Boykott verhindert: ${target.name}.`);\r\n    } else {\r\n      if (!state._effectQueue) state._effectQueue = [];\r\n      state._effectQueue.push({ type: 'DEACTIVATE_CARD', targetUid: target.uid });\r\n      log(`‚õî Boykott deaktiviert: ${target.name}.`);\r\n    }\r\n    traps.shift();\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}