{"ast":null,"code":"import{getStrongestGovernment}from'./targets';import{registerTrap}from'./traps';import{logAP,logDraw,logDiscardRandom,logDeactivateRandom,logBuffStrongest,logShield,logDeactivateCard,logOpportunist}from'./logs';import{getGlobalRNG}from'../services/rng';// Helper to find strongest government uid for new intents\nfunction strongestGovernmentUid(state,p){var _state$board$p;const govRow=(_state$board$p=state.board[p])===null||_state$board$p===void 0?void 0:_state$board$p.aussen;if(!govRow||govRow.length===0)return null;const alive=govRow.filter(g=>!g.deactivated);if(!alive.length)return null;const sorted=alive.slice().sort((a,b)=>b.influence+(b.tempBuffs||0)-(b.tempDebuffs||0)-(a.influence+(a.tempBuffs||0)-(a.tempDebuffs||0)));return sorted[0].uid;}function other(p){return p===1?2:1;}function logPush(state,msg){state.log.push(msg);}function strongestGov(state,p){const row=state.board[p].aussen;if(!row.length)return null;const alive=row.filter(c=>!c.deactivated);if(alive.length===0)return null;return alive.slice().sort((a,b)=>b.influence+(b.tempBuffs||0)-(b.tempDebuffs||0)-(a.influence+(a.tempBuffs||0)-(a.tempDebuffs||0)))[0];}function publicNames(state,p){return state.board[p].innen.map(c=>c.name);}function hasPublic(state,p,name){return publicNames(state,p).includes(name);}function findCardByUidOnBoard(state,uid){for(const p of[1,2]){for(const lane of['innen','aussen','sofort']){const arr=state.board[p][lane];const hit=arr.find(c=>c.uid===uid);if(hit)return hit;}}return null;}export function resolveQueue(state,events){const rng=getGlobalRNG();// Single pass FIFO\nwhile(events.length){const ev=events.shift();switch(ev.type){case'LOG':{logPush(state,ev.msg);break;}case'ADD_AP':{const cur=state.actionPoints[ev.player];const next=Math.max(0,cur+ev.amount);state.actionPoints[ev.player]=next;logPush(state,logAP(ev.player,cur,next));break;}case'DRAW_CARDS':{for(let i=0;i<ev.amount;i++){const top=state.decks[ev.player].shift();if(top){state.hands[ev.player].push(top);logPush(state,logDraw(ev.player,top.name));}}break;}case'DISCARD_RANDOM_FROM_HAND':{const hand=state.hands[ev.player];for(let i=0;i<ev.amount&&hand.length>0;i++){const idx=rng.randomInt(hand.length);const[card]=hand.splice(idx,1);state.discard.push(card);logPush(state,logDiscardRandom(ev.player,card.name));}break;}case'DEACTIVATE_RANDOM_HAND':{// Deaktivieren von Handkarten (nicht entfernen)\nconst hand=state.hands[ev.player];const activeCards=hand.filter(c=>!c.deactivated);for(let i=0;i<ev.amount&&activeCards.length>0;i++){const card=rng.pick(activeCards);if(card){card.deactivated=true;logPush(state,logDeactivateRandom(ev.player,card.name));// Entferne aus activeCards für nächste Iteration\nconst idx=activeCards.indexOf(card);if(idx>-1)activeCards.splice(idx,1);}}break;}// Legacy cases - removed\n// SET_DISCOUNT and REFUND_NEXT_INITIATIVE are no longer supported\n// Use ADD_AP instead\ncase'GRANT_SHIELD':{if(!state.shields)state.shields=new Set();const targetUid=ev.targetUid||0;state.shields.add(targetUid);logPush(state,logShield(targetUid));break;}case'DEACTIVATE_CARD':{const card=findCardByUidOnBoard(state,ev.targetUid);if(card){card.deactivated=true;logPush(state,logDeactivateCard(card.name));}break;}case'REACTIVATE_CARD':{const card=findCardByUidOnBoard(state,ev.targetUid);if(card){card.deactivated=false;logPush(state,\"\\uD83D\\uDD04 \".concat(card.name,\" wurde reaktiviert\"));}break;}case'RETURN_TO_HAND':{const card=findCardByUidOnBoard(state,ev.targetUid);if(card){// Remove from board\nfor(const p of[1,2]){for(const lane of['innen','aussen','sofort']){const idx=state.board[p][lane].findIndex(c=>c.uid===ev.targetUid);if(idx!==-1){state.board[p][lane].splice(idx,1);// Add to hand\nstate.hands[ev.player].push(card);logPush(state,\"\\uD83D\\uDD04 \".concat(card.name,\" wurde zur Hand zur\\xFCckgegeben\"));break;}}}}break;}case'CANCEL_CARD':{const card=findCardByUidOnBoard(state,ev.targetUid);if(card){// Remove from board and add to discard\nfor(const p of[1,2]){for(const lane of['innen','aussen','sofort']){const idx=state.board[p][lane].findIndex(c=>c.uid===ev.targetUid);if(idx!==-1){state.board[p][lane].splice(idx,1);state.discard.push(card);logPush(state,\"\\u274C \".concat(card.name,\" wurde annulliert\"));break;}}}}break;}case'REGISTER_TRAP':{registerTrap(state,ev.player,ev.key);logPush(state,\"Trap registered: \".concat(ev.key,\" (P\").concat(ev.player,\")\"));break;}case'BUFF_STRONGEST_GOV':case'ADJUST_INFLUENCE':{// Alias auf BUFF_STRONGEST_GOV\nconst player=ev.player;const amount=ev.amount;const tgt=getStrongestGovernment(state,player);if(tgt){var _state$effectFlags$ot;if(amount>=0){tgt.tempBuffs=(tgt.tempBuffs||0)+amount;}else{tgt.tempDebuffs=(tgt.tempDebuffs||0)+Math.abs(amount);}logPush(state,logBuffStrongest(player,tgt.name,amount));// Opportunist-Spiegelung (falls aktiv beim Gegner)\nif((_state$effectFlags$ot=state.effectFlags[other(player)])!==null&&_state$effectFlags$ot!==void 0&&_state$effectFlags$ot.opportunistActive&&amount>0){const mirror={type:'BUFF_STRONGEST_GOV',player:other(player),amount};events.unshift(mirror);logPush(state,logOpportunist(other(player),amount));}}break;}// ===== New intent event handlers =====\ncase'DEACTIVATE_STRONGEST_ENEMY_GOV':{const opp=ev.player===1?2:1;const uid=strongestGovernmentUid(state,opp);if(uid!==null){events.unshift({type:'DEACTIVATE_CARD',player:opp,targetUid:uid});events.unshift({type:'LOG',msg:'Party Offensive: strongest enemy Government deactivated.'});}else{events.unshift({type:'LOG',msg:'Party Offensive: no enemy Government to deactivate.'});}break;}case'LOCK_OPPONENT_INITIATIVES_EOT':{const opp=ev.player===1?2:1;state.effectFlags[opp].initiativesLocked=true;events.unshift({type:'LOG',msg:'Opposition Blockade: opponent initiatives locked until end of turn.'});break;}case'SET_DOUBLE_PUBLIC_AURA':{state.effectFlags[ev.player].doublePublicAura=true;events.unshift({type:'LOG',msg:'Influencer Campaign: next Public aura will be doubled.'});break;}case'SET_OPPORTUNIST_ACTIVE':{const{player,active}=ev;state.effectFlags[player].opportunistActive=active;if(active){events.unshift({type:'LOG',msg:'Opportunist: AP effects will be mirrored until end of turn.'});}break;}case'INITIATIVE_ACTIVATED':{// Existing logic plus new flag consumptions\nconst f=state.effectFlags[ev.player];// Mark Zuckerberg AP once/turn\nif(f.zuckOnceAp&&!f.zuckSpent){const cur=state.actionPoints[ev.player];state.actionPoints[ev.player]=cur+1;f.zuckSpent=true;logPush(state,'Mark Zuckerberg: +1 AP once per turn.');}if(f.aiWeiweiOnActivate){const top=state.decks[ev.player].shift();if(top)state.hands[ev.player].push(top);state.actionPoints[ev.player]+=1;f.aiWeiweiOnActivate=false;logPush(state,'Ai Weiwei: drew 1 card and gained +1 AP.');}// Simplified AP system: No initiative-specific bonuses\n// All AP bonuses are now immediate ADD_AP events\n// Double Public Aura – note (consumption happens separately)\nif(f.doublePublicAura){if(!state._effectQueue)state._effectQueue=[];state._effectQueue.push({type:'LOG',msg:'Double Public Aura is armed.'});}break;}// Simplified AP system: No initiative-specific bonuses\n// All AP bonuses are now immediate ADD_AP events\n}}}","map":{"version":3,"names":["getStrongestGovernment","registerTrap","logAP","logDraw","logDiscardRandom","logDeactivateRandom","logBuffStrongest","logShield","logDeactivateCard","logOpportunist","getGlobalRNG","strongestGovernmentUid","state","p","_state$board$p","govRow","board","aussen","length","alive","filter","g","deactivated","sorted","slice","sort","a","b","influence","tempBuffs","tempDebuffs","uid","other","logPush","msg","log","push","strongestGov","row","c","publicNames","innen","map","name","hasPublic","includes","findCardByUidOnBoard","lane","arr","hit","find","resolveQueue","events","rng","ev","shift","type","cur","actionPoints","player","next","Math","max","amount","i","top","decks","hands","hand","idx","randomInt","card","splice","discard","activeCards","pick","indexOf","shields","Set","targetUid","add","concat","findIndex","key","tgt","_state$effectFlags$ot","abs","effectFlags","opportunistActive","mirror","unshift","opp","initiativesLocked","doublePublicAura","active","f","zuckOnceAp","zuckSpent","aiWeiweiOnActivate","_effectQueue"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/queue.ts"],"sourcesContent":["import { GameState, Player, PoliticianCard, Card } from '../types/game';\r\nimport { EffectEvent } from '../types/effects';\r\nimport { getStrongestGovernment } from './targets';\r\nimport { AP_CAP, MAX_DISCOUNT, MAX_REFUND } from '../config/gameConstants';\r\nimport { registerTrap } from './traps';\r\nimport {\r\n  logAP, logDiscount, logRefund, logDraw, logDiscardRandom,\r\n  logDeactivateRandom, logBuffStrongest, logShield, logDeactivateCard,\r\n  logInitiativeAura, logAiWeiwei, logPlattformBonus, logOpportunist\r\n} from './logs';\r\nimport { getGlobalRNG } from '../services/rng';\r\n// Helper to find strongest government uid for new intents\r\nfunction strongestGovernmentUid(state: GameState, p: Player): number | null {\r\n  const govRow = state.board[p]?.aussen as PoliticianCard[];\r\n  if (!govRow || govRow.length === 0) return null;\r\n  const alive = govRow.filter(g => !(g as any).deactivated);\r\n  if (!alive.length) return null;\r\n  const sorted = alive.slice().sort((a,b) => (b.influence + (b.tempBuffs||0) - (b.tempDebuffs||0)) - (a.influence + (a.tempBuffs||0) - (a.tempDebuffs||0)));\r\n  return sorted[0].uid;\r\n}\r\n\r\nfunction other(p: Player): Player { return p === 1 ? 2 : 1; }\r\nfunction logPush(state: GameState, msg: string) { state.log.push(msg); }\r\n\r\nfunction strongestGov(state: GameState, p: Player): PoliticianCard | null {\r\n  const row = state.board[p].aussen as PoliticianCard[];\r\n  if (!row.length) return null;\r\n  const alive = row.filter(c => !c.deactivated);\r\n  if (alive.length === 0) return null;\r\n  return alive.slice().sort((a,b) => (b.influence + (b.tempBuffs||0) - (b.tempDebuffs||0)) - (a.influence + (a.tempBuffs||0) - (a.tempDebuffs||0)))[0];\r\n}\r\n\r\nfunction publicNames(state: GameState, p: Player): string[] {\r\n  return state.board[p].innen.map(c => c.name);\r\n}\r\n\r\nfunction hasPublic(state: GameState, p: Player, name: string): boolean {\r\n  return publicNames(state, p).includes(name);\r\n}\r\n\r\nfunction findCardByUidOnBoard(state: GameState, uid: number): Card | null {\r\n  for (const p of [1,2] as const) {\r\n    for (const lane of ['innen','aussen','sofort'] as const) {\r\n      const arr = state.board[p][lane];\r\n      const hit = arr.find(c => c.uid === uid);\r\n      if (hit) return hit;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function resolveQueue(state: GameState, events: EffectEvent[]) {\r\n  const rng = getGlobalRNG();\r\n\r\n  // Single pass FIFO\r\n  while (events.length) {\r\n    const ev = events.shift()!;\r\n\r\n    switch (ev.type) {\r\n      case 'LOG': {\r\n        logPush(state, ev.msg);\r\n        break;\r\n      }\r\n\r\n      case 'ADD_AP': {\r\n        const cur = state.actionPoints[ev.player];\r\n        const next = Math.max(0, cur + ev.amount);\r\n        state.actionPoints[ev.player] = next;\r\n        logPush(state, logAP(ev.player, cur, next));\r\n        break;\r\n      }\r\n\r\n      case 'DRAW_CARDS': {\r\n        for (let i = 0; i < ev.amount; i++) {\r\n          const top = state.decks[ev.player].shift();\r\n          if (top) {\r\n            state.hands[ev.player].push(top);\r\n            logPush(state, logDraw(ev.player, top.name));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'DISCARD_RANDOM_FROM_HAND': {\r\n        const hand = state.hands[ev.player];\r\n        for (let i = 0; i < ev.amount && hand.length > 0; i++) {\r\n          const idx = rng.randomInt(hand.length);\r\n          const [card] = hand.splice(idx, 1);\r\n          state.discard.push(card);\r\n          logPush(state, logDiscardRandom(ev.player, card.name));\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'DEACTIVATE_RANDOM_HAND': {\r\n        // Deaktivieren von Handkarten (nicht entfernen)\r\n        const hand = state.hands[ev.player];\r\n        const activeCards = hand.filter(c => !(c as any).deactivated);\r\n        for (let i = 0; i < ev.amount && activeCards.length > 0; i++) {\r\n          const card = rng.pick(activeCards);\r\n          if (card) {\r\n            (card as any).deactivated = true;\r\n            logPush(state, logDeactivateRandom(ev.player, card.name));\r\n            // Entferne aus activeCards für nächste Iteration\r\n            const idx = activeCards.indexOf(card);\r\n            if (idx > -1) activeCards.splice(idx, 1);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      // Legacy cases - removed\r\n      // SET_DISCOUNT and REFUND_NEXT_INITIATIVE are no longer supported\r\n      // Use ADD_AP instead\r\n\r\n      case 'GRANT_SHIELD': {\r\n        if (!state.shields) state.shields = new Set();\r\n        const targetUid = ev.targetUid || 0;\r\n        state.shields.add(targetUid);\r\n        logPush(state, logShield(targetUid));\r\n        break;\r\n      }\r\n\r\n      case 'DEACTIVATE_CARD': {\r\n        const card = findCardByUidOnBoard(state, ev.targetUid);\r\n        if (card) {\r\n          (card as any).deactivated = true;\r\n          logPush(state, logDeactivateCard(card.name));\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'REACTIVATE_CARD': {\r\n        const card = findCardByUidOnBoard(state, ev.targetUid);\r\n        if (card) {\r\n          (card as any).deactivated = false;\r\n          logPush(state, `🔄 ${card.name} wurde reaktiviert`);\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'RETURN_TO_HAND': {\r\n        const card = findCardByUidOnBoard(state, ev.targetUid);\r\n        if (card) {\r\n          // Remove from board\r\n          for (const p of [1, 2] as const) {\r\n            for (const lane of ['innen', 'aussen', 'sofort'] as const) {\r\n              const idx = state.board[p][lane].findIndex(c => c.uid === ev.targetUid);\r\n              if (idx !== -1) {\r\n                state.board[p][lane].splice(idx, 1);\r\n                // Add to hand\r\n                state.hands[ev.player].push(card);\r\n                logPush(state, `🔄 ${card.name} wurde zur Hand zurückgegeben`);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'CANCEL_CARD': {\r\n        const card = findCardByUidOnBoard(state, ev.targetUid);\r\n        if (card) {\r\n          // Remove from board and add to discard\r\n          for (const p of [1, 2] as const) {\r\n            for (const lane of ['innen', 'aussen', 'sofort'] as const) {\r\n              const idx = state.board[p][lane].findIndex(c => c.uid === ev.targetUid);\r\n              if (idx !== -1) {\r\n                state.board[p][lane].splice(idx, 1);\r\n                state.discard.push(card);\r\n                logPush(state, `❌ ${card.name} wurde annulliert`);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'REGISTER_TRAP': {\r\n        registerTrap(state, ev.player, (ev as any).key);\r\n        logPush(state, `Trap registered: ${(ev as any).key} (P${ev.player})`);\r\n        break;\r\n      }\r\n\r\n      case 'BUFF_STRONGEST_GOV':\r\n      case 'ADJUST_INFLUENCE': { // Alias auf BUFF_STRONGEST_GOV\r\n        const player = ev.player;\r\n        const amount = (ev as any).amount;\r\n        const tgt = getStrongestGovernment(state, player);\r\n        if (tgt) {\r\n          if (amount >= 0) {\r\n            (tgt as PoliticianCard).tempBuffs = ((tgt as PoliticianCard).tempBuffs || 0) + amount;\r\n          } else {\r\n            (tgt as PoliticianCard).tempDebuffs = ((tgt as PoliticianCard).tempDebuffs || 0) + Math.abs(amount);\r\n          }\r\n          logPush(state, logBuffStrongest(player, tgt.name, amount));\r\n\r\n          // Opportunist-Spiegelung (falls aktiv beim Gegner)\r\n          if (state.effectFlags[other(player)]?.opportunistActive && amount > 0) {\r\n            const mirror = { type: 'BUFF_STRONGEST_GOV', player: other(player), amount } as EffectEvent;\r\n            events.unshift(mirror);\r\n            logPush(state, logOpportunist(other(player), amount));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      // ===== New intent event handlers =====\r\n\r\n      case 'DEACTIVATE_STRONGEST_ENEMY_GOV': {\r\n        const opp: Player = ev.player === 1 ? 2 : 1;\r\n        const uid = strongestGovernmentUid(state, opp);\r\n        if (uid !== null) {\r\n          events.unshift({ type: 'DEACTIVATE_CARD', player: opp, targetUid: uid });\r\n          events.unshift({ type: 'LOG', msg: 'Party Offensive: strongest enemy Government deactivated.' });\r\n        } else {\r\n          events.unshift({ type: 'LOG', msg: 'Party Offensive: no enemy Government to deactivate.' });\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'LOCK_OPPONENT_INITIATIVES_EOT': {\r\n        const opp: Player = ev.player === 1 ? 2 : 1;\r\n        state.effectFlags[opp].initiativesLocked = true;\r\n        events.unshift({ type: 'LOG', msg: 'Opposition Blockade: opponent initiatives locked until end of turn.' });\r\n        break;\r\n      }\r\n\r\n      case 'SET_DOUBLE_PUBLIC_AURA': {\r\n        state.effectFlags[ev.player].doublePublicAura = true;\r\n        events.unshift({ type: 'LOG', msg: 'Influencer Campaign: next Public aura will be doubled.' });\r\n        break;\r\n      }\r\n\r\n      case 'SET_OPPORTUNIST_ACTIVE': {\r\n        const { player, active } = ev as { type: 'SET_OPPORTUNIST_ACTIVE'; player: Player; active: boolean };\r\n        state.effectFlags[player].opportunistActive = active;\r\n        if (active) {\r\n          events.unshift({ type: 'LOG', msg: 'Opportunist: AP effects will be mirrored until end of turn.' });\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'INITIATIVE_ACTIVATED': {\r\n        // Existing logic plus new flag consumptions\r\n        const f = state.effectFlags[ev.player];\r\n        // Mark Zuckerberg AP once/turn\r\n        if (f.zuckOnceAp && !f.zuckSpent) {\r\n          const cur = state.actionPoints[ev.player];\r\n          state.actionPoints[ev.player] = cur + 1;\r\n          f.zuckSpent = true;\r\n          logPush(state, 'Mark Zuckerberg: +1 AP once per turn.');\r\n        }\r\n        if (f.aiWeiweiOnActivate) {\r\n          const top = state.decks[ev.player].shift();\r\n          if (top) state.hands[ev.player].push(top);\r\n          state.actionPoints[ev.player] += 1;\r\n          f.aiWeiweiOnActivate = false;\r\n          logPush(state, 'Ai Weiwei: drew 1 card and gained +1 AP.');\r\n        }\r\n        // Simplified AP system: No initiative-specific bonuses\r\n        // All AP bonuses are now immediate ADD_AP events\r\n        // Double Public Aura – note (consumption happens separately)\r\n        if (f.doublePublicAura) {\r\n          if (!state._effectQueue) state._effectQueue = [];\r\n          state._effectQueue.push({ type: 'LOG', msg: 'Double Public Aura is armed.' });\r\n        }\r\n        break;\r\n      }\r\n\r\n      // Simplified AP system: No initiative-specific bonuses\r\n      // All AP bonuses are now immediate ADD_AP events\r\n\r\n\r\n    }\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}