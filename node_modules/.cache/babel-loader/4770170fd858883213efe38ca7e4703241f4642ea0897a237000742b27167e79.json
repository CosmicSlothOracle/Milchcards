{"ast":null,"code":"// Type guard for politician cards\nconst isPol=c=>c&&c.kind==='pol';// Trap type predicates\nexport const isBoycottTrap=c=>c.kind==='spec'&&(c.key==='boykott_kampagne'||c.name==='Boykott-Kampagne');export const isSystemrelevant=c=>c.kind==='spec'&&(c.key==='systemrelevant'||c.name==='Systemrelevant');// Trap trigger predicates - return true if trap should trigger\nexport const TRAP_TRIGGERS={'boykott_kampagne':target=>{var _type,_type2;return target.kind==='spec'&&(((_type=target.type)===null||_type===void 0?void 0:_type.toLowerCase().includes('ngo'))||((_type2=target.type)===null||_type2===void 0?void 0:_type2.toLowerCase().includes('plattform')));},'systemrelevant':target=>target.kind==='pol'&&target.influence>=3};// Grant one-time protection to a card\nexport function grantOneTimeProtection(target,log){if(isPol(target)){target.protected=true;log(\"\\uD83D\\uDEE1\\uFE0F \".concat(target.name,\" erh\\xE4lt einmaligen Schutz.\"));}}// Register a trap card for a player\nexport function registerTrap(state,p,trapCard,log){state.traps[p].push(trapCard);log(\"\\uD83E\\uDEA4 \".concat(trapCard.name,\" wird verdeckt vorbereitet.\"));}// Check if any traps should trigger when a card is played\nexport function checkTraps(state,owner,targetCard){const events=[];const traps=state.traps[owner];if(!traps||traps.length===0)return events;// Find matching traps for this target\nfor(let i=0;i<traps.length;i++){const trap=traps[i];const trapKey=trap.key||trap.name.toLowerCase().replace(/[- ]/g,'_');const predicate=TRAP_TRIGGERS[trapKey];if(predicate&&predicate(targetCard)){// Trap triggered!\nevents.push({type:'TRAP_TRIGGERED',player:owner,trapId:trap.uid,targetId:targetCard.uid});// Shield check\nif(state.shields&&state.shields.has(targetCard.uid)){state.shields.delete(targetCard.uid);events.push({type:'LOG',msg:\"\\uD83D\\uDEE1\\uFE0F Schutz hat \".concat(trap.name,\" verhindert: \").concat(targetCard.name,\".\")});}else{events.push({type:'DEACTIVATE_CARD',targetUid:targetCard.uid});events.push({type:'LOG',msg:\"\\u26D4 \".concat(trap.name,\" deaktiviert: \").concat(targetCard.name,\".\")});}// Remove used trap\ntraps.splice(i,1);i--;// Adjust index after removal\n}}return events;}// Legacy compatibility function\nexport function checkTrapsOnOpponentPlay(state,owner,playedCardUid,isTargetNGOorPlatform,log){const traps=state.traps[owner];if(!traps||traps.length===0)return;const targetAll=[...state.board[1].innen,...state.board[1].aussen,...state.board[1].sofort,...state.board[2].innen,...state.board[2].aussen,...state.board[2].sofort];const target=targetAll.find(c=>c.uid===playedCardUid);if(!target)return;if(isTargetNGOorPlatform){if(state.shields&&state.shields.has(target.uid)){state.shields.delete(target.uid);log(\"\\uD83D\\uDEE1\\uFE0F Schutz hat Boykott verhindert: \".concat(target.name,\".\"));}else{if(!state._effectQueue)state._effectQueue=[];state._effectQueue.push({type:'DEACTIVATE_CARD',targetUid:target.uid});log(\"\\u26D4 Boykott deaktiviert: \".concat(target.name,\".\"));}traps.shift();}}","map":{"version":3,"names":["isPol","c","kind","isBoycottTrap","key","name","isSystemrelevant","TRAP_TRIGGERS","target","_type","_type2","type","toLowerCase","includes","influence","grantOneTimeProtection","log","protected","concat","registerTrap","state","p","trapCard","traps","push","checkTraps","owner","targetCard","events","length","i","trap","trapKey","replace","predicate","player","trapId","uid","targetId","shields","has","delete","msg","targetUid","splice","checkTrapsOnOpponentPlay","playedCardUid","isTargetNGOorPlatform","targetAll","board","innen","aussen","sofort","find","_effectQueue","shift"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/traps.ts"],"sourcesContent":["import { GameState, Player, Card, PoliticianCard } from '../types/game';\r\nimport { EffectEvent } from '../types/effects';\r\n\r\n// Type guard for politician cards\r\nconst isPol = (c: Card): c is PoliticianCard => c && c.kind === 'pol';\r\n\r\n// Trap type predicates\r\nexport const isBoycottTrap = (c: Card) =>\r\n  c.kind === 'spec' && ((c as any).key === 'boykott_kampagne' || c.name === 'Boykott-Kampagne');\r\n\r\nexport const isSystemrelevant = (c: Card) =>\r\n  c.kind === 'spec' && ((c as any).key === 'systemrelevant' || c.name === 'Systemrelevant');\r\n\r\n// Trap trigger predicates - return true if trap should trigger\r\nexport type TrapTriggerPredicate = (target: Card) => boolean;\r\n\r\nexport const TRAP_TRIGGERS: Record<string, TrapTriggerPredicate> = {\r\n  'boykott_kampagne': (target) =>\r\n    target.kind === 'spec' &&\r\n    ((target as any).type?.toLowerCase().includes('ngo') ||\r\n     (target as any).type?.toLowerCase().includes('plattform')),\r\n\r\n  'systemrelevant': (target) =>\r\n    target.kind === 'pol' &&\r\n    (target as PoliticianCard).influence >= 3\r\n};\r\n\r\n// Grant one-time protection to a card\r\nexport function grantOneTimeProtection(target: Card, log: (msg: string) => void) {\r\n  if (isPol(target)) {\r\n    (target as PoliticianCard).protected = true;\r\n    log(`üõ°Ô∏è ${target.name} erh√§lt einmaligen Schutz.`);\r\n  }\r\n}\r\n\r\n// Register a trap card for a player\r\nexport function registerTrap(state: GameState, p: Player, trapCard: Card, log: (msg: string) => void) {\r\n  state.traps[p].push(trapCard);\r\n  log(`ü™§ ${trapCard.name} wird verdeckt vorbereitet.`);\r\n}\r\n\r\n// Check if any traps should trigger when a card is played\r\nexport function checkTraps(state: GameState, owner: Player, targetCard: Card): EffectEvent[] {\r\n  const events: EffectEvent[] = [];\r\n  const traps = state.traps[owner];\r\n  if (!traps || traps.length === 0) return events;\r\n\r\n  // Find matching traps for this target\r\n  for (let i = 0; i < traps.length; i++) {\r\n    const trap = traps[i];\r\n    const trapKey = (trap as any).key || trap.name.toLowerCase().replace(/[- ]/g, '_');\r\n    const predicate = TRAP_TRIGGERS[trapKey];\r\n\r\n    if (predicate && predicate(targetCard)) {\r\n      // Trap triggered!\r\n      events.push({\r\n        type: 'TRAP_TRIGGERED',\r\n        player: owner,\r\n        trapId: trap.uid,\r\n        targetId: targetCard.uid\r\n      });\r\n\r\n      // Shield check\r\n      if (state.shields && state.shields.has(targetCard.uid)) {\r\n        state.shields.delete(targetCard.uid);\r\n        events.push({ type: 'LOG', msg: `üõ°Ô∏è Schutz hat ${trap.name} verhindert: ${targetCard.name}.` });\r\n      } else {\r\n        events.push({ type: 'DEACTIVATE_CARD', targetUid: targetCard.uid });\r\n        events.push({ type: 'LOG', msg: `‚õî ${trap.name} deaktiviert: ${targetCard.name}.` });\r\n      }\r\n\r\n      // Remove used trap\r\n      traps.splice(i, 1);\r\n      i--; // Adjust index after removal\r\n    }\r\n  }\r\n\r\n  return events;\r\n}\r\n\r\n// Legacy compatibility function\r\nexport function checkTrapsOnOpponentPlay(\r\n  state: GameState,\r\n  owner: Player,\r\n  playedCardUid: number,\r\n  isTargetNGOorPlatform: boolean,\r\n  log: (m: string) => void\r\n) {\r\n  const traps = state.traps[owner];\r\n  if (!traps || traps.length === 0) return;\r\n\r\n  const targetAll = [\r\n    ...state.board[1].innen, ...state.board[1].aussen, ...state.board[1].sofort,\r\n    ...state.board[2].innen, ...state.board[2].aussen, ...state.board[2].sofort,\r\n  ];\r\n  const target = targetAll.find(c => c.uid === playedCardUid);\r\n  if (!target) return;\r\n\r\n  if (isTargetNGOorPlatform) {\r\n    if (state.shields && state.shields.has(target.uid)) {\r\n      state.shields.delete(target.uid);\r\n      log(`üõ°Ô∏è Schutz hat Boykott verhindert: ${target.name}.`);\r\n    } else {\r\n      if (!state._effectQueue) state._effectQueue = [];\r\n      state._effectQueue.push({ type: 'DEACTIVATE_CARD', targetUid: target.uid });\r\n      log(`‚õî Boykott deaktiviert: ${target.name}.`);\r\n    }\r\n    traps.shift();\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}