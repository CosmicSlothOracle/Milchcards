{"ast":null,"code":"/**\n * Utility: extract frame count from filename pattern *_XX.png.\n */function defaultFramesFromFilename(src,fallback){try{const m=/_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);const n=m?parseInt(m[1],10):NaN;return Number.isFinite(n)?n:fallback;}catch(_unused){return fallback;}}/**\n * SpriteAnimator – verwaltet Frame-basierte Sprite-Sheet-Animationen.\n *  ‑ Jede Animation liegt in einer PNG-Reihe (Frames horizontal).\n *  ‑ draw(ctx, x, y, w, h) rendert den aktuellen Frame.\n */export class SpriteAnimator{constructor(defaultImage,frameW,frameH){let animations=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};this.defaultImage=void 0;this.frameW=void 0;this.frameH=void 0;this.animations=void 0;this.state=\"idle\";this.frame=0;this.acc=0;// Sekunden-Accumulator\nthis.fps=12;this.loop=true;this.defaultImage=defaultImage;this.frameW=frameW;this.frameH=frameH;// Merge defaults\nthis.animations={};for(const key of Object.keys(animations)){var _a$frames,_a$fps,_a$loop,_a$frameW,_a$frameH;const a=animations[key];const full={src:a.src||\"\",frames:(_a$frames=a.frames)!==null&&_a$frames!==void 0?_a$frames:defaultFramesFromFilename(a.src||\"\",1),fps:(_a$fps=a.fps)!==null&&_a$fps!==void 0?_a$fps:12,loop:(_a$loop=a.loop)!==null&&_a$loop!==void 0?_a$loop:true,frameW:(_a$frameW=a.frameW)!==null&&_a$frameW!==void 0?_a$frameW:frameW,frameH:(_a$frameH=a.frameH)!==null&&_a$frameH!==void 0?_a$frameH:frameH};// Preload image (optional)\nif(full.src){const img=new Image();full.image=img;full.imageLoaded=false;full.imageBroken=false;img.onload=()=>full.imageLoaded=true;img.onerror=()=>full.imageBroken=true;img.src=full.src;}this.animations[key]=full;}}setState(state){if(this.state===state)return;this.state=state;this.frame=0;this.acc=0;const a=this.animations[state];if(a){this.fps=a.fps;this.loop=a.loop;}}/**\n   * Fixed-timestep Update.\n   * @param dt Delta-Zeit in Sekunden\n   */update(dt){const a=this.animations[this.state];if(!a)return;this.acc+=dt;const frameTime=1/(a.fps||this.fps);while(this.acc>=frameTime){this.acc-=frameTime;this.frame++;if(this.frame>=a.frames){if(a.loop)this.frame=0;else this.frame=a.frames-1;}}}/**\n   * Rendert aktuellen Frame.\n   */draw(ctx,x,y,w,h){let flip=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;const a=this.animations[this.state];const img=a&&a.image||this.defaultImage;if(!a||!img||a.imageBroken||!img.complete||img.naturalWidth===0){// Fallback: graue Box\nctx.fillStyle=\"#666\";ctx.fillRect(x,y,w,h);return;}let sx=this.frame*(a.frameW||this.frameW);let sy=0;// Atlas mode: use rects array if provided\nif(a.rects&&a.rects.length>0){const r=a.rects[this.frame%a.rects.length];sx=r.x;sy=r.y;}ctx.save();if(flip){ctx.translate(x+w,0);ctx.scale(-1,1);x=0;}ctx.drawImage(img,sx,sy,a.frameW,a.frameH,x,y,w,h);ctx.restore();}}","map":{"version":3,"names":["defaultFramesFromFilename","src","fallback","m","exec","n","parseInt","NaN","Number","isFinite","_unused","SpriteAnimator","constructor","defaultImage","frameW","frameH","animations","arguments","length","undefined","state","frame","acc","fps","loop","key","Object","keys","_a$frames","_a$fps","_a$loop","_a$frameW","_a$frameH","a","full","frames","img","Image","image","imageLoaded","imageBroken","onload","onerror","setState","update","dt","frameTime","draw","ctx","x","y","w","h","flip","complete","naturalWidth","fillStyle","fillRect","sx","sy","rects","r","save","translate","scale","drawImage","restore"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/qte/spriteAnimator.ts"],"sourcesContent":["export interface Rect { x: number; y: number; w: number; h: number }\n\ninterface AnimationDef {\n  src: string; // optional when using atlas\n  frames: number;\n  fps: number;\n  loop: boolean;\n  frameW: number;\n  frameH: number;\n  rects?: Rect[]; // atlas-based frames\n  image?: HTMLImageElement;\n  imageLoaded?: boolean;\n  imageBroken?: boolean;\n}\n\n/**\n * Utility: extract frame count from filename pattern *_XX.png.\n */\nfunction defaultFramesFromFilename(src: string, fallback: number): number {\n  try {\n    const m = /_(\\d+)\\.(png|jpg|jpeg|webp)$/i.exec(src);\n    const n = m ? parseInt(m[1], 10) : NaN;\n    return Number.isFinite(n) ? n : fallback;\n  } catch {\n    return fallback;\n  }\n}\n\n/**\n * SpriteAnimator – verwaltet Frame-basierte Sprite-Sheet-Animationen.\n *  ‑ Jede Animation liegt in einer PNG-Reihe (Frames horizontal).\n *  ‑ draw(ctx, x, y, w, h) rendert den aktuellen Frame.\n */\nexport class SpriteAnimator {\n  private defaultImage: HTMLImageElement | null;\n  private frameW: number;\n  private frameH: number;\n  public animations: Record<string, AnimationDef>;\n  public state: string = \"idle\";\n  public frame = 0;\n  private acc = 0; // Sekunden-Accumulator\n  private fps = 12;\n  private loop = true;\n\n  constructor(\n    defaultImage: HTMLImageElement | null,\n    frameW: number,\n    frameH: number,\n    animations: Record<string, Partial<AnimationDef>> = {}\n  ) {\n    this.defaultImage = defaultImage;\n    this.frameW = frameW;\n    this.frameH = frameH;\n    // Merge defaults\n    this.animations = {};\n    for (const key of Object.keys(animations)) {\n      const a = animations[key];\n      const full: AnimationDef = {\n        src: a.src || \"\",\n        frames: a.frames ?? defaultFramesFromFilename(a.src || \"\", 1),\n        fps: a.fps ?? 12,\n        loop: a.loop ?? true,\n        frameW: a.frameW ?? frameW,\n        frameH: a.frameH ?? frameH,\n      } as AnimationDef;\n      // Preload image (optional)\n      if (full.src) {\n        const img = new Image();\n        full.image = img;\n        full.imageLoaded = false;\n        full.imageBroken = false;\n        img.onload = () => (full.imageLoaded = true);\n        img.onerror = () => (full.imageBroken = true);\n        img.src = full.src;\n      }\n      this.animations[key] = full;\n    }\n  }\n\n  setState(state: string) {\n    if (this.state === state) return;\n    this.state = state;\n    this.frame = 0;\n    this.acc = 0;\n    const a = this.animations[state];\n    if (a) {\n      this.fps = a.fps;\n      this.loop = a.loop;\n    }\n  }\n\n  /**\n   * Fixed-timestep Update.\n   * @param dt Delta-Zeit in Sekunden\n   */\n  update(dt: number) {\n    const a = this.animations[this.state];\n    if (!a) return;\n    this.acc += dt;\n    const frameTime = 1 / (a.fps || this.fps);\n    while (this.acc >= frameTime) {\n      this.acc -= frameTime;\n      this.frame++;\n      if (this.frame >= a.frames) {\n        if (a.loop) this.frame = 0;\n        else this.frame = a.frames - 1;\n      }\n    }\n  }\n\n  /**\n   * Rendert aktuellen Frame.\n   */\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    flip = false\n  ) {\n    const a = this.animations[this.state];\n    const img = (a && a.image) || this.defaultImage;\n    if (!a || !img || a.imageBroken || !img.complete || img.naturalWidth === 0) {\n      // Fallback: graue Box\n      ctx.fillStyle = \"#666\";\n      ctx.fillRect(x, y, w, h);\n      return;\n    }\n    let sx = this.frame * (a.frameW || this.frameW);\n    let sy = 0;\n\n    // Atlas mode: use rects array if provided\n    if (a.rects && a.rects.length > 0) {\n      const r = a.rects[this.frame % a.rects.length];\n      sx = r.x;\n      sy = r.y;\n    }\n\n    ctx.save();\n    if (flip) {\n      ctx.translate(x + w, 0);\n      ctx.scale(-1, 1);\n      x = 0;\n    }\n    ctx.drawImage(img, sx, sy, a.frameW, a.frameH, x, y, w, h);\n    ctx.restore();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}