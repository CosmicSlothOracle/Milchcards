{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skank\\\\Videos\\\\Cards\\\\Milchcards\\\\src\\\\context\\\\GameContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { GameEngine } from '../engine/gameEngine';\n\n// Action types for the reducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Initial game state\nconst createInitialState = () => ({\n  actionPoints: {\n    1: 2,\n    2: 2\n  },\n  hands: {\n    1: [],\n    2: []\n  },\n  decks: {\n    1: [],\n    2: []\n  },\n  board: {\n    1: {\n      innen: [],\n      aussen: [],\n      sofort: []\n    },\n    2: {\n      innen: [],\n      aussen: [],\n      sofort: []\n    }\n  },\n  discard: [],\n  log: [],\n  round: 1,\n  current: 1,\n  passed: {\n    1: false,\n    2: false\n  },\n  actionsUsed: {\n    1: 0,\n    2: 0\n  },\n  permanentSlots: {\n    1: {\n      government: null,\n      public: null,\n      initiativePermanent: null\n    },\n    2: {\n      government: null,\n      public: null,\n      initiativePermanent: null\n    }\n  },\n  shields: new Set(),\n  traps: {\n    1: [],\n    2: []\n  },\n  activeRefresh: {\n    1: 0,\n    2: 0\n  },\n  roundsWon: {\n    1: 0,\n    2: 0\n  },\n  effectFlags: {\n    1: {\n      opportunistActive: false,\n      markZuckerbergUsed: false\n    },\n    2: {\n      opportunistActive: false,\n      markZuckerbergUsed: false\n    }\n  },\n  _effectQueue: []\n});\n\n// Game reducer\nfunction gameReducer(state, action) {\n  const engine = new GameEngine(state);\n  switch (action.type) {\n    case 'PLAY_CARD':\n      {\n        const success = engine.playCard(action.player, action.card, action.targetLane);\n        if (success) {\n          return engine.getState();\n        }\n        // If play failed, return current state unchanged\n        return state;\n      }\n    case 'START_TURN':\n      {\n        engine.startTurn(action.player);\n        return engine.getState();\n      }\n    case 'DRAW_CARDS':\n      {\n        engine.drawCards(action.player, action.amount);\n        return engine.getState();\n      }\n    case 'SET_STATE':\n      {\n        return action.state;\n      }\n    case 'RESET_GAME':\n      {\n        return createInitialState();\n      }\n    default:\n      return state;\n  }\n}\n\n// Context interface\n\n// Create context\nconst GameContext = /*#__PURE__*/createContext(undefined);\n\n// Provider component\n\nexport function GameProvider({\n  children,\n  initialState\n}) {\n  _s();\n  const [state, dispatch] = useReducer(gameReducer, initialState || createInitialState());\n\n  // Create engine instance for the current state\n  const engine = new GameEngine(state);\n  const value = {\n    state,\n    dispatch,\n    engine\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to use the game context\n_s(GameProvider, \"svfS6NnGFgeBSiwWNH30S2pBFxc=\");\n_c = GameProvider;\nexport function useGameContext() {\n  _s2();\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error('useGameContext must be used within a GameProvider');\n  }\n  return context;\n}\n\n// Convenience hooks for common operations\n_s2(useGameContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useGameState() {\n  _s3();\n  return useGameContext().state;\n}\n_s3(useGameState, \"UAOeGULbILi/HjYzF1ot3Su299A=\", false, function () {\n  return [useGameContext];\n});\nexport function useGameDispatch() {\n  _s4();\n  return useGameContext().dispatch;\n}\n_s4(useGameDispatch, \"UAOeGULbILi/HjYzF1ot3Su299A=\", false, function () {\n  return [useGameContext];\n});\nexport function useGameEngine() {\n  _s5();\n  return useGameContext().engine;\n}\n_s5(useGameEngine, \"UAOeGULbILi/HjYzF1ot3Su299A=\", false, function () {\n  return [useGameContext];\n});\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","GameEngine","jsxDEV","_jsxDEV","createInitialState","actionPoints","hands","decks","board","innen","aussen","sofort","discard","log","round","current","passed","actionsUsed","permanentSlots","government","public","initiativePermanent","shields","Set","traps","activeRefresh","roundsWon","effectFlags","opportunistActive","markZuckerbergUsed","_effectQueue","gameReducer","state","action","engine","type","success","playCard","player","card","targetLane","getState","startTurn","drawCards","amount","GameContext","undefined","GameProvider","children","initialState","_s","dispatch","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameContext","_s2","context","Error","useGameState","_s3","useGameDispatch","_s4","useGameEngine","_s5","$RefreshReg$"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/context/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { GameState, Player, Card } from '../types/game';\r\nimport { GameEngine } from '../engine/gameEngine';\r\n\r\n// Action types for the reducer\r\nexport type GameAction =\r\n  | { type: 'PLAY_CARD'; player: Player; card: Card; targetLane?: 'innen' | 'aussen' | 'sofort' }\r\n  | { type: 'START_TURN'; player: Player }\r\n  | { type: 'DRAW_CARDS'; player: Player; amount: number }\r\n  | { type: 'SET_STATE'; state: GameState }\r\n  | { type: 'RESET_GAME' };\r\n\r\n// Initial game state\r\nconst createInitialState = (): GameState => ({\r\n  actionPoints: { 1: 2, 2: 2 },\r\n  hands: { 1: [], 2: [] },\r\n  decks: { 1: [], 2: [] },\r\n  board: {\r\n    1: { innen: [], aussen: [], sofort: [] },\r\n    2: { innen: [], aussen: [], sofort: [] }\r\n  },\r\n  discard: [],\r\n  log: [],\r\n  round: 1,\r\n  current: 1,\r\n  passed: { 1: false, 2: false },\r\n  actionsUsed: { 1: 0, 2: 0 },\r\n      permanentSlots: { 1: { government: null, public: null, initiativePermanent: null }, 2: { government: null, public: null, initiativePermanent: null } },\r\n  shields: new Set(),\r\n  traps: { 1: [], 2: [] },\r\n  activeRefresh: { 1: 0, 2: 0 },\r\n  roundsWon: { 1: 0, 2: 0 },\r\n  effectFlags: {\r\n    1: { opportunistActive: false, markZuckerbergUsed: false },\r\n    2: { opportunistActive: false, markZuckerbergUsed: false }\r\n  },\r\n  _effectQueue: []\r\n});\r\n\r\n// Game reducer\r\nfunction gameReducer(state: GameState, action: GameAction): GameState {\r\n  const engine = new GameEngine(state);\r\n\r\n  switch (action.type) {\r\n    case 'PLAY_CARD': {\r\n      const success = engine.playCard(action.player, action.card, action.targetLane);\r\n      if (success) {\r\n        return engine.getState();\r\n      }\r\n      // If play failed, return current state unchanged\r\n      return state;\r\n    }\r\n\r\n    case 'START_TURN': {\r\n      engine.startTurn(action.player);\r\n      return engine.getState();\r\n    }\r\n\r\n    case 'DRAW_CARDS': {\r\n      engine.drawCards(action.player, action.amount);\r\n      return engine.getState();\r\n    }\r\n\r\n    case 'SET_STATE': {\r\n      return action.state;\r\n    }\r\n\r\n    case 'RESET_GAME': {\r\n      return createInitialState();\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Context interface\r\ninterface GameContextType {\r\n  state: GameState;\r\n  dispatch: React.Dispatch<GameAction>;\r\n  engine: GameEngine;\r\n}\r\n\r\n// Create context\r\nconst GameContext = createContext<GameContextType | undefined>(undefined);\r\n\r\n// Provider component\r\ninterface GameProviderProps {\r\n  children: ReactNode;\r\n  initialState?: GameState;\r\n}\r\n\r\nexport function GameProvider({ children, initialState }: GameProviderProps) {\r\n  const [state, dispatch] = useReducer(gameReducer, initialState || createInitialState());\r\n\r\n  // Create engine instance for the current state\r\n  const engine = new GameEngine(state);\r\n\r\n  const value: GameContextType = {\r\n    state,\r\n    dispatch,\r\n    engine\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook to use the game context\r\nexport function useGameContext(): GameContextType {\r\n  const context = useContext(GameContext);\r\n  if (context === undefined) {\r\n    throw new Error('useGameContext must be used within a GameProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Convenience hooks for common operations\r\nexport function useGameState(): GameState {\r\n  return useGameContext().state;\r\n}\r\n\r\nexport function useGameDispatch(): React.Dispatch<GameAction> {\r\n  return useGameContext().dispatch;\r\n}\r\n\r\nexport function useGameEngine(): GameEngine {\r\n  return useGameContext().engine;\r\n}\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAmB,OAAO;AAE/E,SAASC,UAAU,QAAQ,sBAAsB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,MAAMC,kBAAkB,GAAGA,CAAA,MAAkB;EAC3CC,YAAY,EAAE;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE;EAAE,CAAC;EAC5BC,KAAK,EAAE;IAAE,CAAC,EAAE,EAAE;IAAE,CAAC,EAAE;EAAG,CAAC;EACvBC,KAAK,EAAE;IAAE,CAAC,EAAE,EAAE;IAAE,CAAC,EAAE;EAAG,CAAC;EACvBC,KAAK,EAAE;IACL,CAAC,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IACxC,CAAC,EAAE;MAAEF,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG;EACzC,CAAC;EACDC,OAAO,EAAE,EAAE;EACXC,GAAG,EAAE,EAAE;EACPC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE;IAAE,CAAC,EAAE,KAAK;IAAE,CAAC,EAAE;EAAM,CAAC;EAC9BC,WAAW,EAAE;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE;EAAE,CAAC;EACvBC,cAAc,EAAE;IAAE,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI;MAAEC,MAAM,EAAE,IAAI;MAAEC,mBAAmB,EAAE;IAAK,CAAC;IAAE,CAAC,EAAE;MAAEF,UAAU,EAAE,IAAI;MAAEC,MAAM,EAAE,IAAI;MAAEC,mBAAmB,EAAE;IAAK;EAAE,CAAC;EAC1JC,OAAO,EAAE,IAAIC,GAAG,CAAC,CAAC;EAClBC,KAAK,EAAE;IAAE,CAAC,EAAE,EAAE;IAAE,CAAC,EAAE;EAAG,CAAC;EACvBC,aAAa,EAAE;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE;EAAE,CAAC;EAC7BC,SAAS,EAAE;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE;EAAE,CAAC;EACzBC,WAAW,EAAE;IACX,CAAC,EAAE;MAAEC,iBAAiB,EAAE,KAAK;MAAEC,kBAAkB,EAAE;IAAM,CAAC;IAC1D,CAAC,EAAE;MAAED,iBAAiB,EAAE,KAAK;MAAEC,kBAAkB,EAAE;IAAM;EAC3D,CAAC;EACDC,YAAY,EAAE;AAChB,CAAC,CAAC;;AAEF;AACA,SAASC,WAAWA,CAACC,KAAgB,EAAEC,MAAkB,EAAa;EACpE,MAAMC,MAAM,GAAG,IAAIjC,UAAU,CAAC+B,KAAK,CAAC;EAEpC,QAAQC,MAAM,CAACE,IAAI;IACjB,KAAK,WAAW;MAAE;QAChB,MAAMC,OAAO,GAAGF,MAAM,CAACG,QAAQ,CAACJ,MAAM,CAACK,MAAM,EAAEL,MAAM,CAACM,IAAI,EAAEN,MAAM,CAACO,UAAU,CAAC;QAC9E,IAAIJ,OAAO,EAAE;UACX,OAAOF,MAAM,CAACO,QAAQ,CAAC,CAAC;QAC1B;QACA;QACA,OAAOT,KAAK;MACd;IAEA,KAAK,YAAY;MAAE;QACjBE,MAAM,CAACQ,SAAS,CAACT,MAAM,CAACK,MAAM,CAAC;QAC/B,OAAOJ,MAAM,CAACO,QAAQ,CAAC,CAAC;MAC1B;IAEA,KAAK,YAAY;MAAE;QACjBP,MAAM,CAACS,SAAS,CAACV,MAAM,CAACK,MAAM,EAAEL,MAAM,CAACW,MAAM,CAAC;QAC9C,OAAOV,MAAM,CAACO,QAAQ,CAAC,CAAC;MAC1B;IAEA,KAAK,WAAW;MAAE;QAChB,OAAOR,MAAM,CAACD,KAAK;MACrB;IAEA,KAAK,YAAY;MAAE;QACjB,OAAO5B,kBAAkB,CAAC,CAAC;MAC7B;IAEA;MACE,OAAO4B,KAAK;EAChB;AACF;;AAEA;;AAOA;AACA,MAAMa,WAAW,gBAAG/C,aAAa,CAA8BgD,SAAS,CAAC;;AAEzE;;AAMA,OAAO,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAgC,CAAC,EAAE;EAAAC,EAAA;EAC1E,MAAM,CAAClB,KAAK,EAAEmB,QAAQ,CAAC,GAAGnD,UAAU,CAAC+B,WAAW,EAAEkB,YAAY,IAAI7C,kBAAkB,CAAC,CAAC,CAAC;;EAEvF;EACA,MAAM8B,MAAM,GAAG,IAAIjC,UAAU,CAAC+B,KAAK,CAAC;EAEpC,MAAMoB,KAAsB,GAAG;IAC7BpB,KAAK;IACLmB,QAAQ;IACRjB;EACF,CAAC;EAED,oBACE/B,OAAA,CAAC0C,WAAW,CAACQ,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAJ,QAAA,EAChCA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAAP,EAAA,CAnBgBH,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAoB5B,OAAO,SAASY,cAAcA,CAAA,EAAoB;EAAAC,GAAA;EAChD,MAAMC,OAAO,GAAG9D,UAAU,CAAC8C,WAAW,CAAC;EACvC,IAAIgB,OAAO,KAAKf,SAAS,EAAE;IACzB,MAAM,IAAIgB,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB;;AAEA;AAAAD,GAAA,CARgBD,cAAc;AAS9B,OAAO,SAASI,YAAYA,CAAA,EAAc;EAAAC,GAAA;EACxC,OAAOL,cAAc,CAAC,CAAC,CAAC3B,KAAK;AAC/B;AAACgC,GAAA,CAFeD,YAAY;EAAA,QACnBJ,cAAc;AAAA;AAGvB,OAAO,SAASM,eAAeA,CAAA,EAA+B;EAAAC,GAAA;EAC5D,OAAOP,cAAc,CAAC,CAAC,CAACR,QAAQ;AAClC;AAACe,GAAA,CAFeD,eAAe;EAAA,QACtBN,cAAc;AAAA;AAGvB,OAAO,SAASQ,aAAaA,CAAA,EAAe;EAAAC,GAAA;EAC1C,OAAOT,cAAc,CAAC,CAAC,CAACzB,MAAM;AAChC;AAACkC,GAAA,CAFeD,aAAa;EAAA,QACpBR,cAAc;AAAA;AAAA,IAAAD,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}