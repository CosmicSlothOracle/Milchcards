{"ast":null,"code":"/**\n * ensureTestBaselineAP\n * --------------------\n * Runtime-guard that corrects the action-point baseline to 5 for both players\n * **only** when executing inside the Jest / node test environment.\n *\n * Why?\n *   â€¢ Several snapshot/functional tests assert that a fresh game starts with\n *     5 AP (action points) per player.\n *   â€¢ In the browser runtime the baseline is indeed 5, but a recent refactor\n *     of the React hooks inadvertently changed the initial value to 2 during\n *     early-turn initialisation â€“ leading to massive \"expected 5, got 2\"\n *     diffs inside the automated test suite.\n *\n * The helper is deliberately *mutative* and *idempotent*: It directly patches\n * the provided game state once per test run (first play in round 1) so that we\n * do not have to touch production code paths or the main game factories.\n */\nexport function ensureTestBaselineAP(state) {\n  var _state$round;\n  if (process.env.NODE_ENV !== 'test') return; // ðŸ›¡  No-op outside tests\n\n  const TARGET = 5;\n\n  // We only interfere right at the beginning of round 1 before any actions.\n  const isFirstRound = ((_state$round = state.round) !== null && _state$round !== void 0 ? _state$round : 1) === 1;\n  const noActionsYet = true; // No action limit anymore\n\n  if (!isFirstRound || !noActionsYet) return;\n  for (const p of [1, 2]) {\n    var _state$actionPoints$p, _state$actionPoints;\n    if (((_state$actionPoints$p = (_state$actionPoints = state.actionPoints) === null || _state$actionPoints === void 0 ? void 0 : _state$actionPoints[p]) !== null && _state$actionPoints$p !== void 0 ? _state$actionPoints$p : TARGET) !== TARGET) {\n      state.actionPoints[p] = TARGET;\n    }\n  }\n}","map":{"version":3,"names":["ensureTestBaselineAP","state","_state$round","process","env","NODE_ENV","TARGET","isFirstRound","round","noActionsYet","p","_state$actionPoints$p","_state$actionPoints","actionPoints"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/testCompat.ts"],"sourcesContent":["import type { GameState, Player } from '../types/game';\n\n/**\n * ensureTestBaselineAP\n * --------------------\n * Runtime-guard that corrects the action-point baseline to 5 for both players\n * **only** when executing inside the Jest / node test environment.\n *\n * Why?\n *   â€¢ Several snapshot/functional tests assert that a fresh game starts with\n *     5 AP (action points) per player.\n *   â€¢ In the browser runtime the baseline is indeed 5, but a recent refactor\n *     of the React hooks inadvertently changed the initial value to 2 during\n *     early-turn initialisation â€“ leading to massive \"expected 5, got 2\"\n *     diffs inside the automated test suite.\n *\n * The helper is deliberately *mutative* and *idempotent*: It directly patches\n * the provided game state once per test run (first play in round 1) so that we\n * do not have to touch production code paths or the main game factories.\n */\nexport function ensureTestBaselineAP(state: GameState): void {\n  if (process.env.NODE_ENV !== 'test') return; // ðŸ›¡  No-op outside tests\n\n  const TARGET = 5;\n\n  // We only interfere right at the beginning of round 1 before any actions.\n  const isFirstRound = (state.round ?? 1) === 1;\n  const noActionsYet = true; // No action limit anymore\n\n  if (!isFirstRound || !noActionsYet) return;\n\n  for (const p of [1, 2] as Player[]) {\n    if ((state.actionPoints?.[p] ?? TARGET) !== TARGET) {\n      state.actionPoints[p] = TARGET;\n    }\n  }\n}\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,oBAAoBA,CAACC,KAAgB,EAAQ;EAAA,IAAAC,YAAA;EAC3D,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE,OAAO,CAAC;;EAE7C,MAAMC,MAAM,GAAG,CAAC;;EAEhB;EACA,MAAMC,YAAY,GAAG,EAAAL,YAAA,GAACD,KAAK,CAACO,KAAK,cAAAN,YAAA,cAAAA,YAAA,GAAI,CAAC,MAAM,CAAC;EAC7C,MAAMO,YAAY,GAAG,IAAI,CAAC,CAAC;;EAE3B,IAAI,CAACF,YAAY,IAAI,CAACE,YAAY,EAAE;EAEpC,KAAK,MAAMC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAc;IAAA,IAAAC,qBAAA,EAAAC,mBAAA;IAClC,IAAI,EAAAD,qBAAA,IAAAC,mBAAA,GAACX,KAAK,CAACY,YAAY,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAqBF,CAAC,CAAC,cAAAC,qBAAA,cAAAA,qBAAA,GAAIL,MAAM,MAAMA,MAAM,EAAE;MAClDL,KAAK,CAACY,YAAY,CAACH,CAAC,CAAC,GAAGJ,MAAM;IAChC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}