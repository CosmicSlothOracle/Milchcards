{"ast":null,"code":"import{getStrongestGovernment}from'./targets';import{logAP,logDraw,logDiscardRandom,logDeactivateRandom,logBuffStrongest,logShield,logDeactivateCard,logInitiativeAura,logAiWeiwei,logPlattformBonus,logOpportunist}from'./logs';import{getGlobalRNG}from'../services/rng';function other(p){return p===1?2:1;}function logPush(state,msg){state.log.push(msg);}function strongestGov(state,p){const row=state.board[p].aussen;if(!row.length)return null;const alive=row.filter(c=>!c.deactivated);if(alive.length===0)return null;return alive.slice().sort((a,b)=>b.influence+(b.tempBuffs||0)-(b.tempDebuffs||0)-(a.influence+(a.tempBuffs||0)-(a.tempDebuffs||0)))[0];}function publicNames(state,p){return state.board[p].innen.map(c=>c.name);}function hasPublic(state,p,name){return publicNames(state,p).includes(name);}function findCardByUidOnBoard(state,uid){for(const p of[1,2]){for(const lane of['innen','aussen','sofort']){const arr=state.board[p][lane];const hit=arr.find(c=>c.uid===uid);if(hit)return hit;}}return null;}export function resolveQueue(state,events){const rng=getGlobalRNG();// Single pass FIFO\nwhile(events.length){const ev=events.shift();switch(ev.type){case'LOG':{logPush(state,ev.msg);break;}case'ADD_AP':{const cur=state.actionPoints[ev.player];const next=Math.max(0,cur+ev.amount);state.actionPoints[ev.player]=next;logPush(state,logAP(ev.player,cur,next));break;}case'DRAW_CARDS':{for(let i=0;i<ev.amount;i++){const top=state.decks[ev.player].shift();if(top){state.hands[ev.player].push(top);logPush(state,logDraw(ev.player,top.name));}}break;}case'DISCARD_RANDOM_FROM_HAND':{const hand=state.hands[ev.player];for(let i=0;i<ev.amount&&hand.length>0;i++){const idx=rng.randomInt(hand.length);const[card]=hand.splice(idx,1);state.discard.push(card);logPush(state,logDiscardRandom(ev.player,card.name));}break;}case'DEACTIVATE_RANDOM_HAND':{// Deaktivieren von Handkarten (nicht entfernen)\nconst hand=state.hands[ev.player];const activeCards=hand.filter(c=>!c.deactivated);for(let i=0;i<ev.amount&&activeCards.length>0;i++){const card=rng.pick(activeCards);if(card){card.deactivated=true;logPush(state,logDeactivateRandom(ev.player,card.name));// Entferne aus activeCards für nächste Iteration\nconst idx=activeCards.indexOf(card);if(idx>-1)activeCards.splice(idx,1);}}break;}// Legacy cases - removed\n// SET_DISCOUNT and REFUND_NEXT_INITIATIVE are no longer supported\n// Use ADD_AP instead\ncase'GRANT_SHIELD':{if(!state.shields)state.shields=new Set();state.shields.add(ev.targetUid);logPush(state,logShield(ev.targetUid));break;}case'DEACTIVATE_CARD':{const card=findCardByUidOnBoard(state,ev.targetUid);if(card){card.deactivated=true;logPush(state,logDeactivateCard(card.name));}break;}case'BUFF_STRONGEST_GOV':case'ADJUST_INFLUENCE':{// Alias auf BUFF_STRONGEST_GOV\nconst player=ev.player;const amount=ev.amount;const tgt=getStrongestGovernment(state,player);if(tgt){var _state$effectFlags$ot;if(amount>=0){tgt.tempBuffs=(tgt.tempBuffs||0)+amount;}else{tgt.tempDebuffs=(tgt.tempDebuffs||0)+Math.abs(amount);}logPush(state,logBuffStrongest(player,tgt.name,amount));// Opportunist-Spiegelung (falls aktiv beim Gegner)\nif((_state$effectFlags$ot=state.effectFlags[other(player)])!==null&&_state$effectFlags$ot!==void 0&&_state$effectFlags$ot.opportunistActive&&amount>0){const mirror={type:'BUFF_STRONGEST_GOV',player:other(player),amount};events.unshift(mirror);logPush(state,logOpportunist(other(player),amount));}}break;}case'INITIATIVE_ACTIVATED':{const p=ev.player;const opp=other(p);// Cluster-3: temporäre Auren für Sofort-Initiativen (namenbasiert, keine Tags)\nlet delta=0;delta+=state.effectFlags[p].initiativeInfluenceBonus||0;// z.B. +1 (Doudna/Fauci)\ndelta-=state.effectFlags[opp].initiativeInfluencePenaltyForOpponent||0;// z.B. -1 (Chomsky)\nif(delta!==0){events.unshift({type:'BUFF_STRONGEST_GOV',player:p,amount:delta});logPush(state,logInitiativeAura(p,delta));}if(state.effectFlags[p].initiativeOnPlayDraw1Ap1){events.unshift({type:'ADD_AP',player:p,amount:1});events.unshift({type:'DRAW_CARDS',player:p,amount:1});logPush(state,logAiWeiwei());}// Plattform: Einmal pro Runde nach Initiative +1 AP, wenn Mark Zuckerberg liegt und nicht verbraucht\nif(hasPublic(state,p,'Mark Zuckerberg')&&!state.effectFlags[p].markZuckerbergUsed){state.effectFlags[p].markZuckerbergUsed=true;events.unshift({type:'ADD_AP',player:p,amount:1});logPush(state,logPlattformBonus());}break;}case'TRAP_TRIGGERED':{// This is a notification event, actual effects are handled separately\nconst trapId=ev.trapId;const targetId=ev.targetId;const trapCard=findCardByUidOnBoard(state,trapId)||state.traps[ev.player].find(c=>c.uid===trapId);const targetCard=findCardByUidOnBoard(state,targetId);if(trapCard&&targetCard){logPush(state,\"\\uD83E\\uDEA4 \".concat(trapCard.name,\" wurde gegen \").concat(targetCard.name,\" ausgel\\xF6st!\"));}break;}}}}","map":{"version":3,"names":["getStrongestGovernment","logAP","logDraw","logDiscardRandom","logDeactivateRandom","logBuffStrongest","logShield","logDeactivateCard","logInitiativeAura","logAiWeiwei","logPlattformBonus","logOpportunist","getGlobalRNG","other","p","logPush","state","msg","log","push","strongestGov","row","board","aussen","length","alive","filter","c","deactivated","slice","sort","a","b","influence","tempBuffs","tempDebuffs","publicNames","innen","map","name","hasPublic","includes","findCardByUidOnBoard","uid","lane","arr","hit","find","resolveQueue","events","rng","ev","shift","type","cur","actionPoints","player","next","Math","max","amount","i","top","decks","hands","hand","idx","randomInt","card","splice","discard","activeCards","pick","indexOf","shields","Set","add","targetUid","tgt","_state$effectFlags$ot","abs","effectFlags","opportunistActive","mirror","unshift","opp","delta","initiativeInfluenceBonus","initiativeInfluencePenaltyForOpponent","initiativeOnPlayDraw1Ap1","markZuckerbergUsed","trapId","targetId","trapCard","traps","targetCard","concat"],"sources":["C:/Users/skank/Videos/Cards/Milchcards/src/utils/queue.ts"],"sourcesContent":["import { GameState, Player, PoliticianCard, Card } from '../types/game';\r\nimport { EffectEvent } from '../types/effects';\r\nimport { getStrongestGovernment } from './targets';\r\nimport { AP_CAP, MAX_DISCOUNT, MAX_REFUND } from '../config/gameConstants';\r\nimport {\r\n  logAP, logDiscount, logRefund, logDraw, logDiscardRandom,\r\n  logDeactivateRandom, logBuffStrongest, logShield, logDeactivateCard,\r\n  logInitiativeAura, logAiWeiwei, logPlattformBonus, logOpportunist\r\n} from './logs';\r\nimport { getGlobalRNG } from '../services/rng';\r\n\r\nfunction other(p: Player): Player { return p === 1 ? 2 : 1; }\r\nfunction logPush(state: GameState, msg: string) { state.log.push(msg); }\r\n\r\nfunction strongestGov(state: GameState, p: Player): PoliticianCard | null {\r\n  const row = state.board[p].aussen as PoliticianCard[];\r\n  if (!row.length) return null;\r\n  const alive = row.filter(c => !c.deactivated);\r\n  if (alive.length === 0) return null;\r\n  return alive.slice().sort((a,b) => (b.influence + (b.tempBuffs||0) - (b.tempDebuffs||0)) - (a.influence + (a.tempBuffs||0) - (a.tempDebuffs||0)))[0];\r\n}\r\n\r\nfunction publicNames(state: GameState, p: Player): string[] {\r\n  return state.board[p].innen.map(c => c.name);\r\n}\r\n\r\nfunction hasPublic(state: GameState, p: Player, name: string): boolean {\r\n  return publicNames(state, p).includes(name);\r\n}\r\n\r\nfunction findCardByUidOnBoard(state: GameState, uid: number): Card | null {\r\n  for (const p of [1,2] as const) {\r\n    for (const lane of ['innen','aussen','sofort'] as const) {\r\n      const arr = state.board[p][lane];\r\n      const hit = arr.find(c => c.uid === uid);\r\n      if (hit) return hit;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function resolveQueue(state: GameState, events: EffectEvent[]) {\r\n  const rng = getGlobalRNG();\r\n\r\n  // Single pass FIFO\r\n  while (events.length) {\r\n    const ev = events.shift()!;\r\n\r\n    switch (ev.type) {\r\n      case 'LOG': {\r\n        logPush(state, ev.msg);\r\n        break;\r\n      }\r\n\r\n      case 'ADD_AP': {\r\n        const cur = state.actionPoints[ev.player];\r\n        const next = Math.max(0, cur + ev.amount);\r\n        state.actionPoints[ev.player] = next;\r\n        logPush(state, logAP(ev.player, cur, next));\r\n        break;\r\n      }\r\n\r\n      case 'DRAW_CARDS': {\r\n        for (let i = 0; i < ev.amount; i++) {\r\n          const top = state.decks[ev.player].shift();\r\n          if (top) {\r\n            state.hands[ev.player].push(top);\r\n            logPush(state, logDraw(ev.player, top.name));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'DISCARD_RANDOM_FROM_HAND': {\r\n        const hand = state.hands[ev.player];\r\n        for (let i = 0; i < ev.amount && hand.length > 0; i++) {\r\n          const idx = rng.randomInt(hand.length);\r\n          const [card] = hand.splice(idx, 1);\r\n          state.discard.push(card);\r\n          logPush(state, logDiscardRandom(ev.player, card.name));\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'DEACTIVATE_RANDOM_HAND': {\r\n        // Deaktivieren von Handkarten (nicht entfernen)\r\n        const hand = state.hands[ev.player];\r\n        const activeCards = hand.filter(c => !(c as any).deactivated);\r\n        for (let i = 0; i < ev.amount && activeCards.length > 0; i++) {\r\n          const card = rng.pick(activeCards);\r\n          if (card) {\r\n            (card as any).deactivated = true;\r\n            logPush(state, logDeactivateRandom(ev.player, card.name));\r\n            // Entferne aus activeCards für nächste Iteration\r\n            const idx = activeCards.indexOf(card);\r\n            if (idx > -1) activeCards.splice(idx, 1);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      // Legacy cases - removed\r\n      // SET_DISCOUNT and REFUND_NEXT_INITIATIVE are no longer supported\r\n      // Use ADD_AP instead\r\n\r\n      case 'GRANT_SHIELD': {\r\n        if (!state.shields) state.shields = new Set();\r\n        state.shields.add(ev.targetUid);\r\n        logPush(state, logShield(ev.targetUid));\r\n        break;\r\n      }\r\n\r\n      case 'DEACTIVATE_CARD': {\r\n        const card = findCardByUidOnBoard(state, ev.targetUid);\r\n        if (card) {\r\n          (card as any).deactivated = true;\r\n          logPush(state, logDeactivateCard(card.name));\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'BUFF_STRONGEST_GOV':\r\n      case 'ADJUST_INFLUENCE': { // Alias auf BUFF_STRONGEST_GOV\r\n        const player = ev.player;\r\n        const amount = (ev as any).amount;\r\n        const tgt = getStrongestGovernment(state, player);\r\n        if (tgt) {\r\n          if (amount >= 0) {\r\n            (tgt as PoliticianCard).tempBuffs = ((tgt as PoliticianCard).tempBuffs || 0) + amount;\r\n          } else {\r\n            (tgt as PoliticianCard).tempDebuffs = ((tgt as PoliticianCard).tempDebuffs || 0) + Math.abs(amount);\r\n          }\r\n          logPush(state, logBuffStrongest(player, tgt.name, amount));\r\n\r\n          // Opportunist-Spiegelung (falls aktiv beim Gegner)\r\n          if (state.effectFlags[other(player)]?.opportunistActive && amount > 0) {\r\n            const mirror = { type: 'BUFF_STRONGEST_GOV', player: other(player), amount } as EffectEvent;\r\n            events.unshift(mirror);\r\n            logPush(state, logOpportunist(other(player), amount));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'INITIATIVE_ACTIVATED': {\r\n        const p = ev.player;\r\n        const opp = other(p);\r\n\r\n        // Cluster-3: temporäre Auren für Sofort-Initiativen (namenbasiert, keine Tags)\r\n        let delta = 0;\r\n        delta += state.effectFlags[p].initiativeInfluenceBonus || 0;                 // z.B. +1 (Doudna/Fauci)\r\n        delta -= state.effectFlags[opp].initiativeInfluencePenaltyForOpponent || 0;  // z.B. -1 (Chomsky)\r\n\r\n        if (delta !== 0) {\r\n          events.unshift({ type: 'BUFF_STRONGEST_GOV', player: p, amount: delta });\r\n          logPush(state, logInitiativeAura(p, delta));\r\n        }\r\n\r\n        if (state.effectFlags[p].initiativeOnPlayDraw1Ap1) {\r\n          events.unshift({ type: 'ADD_AP', player: p, amount: 1 });\r\n          events.unshift({ type: 'DRAW_CARDS', player: p, amount: 1 });\r\n          logPush(state, logAiWeiwei());\r\n        }\r\n\r\n        // Plattform: Einmal pro Runde nach Initiative +1 AP, wenn Mark Zuckerberg liegt und nicht verbraucht\r\n        if (hasPublic(state, p, 'Mark Zuckerberg') && !state.effectFlags[p].markZuckerbergUsed) {\r\n          state.effectFlags[p].markZuckerbergUsed = true;\r\n          events.unshift({ type: 'ADD_AP', player: p, amount: 1 });\r\n          logPush(state, logPlattformBonus());\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'TRAP_TRIGGERED': {\r\n        // This is a notification event, actual effects are handled separately\r\n        const trapId = ev.trapId;\r\n        const targetId = ev.targetId;\r\n        const trapCard = findCardByUidOnBoard(state, trapId) || state.traps[ev.player].find(c => c.uid === trapId);\r\n        const targetCard = findCardByUidOnBoard(state, targetId);\r\n\r\n        if (trapCard && targetCard) {\r\n          logPush(state, `🪤 ${trapCard.name} wurde gegen ${targetCard.name} ausgelöst!`);\r\n        }\r\n        break;\r\n      }\r\n\r\n    }\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}